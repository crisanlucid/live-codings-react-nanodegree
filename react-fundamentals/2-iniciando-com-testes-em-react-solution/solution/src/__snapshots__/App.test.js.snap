// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[Component] App mounts correctly 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": App {
      "_reactInternalFiber": FiberNode {
        "_debugID": 4,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 3,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "firstEffect": FiberNode {
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
              "lineNumber": 60,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 61,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 62,
                },
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "logo",
                  "className": "App-logo",
                  "src": "logo.svg",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 63,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "To Do List",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <h2>
                    To Do List
</h2>,
                  "tag": 5,
                  "type": "h2",
                  "updateQueue": null,
                },
                "stateNode": <img
                  src="logo.svg"
                  class="App-logo"
                  alt="logo"
/>,
                "tag": 5,
                "type": "img",
                "updateQueue": null,
              },
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <img
                    alt="logo"
                    className="App-logo"
                    src="logo.svg"
/>,
                  <h2>
                    To Do List
</h2>,
                ],
                "className": "App-header",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 65,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 66,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 68,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 13,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                        "lineNumber": 9,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 14,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 10,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "To Do",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 15,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 11,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 17,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 12,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 18,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 13,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "placeholder": "Create new task",
                                "type": "text",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 19,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 14,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 1,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Add Task",
                                  "type": "submit",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <button
                                  type="submit"
>
                                  Add Task
</button>,
                                "tag": 5,
                                "type": "button",
                                "updateQueue": null,
                              },
                              "stateNode": <input
                                type="text"
                                placeholder="Create new task"
/>,
                              "tag": 5,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <input
                                  placeholder="Create new task"
                                  type="text"
/>,
                                <button
                                  type="submit"
>
                                  Add Task
</button>,
                              ],
                              "onSubmit": [Function],
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <form>
                              <input
                                                            type="text"
                                                            placeholder="Create new task"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "tag": 5,
                            "type": "form",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "firstEffect": null,
                          "index": 1,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <form
                              onSubmit={[Function]}
>
                              <input
                                                            placeholder="Create new task"
                                                            type="text"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "test": true,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 16,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 19,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 2,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [],
                              "className": "list-items",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <ul
                              class="list-items"
/>,
                            "tag": 5,
                            "type": "ul",
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": <h3>
                          To Do
</h3>,
                        "tag": 5,
                        "type": "h3",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <h3>
                            To Do
</h3>,
                          <If
                            test={true}
>
                            <form
                                                        onSubmit={[Function]}
                            >
                                                        <input
                                                                                    placeholder="Create new task"
                                                                                    type="text"
                                                        />
                                                        <button
                                                                                    type="submit"
                                                        >
                                                                                    Add Task
                                                        </button>
                            </form>
</If>,
                          <ul
                            className="list-items"
>
                            
</ul>,
                        ],
                        "className": "column-list",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="column-list"
>
                        <h3>
                                                To Do
                        </h3>
                        <form>
                                                <input
                                                                        type="text"
                                                                        placeholder="Create new task"
                                                />
                                                <button
                                                                        type="submit"
                                                >
                                                                        Add Task
                                                </button>
                        </form>
                        <ul
                                                class="list-items"
                        />
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": "To Do",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "addTask": [Function],
                      "items": Array [],
                      "title": "To Do",
                      "updateTask": [Function],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 68,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 20,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 10,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Done",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 22,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 11,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 1,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <form
                                onSubmit={[Function]}
>
                                <input
                                                                placeholder="Create new task"
                                                                type="text"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "test": false,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 23,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 19,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 2,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [],
                                "className": "list-items",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <ul
                                class="list-items"
/>,
                              "tag": 5,
                              "type": "ul",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": <h3>
                            Done
</h3>,
                          "tag": 5,
                          "type": "h3",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h3>
                              Done
</h3>,
                            <If
                              test={false}
>
                              <form
                                                            onSubmit={[Function]}
                              >
                                                            <input
                                                                                          placeholder="Create new task"
                                                                                          type="text"
                                                            />
                                                            <button
                                                                                          type="submit"
                                                            >
                                                                                          Add Task
                                                            </button>
                              </form>
</If>,
                            <ul
                              className="list-items"
>
                              
</ul>,
                          ],
                          "className": "column-list",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div
                          class="column-list"
>
                          <h3>
                                                    Done
                          </h3>
                          <ul
                                                    class="list-items"
                          />
</div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": "Done",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "addTask": [Function],
                        "items": Array [],
                        "title": "Done",
                        "updateTask": [Function],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <ColumnList
                        addTask={[Function]}
                        items={Array []}
                        title="To Do"
                        updateTask={[Function]}
/>,
                      <ColumnList
                        addTask={[Function]}
                        items={Array []}
                        title="Done"
                        updateTask={[Function]}
/>,
                    ],
                    "className": "app-lists",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="app-lists"
>
                    <div
                                        class="column-list"
                    >
                                        <h3>
                                                            To Do
                                        </h3>
                                        <form>
                                                            <input
                                                                                type="text"
                                                                                placeholder="Create new task"
                                                            />
                                                            <button
                                                                                type="submit"
                                                            >
                                                                                Add Task
                                                            </button>
                                        </form>
                                        <ul
                                                            class="list-items"
                                        />
                    </div>
                    <div
                                        class="column-list"
                    >
                                        <h3>
                                                            Done
                                        </h3>
                                        <ul
                                                            class="list-items"
                                        />
                    </div>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <div
                    className="app-lists"
>
                    <ColumnList
                                        addTask={[Function]}
                                        items={Array []}
                                        title="To Do"
                                        updateTask={[Function]}
                    />
                    <ColumnList
                                        addTask={[Function]}
                                        items={Array []}
                                        title="Done"
                                        updateTask={[Function]}
                    />
</div>,
                  "className": "App-container",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="App-container"
>
                  <div
                                    class="app-lists"
                  >
                                    <div
                                                      class="column-list"
                                    >
                                                      <h3>
                                                                        To Do
                                                      </h3>
                                                      <form>
                                                                        <input
                                                                                          type="text"
                                                                                          placeholder="Create new task"
                                                                        />
                                                                        <button
                                                                                          type="submit"
                                                                        >
                                                                                          Add Task
                                                                        </button>
                                                      </form>
                                                      <ul
                                                                        class="list-items"
                                                      />
                                    </div>
                                    <div
                                                      class="column-list"
                                    >
                                                      <h3>
                                                                        Done
                                                      </h3>
                                                      <ul
                                                                        class="list-items"
                                                      />
                                    </div>
                  </div>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <div
                class="App-header"
>
                <img
                                src="logo.svg"
                                class="App-logo"
                                alt="logo"
                />
                <h2>
                                To Do List
                </h2>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <div
                  className="App-header"
>
                  <img
                                    alt="logo"
                                    className="App-logo"
                                    src="logo.svg"
                  />
                  <h2>
                                    To Do List
                  </h2>
</div>,
                <div
                  className="App-container"
>
                  <div
                                    className="app-lists"
                  >
                                    <ColumnList
                                                      addTask={[Function]}
                                                      items={Array []}
                                                      title="To Do"
                                                      updateTask={[Function]}
                                    />
                                    <ColumnList
                                                      addTask={[Function]}
                                                      items={Array []}
                                                      title="Done"
                                                      updateTask={[Function]}
                                    />
                  </div>
</div>,
              ],
              "className": "App",
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "pendingWorkPriority": 0,
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="App"
>
              <div
                            class="App-header"
              >
                            <img
                                          src="logo.svg"
                                          class="App-logo"
                                          alt="logo"
                            />
                            <h2>
                                          To Do List
                            </h2>
              </div>
              <div
                            class="App-container"
              >
                            <div
                                          class="app-lists"
                            >
                                          <div
                                                        class="column-list"
                                          >
                                                        <h3>
                                                                      To Do
                                                        </h3>
                                                        <form>
                                                                      <input
                                                                                    type="text"
                                                                                    placeholder="Create new task"
                                                                      />
                                                                      <button
                                                                                    type="submit"
                                                                      >
                                                                                    Add Task
                                                                      </button>
                                                        </form>
                                                        <ul
                                                                      class="list-items"
                                                        />
                                          </div>
                                          <div
                                                        class="column-list"
                                          >
                                                        <h3>
                                                                      Done
                                                        </h3>
                                                        <ul
                                                                      class="list-items"
                                                        />
                                          </div>
                            </div>
              </div>
</div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
              "lineNumber": 60,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 61,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 62,
                },
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "logo",
                  "className": "App-logo",
                  "src": "logo.svg",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 63,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "To Do List",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <h2>
                    To Do List
</h2>,
                  "tag": 5,
                  "type": "h2",
                  "updateQueue": null,
                },
                "stateNode": <img
                  src="logo.svg"
                  class="App-logo"
                  alt="logo"
/>,
                "tag": 5,
                "type": "img",
                "updateQueue": null,
              },
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <img
                    alt="logo"
                    className="App-logo"
                    src="logo.svg"
/>,
                  <h2>
                    To Do List
</h2>,
                ],
                "className": "App-header",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 65,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 66,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 68,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 13,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                        "lineNumber": 9,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 14,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 10,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "To Do",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 15,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 11,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 17,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 12,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 18,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 13,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "placeholder": "Create new task",
                                "type": "text",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 19,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 14,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 1,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Add Task",
                                  "type": "submit",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <button
                                  type="submit"
>
                                  Add Task
</button>,
                                "tag": 5,
                                "type": "button",
                                "updateQueue": null,
                              },
                              "stateNode": <input
                                type="text"
                                placeholder="Create new task"
/>,
                              "tag": 5,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <input
                                  placeholder="Create new task"
                                  type="text"
/>,
                                <button
                                  type="submit"
>
                                  Add Task
</button>,
                              ],
                              "onSubmit": [Function],
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <form>
                              <input
                                                            type="text"
                                                            placeholder="Create new task"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "tag": 5,
                            "type": "form",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "firstEffect": null,
                          "index": 1,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <form
                              onSubmit={[Function]}
>
                              <input
                                                            placeholder="Create new task"
                                                            type="text"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "test": true,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 16,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 19,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 2,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [],
                              "className": "list-items",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <ul
                              class="list-items"
/>,
                            "tag": 5,
                            "type": "ul",
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": <h3>
                          To Do
</h3>,
                        "tag": 5,
                        "type": "h3",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <h3>
                            To Do
</h3>,
                          <If
                            test={true}
>
                            <form
                                                        onSubmit={[Function]}
                            >
                                                        <input
                                                                                    placeholder="Create new task"
                                                                                    type="text"
                                                        />
                                                        <button
                                                                                    type="submit"
                                                        >
                                                                                    Add Task
                                                        </button>
                            </form>
</If>,
                          <ul
                            className="list-items"
>
                            
</ul>,
                        ],
                        "className": "column-list",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="column-list"
>
                        <h3>
                                                To Do
                        </h3>
                        <form>
                                                <input
                                                                        type="text"
                                                                        placeholder="Create new task"
                                                />
                                                <button
                                                                        type="submit"
                                                >
                                                                        Add Task
                                                </button>
                        </form>
                        <ul
                                                class="list-items"
                        />
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": "To Do",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "addTask": [Function],
                      "items": Array [],
                      "title": "To Do",
                      "updateTask": [Function],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 68,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 20,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 10,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Done",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 22,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 11,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 1,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <form
                                onSubmit={[Function]}
>
                                <input
                                                                placeholder="Create new task"
                                                                type="text"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "test": false,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 23,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 19,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 2,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [],
                                "className": "list-items",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <ul
                                class="list-items"
/>,
                              "tag": 5,
                              "type": "ul",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": <h3>
                            Done
</h3>,
                          "tag": 5,
                          "type": "h3",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h3>
                              Done
</h3>,
                            <If
                              test={false}
>
                              <form
                                                            onSubmit={[Function]}
                              >
                                                            <input
                                                                                          placeholder="Create new task"
                                                                                          type="text"
                                                            />
                                                            <button
                                                                                          type="submit"
                                                            >
                                                                                          Add Task
                                                            </button>
                              </form>
</If>,
                            <ul
                              className="list-items"
>
                              
</ul>,
                          ],
                          "className": "column-list",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div
                          class="column-list"
>
                          <h3>
                                                    Done
                          </h3>
                          <ul
                                                    class="list-items"
                          />
</div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": "Done",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "addTask": [Function],
                        "items": Array [],
                        "title": "Done",
                        "updateTask": [Function],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <ColumnList
                        addTask={[Function]}
                        items={Array []}
                        title="To Do"
                        updateTask={[Function]}
/>,
                      <ColumnList
                        addTask={[Function]}
                        items={Array []}
                        title="Done"
                        updateTask={[Function]}
/>,
                    ],
                    "className": "app-lists",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="app-lists"
>
                    <div
                                        class="column-list"
                    >
                                        <h3>
                                                            To Do
                                        </h3>
                                        <form>
                                                            <input
                                                                                type="text"
                                                                                placeholder="Create new task"
                                                            />
                                                            <button
                                                                                type="submit"
                                                            >
                                                                                Add Task
                                                            </button>
                                        </form>
                                        <ul
                                                            class="list-items"
                                        />
                    </div>
                    <div
                                        class="column-list"
                    >
                                        <h3>
                                                            Done
                                        </h3>
                                        <ul
                                                            class="list-items"
                                        />
                    </div>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <div
                    className="app-lists"
>
                    <ColumnList
                                        addTask={[Function]}
                                        items={Array []}
                                        title="To Do"
                                        updateTask={[Function]}
                    />
                    <ColumnList
                                        addTask={[Function]}
                                        items={Array []}
                                        title="Done"
                                        updateTask={[Function]}
                    />
</div>,
                  "className": "App-container",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="App-container"
>
                  <div
                                    class="app-lists"
                  >
                                    <div
                                                      class="column-list"
                                    >
                                                      <h3>
                                                                        To Do
                                                      </h3>
                                                      <form>
                                                                        <input
                                                                                          type="text"
                                                                                          placeholder="Create new task"
                                                                        />
                                                                        <button
                                                                                          type="submit"
                                                                        >
                                                                                          Add Task
                                                                        </button>
                                                      </form>
                                                      <ul
                                                                        class="list-items"
                                                      />
                                    </div>
                                    <div
                                                      class="column-list"
                                    >
                                                      <h3>
                                                                        Done
                                                      </h3>
                                                      <ul
                                                                        class="list-items"
                                                      />
                                    </div>
                  </div>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <div
                class="App-header"
>
                <img
                                src="logo.svg"
                                class="App-logo"
                                alt="logo"
                />
                <h2>
                                To Do List
                </h2>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <div
                  className="App-header"
>
                  <img
                                    alt="logo"
                                    className="App-logo"
                                    src="logo.svg"
                  />
                  <h2>
                                    To Do List
                  </h2>
</div>,
                <div
                  className="App-container"
>
                  <div
                                    className="app-lists"
                  >
                                    <ColumnList
                                                      addTask={[Function]}
                                                      items={Array []}
                                                      title="To Do"
                                                      updateTask={[Function]}
                                    />
                                    <ColumnList
                                                      addTask={[Function]}
                                                      items={Array []}
                                                      title="Done"
                                                      updateTask={[Function]}
                                    />
                  </div>
</div>,
              ],
              "className": "App",
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "pendingWorkPriority": 0,
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="App"
>
              <div
                            class="App-header"
              >
                            <img
                                          src="logo.svg"
                                          class="App-logo"
                                          alt="logo"
                            />
                            <h2>
                                          To Do List
                            </h2>
              </div>
              <div
                            class="App-container"
              >
                            <div
                                          class="app-lists"
                            >
                                          <div
                                                        class="column-list"
                                          >
                                                        <h3>
                                                                      To Do
                                                        </h3>
                                                        <form>
                                                                      <input
                                                                                    type="text"
                                                                                    placeholder="Create new task"
                                                                      />
                                                                      <button
                                                                                    type="submit"
                                                                      >
                                                                                    Add Task
                                                                      </button>
                                                        </form>
                                                        <ul
                                                                      class="list-items"
                                                        />
                                          </div>
                                          <div
                                                        class="column-list"
                                          >
                                                        <h3>
                                                                      Done
                                                        </h3>
                                                        <ul
                                                                      class="list-items"
                                                        />
                                          </div>
                            </div>
              </div>
</div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
          },
          "nextEffect": null,
          "pendingProps": null,
          "pendingWorkPriority": 0,
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 1,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="App"
                  >
                                    <div
                                                      class="App-header"
                                    >
                                                      <img
                                                                        src="logo.svg"
                                                                        class="App-logo"
                                                                        alt="logo"
                                                      />
                                                      <h2>
                                                                        To Do List
                                                      </h2>
                                    </div>
                                    <div
                                                      class="App-container"
                                    >
                                                      <div
                                                                        class="app-lists"
                                                      >
                                                                        <div
                                                                                          class="column-list"
                                                                        >
                                                                                          <h3>
                                                                                                            To Do
                                                                                          </h3>
                                                                                          <form>
                                                                                                            <input
                                                                                                                              type="text"
                                                                                                                              placeholder="Create new task"
                                                                                                            />
                                                                                                            <button
                                                                                                                              type="submit"
                                                                                                            >
                                                                                                                              Add Task
                                                                                                            </button>
                                                                                          </form>
                                                                                          <ul
                                                                                                            class="list-items"
                                                                                          />
                                                                        </div>
                                                                        <div
                                                                                          class="column-list"
                                                                        >
                                                                                          <h3>
                                                                                                            Done
                                                                                          </h3>
                                                                                          <ul
                                                                                                            class="list-items"
                                                                                          />
                                                                        </div>
                                                      </div>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "isScheduled": false,
                "nextScheduledRoot": null,
                "pendingContext": null,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "callbackList": null,
                "first": Object {
                  "callback": null,
                  "isForced": false,
                  "isReplace": false,
                  "isTopLevelUnmount": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "priorityLevel": 1,
                },
                "hasForceUpdate": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "isForced": false,
                  "isReplace": false,
                  "isTopLevelUnmount": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "priorityLevel": 1,
                },
              },
            },
            "child": [Circular],
            "effectTag": 0,
            "firstEffect": FiberNode {
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 60,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 61,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 62,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "logo",
                    "className": "App-logo",
                    "src": "logo.svg",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 63,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "To Do List",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <h2>
                      To Do List
</h2>,
                    "tag": 5,
                    "type": "h2",
                    "updateQueue": null,
                  },
                  "stateNode": <img
                    src="logo.svg"
                    class="App-logo"
                    alt="logo"
/>,
                  "tag": 5,
                  "type": "img",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <img
                      alt="logo"
                      className="App-logo"
                      src="logo.svg"
/>,
                    <h2>
                      To Do List
</h2>,
                  ],
                  "className": "App-header",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 65,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 66,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 68,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 13,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 14,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 10,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "To Do",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 15,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 11,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 17,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 12,
                              },
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 18,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 13,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "placeholder": "Create new task",
                                  "type": "text",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": FiberNode {
                                  "_debugID": 19,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                    "lineNumber": 14,
                                  },
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "firstEffect": null,
                                  "index": 1,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "Add Task",
                                    "type": "submit",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "pendingWorkPriority": 0,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": <button
                                    type="submit"
>
                                    Add Task
</button>,
                                  "tag": 5,
                                  "type": "button",
                                  "updateQueue": null,
                                },
                                "stateNode": <input
                                  type="text"
                                  placeholder="Create new task"
/>,
                                "tag": 5,
                                "type": "input",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <input
                                    placeholder="Create new task"
                                    type="text"
/>,
                                  <button
                                    type="submit"
>
                                    Add Task
</button>,
                                ],
                                "onSubmit": [Function],
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <form>
                                <input
                                                                type="text"
                                                                placeholder="Create new task"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "tag": 5,
                              "type": "form",
                              "updateQueue": null,
                            },
                            "effectTag": 1,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <form
                                onSubmit={[Function]}
>
                                <input
                                                                placeholder="Create new task"
                                                                type="text"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "test": true,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 16,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 19,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 2,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [],
                                "className": "list-items",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <ul
                                class="list-items"
/>,
                              "tag": 5,
                              "type": "ul",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": <h3>
                            To Do
</h3>,
                          "tag": 5,
                          "type": "h3",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h3>
                              To Do
</h3>,
                            <If
                              test={true}
>
                              <form
                                                            onSubmit={[Function]}
                              >
                                                            <input
                                                                                          placeholder="Create new task"
                                                                                          type="text"
                                                            />
                                                            <button
                                                                                          type="submit"
                                                            >
                                                                                          Add Task
                                                            </button>
                              </form>
</If>,
                            <ul
                              className="list-items"
>
                              
</ul>,
                          ],
                          "className": "column-list",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div
                          class="column-list"
>
                          <h3>
                                                    To Do
                          </h3>
                          <form>
                                                    <input
                                                                              type="text"
                                                                              placeholder="Create new task"
                                                    />
                                                    <button
                                                                              type="submit"
                                                    >
                                                                              Add Task
                                                    </button>
                          </form>
                          <ul
                                                    class="list-items"
                          />
</div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": "To Do",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "addTask": [Function],
                        "items": Array [],
                        "title": "To Do",
                        "updateTask": [Function],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                          "lineNumber": 68,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 20,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 21,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 10,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Done",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 22,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 11,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 1,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <form
                                  onSubmit={[Function]}
>
                                  <input
                                                                    placeholder="Create new task"
                                                                    type="text"
                                  />
                                  <button
                                                                    type="submit"
                                  >
                                                                    Add Task
                                  </button>
</form>,
                                "test": false,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 23,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 19,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 2,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [],
                                  "className": "list-items",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <ul
                                  class="list-items"
/>,
                                "tag": 5,
                                "type": "ul",
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 1,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "stateNode": <h3>
                              Done
</h3>,
                            "tag": 5,
                            "type": "h3",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <h3>
                                Done
</h3>,
                              <If
                                test={false}
>
                                <form
                                                                onSubmit={[Function]}
                                >
                                                                <input
                                                                                                placeholder="Create new task"
                                                                                                type="text"
                                                                />
                                                                <button
                                                                                                type="submit"
                                                                >
                                                                                                Add Task
                                                                </button>
                                </form>
</If>,
                              <ul
                                className="list-items"
>
                                
</ul>,
                            ],
                            "className": "column-list",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div
                            class="column-list"
>
                            <h3>
                                                        Done
                            </h3>
                            <ul
                                                        class="list-items"
                            />
</div>,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": "Done",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "addTask": [Function],
                          "items": Array [],
                          "title": "Done",
                          "updateTask": [Function],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <ColumnList
                          addTask={[Function]}
                          items={Array []}
                          title="To Do"
                          updateTask={[Function]}
/>,
                        <ColumnList
                          addTask={[Function]}
                          items={Array []}
                          title="Done"
                          updateTask={[Function]}
/>,
                      ],
                      "className": "app-lists",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="app-lists"
>
                      <div
                                            class="column-list"
                      >
                                            <h3>
                                                                  To Do
                                            </h3>
                                            <form>
                                                                  <input
                                                                                        type="text"
                                                                                        placeholder="Create new task"
                                                                  />
                                                                  <button
                                                                                        type="submit"
                                                                  >
                                                                                        Add Task
                                                                  </button>
                                            </form>
                                            <ul
                                                                  class="list-items"
                                            />
                      </div>
                      <div
                                            class="column-list"
                      >
                                            <h3>
                                                                  Done
                                            </h3>
                                            <ul
                                                                  class="list-items"
                                            />
                      </div>
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <div
                      className="app-lists"
>
                      <ColumnList
                                            addTask={[Function]}
                                            items={Array []}
                                            title="To Do"
                                            updateTask={[Function]}
                      />
                      <ColumnList
                                            addTask={[Function]}
                                            items={Array []}
                                            title="Done"
                                            updateTask={[Function]}
                      />
</div>,
                    "className": "App-container",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="App-container"
>
                    <div
                                        class="app-lists"
                    >
                                        <div
                                                            class="column-list"
                                        >
                                                            <h3>
                                                                                To Do
                                                            </h3>
                                                            <form>
                                                                                <input
                                                                                                    type="text"
                                                                                                    placeholder="Create new task"
                                                                                />
                                                                                <button
                                                                                                    type="submit"
                                                                                >
                                                                                                    Add Task
                                                                                </button>
                                                            </form>
                                                            <ul
                                                                                class="list-items"
                                                            />
                                        </div>
                                        <div
                                                            class="column-list"
                                        >
                                                            <h3>
                                                                                Done
                                                            </h3>
                                                            <ul
                                                                                class="list-items"
                                                            />
                                        </div>
                    </div>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="App-header"
>
                  <img
                                    src="logo.svg"
                                    class="App-logo"
                                    alt="logo"
                  />
                  <h2>
                                    To Do List
                  </h2>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="App-header"
>
                    <img
                                        alt="logo"
                                        className="App-logo"
                                        src="logo.svg"
                    />
                    <h2>
                                        To Do List
                    </h2>
</div>,
                  <div
                    className="App-container"
>
                    <div
                                        className="app-lists"
                    >
                                        <ColumnList
                                                            addTask={[Function]}
                                                            items={Array []}
                                                            title="To Do"
                                                            updateTask={[Function]}
                                        />
                                        <ColumnList
                                                            addTask={[Function]}
                                                            items={Array []}
                                                            title="Done"
                                                            updateTask={[Function]}
                                        />
                    </div>
</div>,
                ],
                "className": "App",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="App"
>
                <div
                                class="App-header"
                >
                                <img
                                                src="logo.svg"
                                                class="App-logo"
                                                alt="logo"
                                />
                                <h2>
                                                To Do List
                                </h2>
                </div>
                <div
                                class="App-container"
                >
                                <div
                                                class="app-lists"
                                >
                                                <div
                                                                class="column-list"
                                                >
                                                                <h3>
                                                                                To Do
                                                                </h3>
                                                                <form>
                                                                                <input
                                                                                                type="text"
                                                                                                placeholder="Create new task"
                                                                                />
                                                                                <button
                                                                                                type="submit"
                                                                                >
                                                                                                Add Task
                                                                                </button>
                                                                </form>
                                                                <ul
                                                                                class="list-items"
                                                                />
                                                </div>
                                                <div
                                                                class="column-list"
                                                >
                                                                <h3>
                                                                                Done
                                                                </h3>
                                                                <ul
                                                                                class="list-items"
                                                                />
                                                </div>
                                </div>
                </div>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 60,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 61,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 62,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "logo",
                    "className": "App-logo",
                    "src": "logo.svg",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 63,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "To Do List",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <h2>
                      To Do List
</h2>,
                    "tag": 5,
                    "type": "h2",
                    "updateQueue": null,
                  },
                  "stateNode": <img
                    src="logo.svg"
                    class="App-logo"
                    alt="logo"
/>,
                  "tag": 5,
                  "type": "img",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <img
                      alt="logo"
                      className="App-logo"
                      src="logo.svg"
/>,
                    <h2>
                      To Do List
</h2>,
                  ],
                  "className": "App-header",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 65,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 66,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 68,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 13,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 14,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 10,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "To Do",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 15,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 11,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 17,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 12,
                              },
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 18,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 13,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "placeholder": "Create new task",
                                  "type": "text",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": FiberNode {
                                  "_debugID": 19,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                    "lineNumber": 14,
                                  },
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "firstEffect": null,
                                  "index": 1,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "Add Task",
                                    "type": "submit",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "pendingWorkPriority": 0,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": <button
                                    type="submit"
>
                                    Add Task
</button>,
                                  "tag": 5,
                                  "type": "button",
                                  "updateQueue": null,
                                },
                                "stateNode": <input
                                  type="text"
                                  placeholder="Create new task"
/>,
                                "tag": 5,
                                "type": "input",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <input
                                    placeholder="Create new task"
                                    type="text"
/>,
                                  <button
                                    type="submit"
>
                                    Add Task
</button>,
                                ],
                                "onSubmit": [Function],
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <form>
                                <input
                                                                type="text"
                                                                placeholder="Create new task"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "tag": 5,
                              "type": "form",
                              "updateQueue": null,
                            },
                            "effectTag": 1,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <form
                                onSubmit={[Function]}
>
                                <input
                                                                placeholder="Create new task"
                                                                type="text"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "test": true,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 16,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 19,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 2,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [],
                                "className": "list-items",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <ul
                                class="list-items"
/>,
                              "tag": 5,
                              "type": "ul",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": <h3>
                            To Do
</h3>,
                          "tag": 5,
                          "type": "h3",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h3>
                              To Do
</h3>,
                            <If
                              test={true}
>
                              <form
                                                            onSubmit={[Function]}
                              >
                                                            <input
                                                                                          placeholder="Create new task"
                                                                                          type="text"
                                                            />
                                                            <button
                                                                                          type="submit"
                                                            >
                                                                                          Add Task
                                                            </button>
                              </form>
</If>,
                            <ul
                              className="list-items"
>
                              
</ul>,
                          ],
                          "className": "column-list",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div
                          class="column-list"
>
                          <h3>
                                                    To Do
                          </h3>
                          <form>
                                                    <input
                                                                              type="text"
                                                                              placeholder="Create new task"
                                                    />
                                                    <button
                                                                              type="submit"
                                                    >
                                                                              Add Task
                                                    </button>
                          </form>
                          <ul
                                                    class="list-items"
                          />
</div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": "To Do",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "addTask": [Function],
                        "items": Array [],
                        "title": "To Do",
                        "updateTask": [Function],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                          "lineNumber": 68,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 20,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 21,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 10,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Done",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 22,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 11,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 1,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <form
                                  onSubmit={[Function]}
>
                                  <input
                                                                    placeholder="Create new task"
                                                                    type="text"
                                  />
                                  <button
                                                                    type="submit"
                                  >
                                                                    Add Task
                                  </button>
</form>,
                                "test": false,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 23,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 19,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 2,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [],
                                  "className": "list-items",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <ul
                                  class="list-items"
/>,
                                "tag": 5,
                                "type": "ul",
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 1,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "stateNode": <h3>
                              Done
</h3>,
                            "tag": 5,
                            "type": "h3",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <h3>
                                Done
</h3>,
                              <If
                                test={false}
>
                                <form
                                                                onSubmit={[Function]}
                                >
                                                                <input
                                                                                                placeholder="Create new task"
                                                                                                type="text"
                                                                />
                                                                <button
                                                                                                type="submit"
                                                                >
                                                                                                Add Task
                                                                </button>
                                </form>
</If>,
                              <ul
                                className="list-items"
>
                                
</ul>,
                            ],
                            "className": "column-list",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div
                            class="column-list"
>
                            <h3>
                                                        Done
                            </h3>
                            <ul
                                                        class="list-items"
                            />
</div>,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": "Done",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "addTask": [Function],
                          "items": Array [],
                          "title": "Done",
                          "updateTask": [Function],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <ColumnList
                          addTask={[Function]}
                          items={Array []}
                          title="To Do"
                          updateTask={[Function]}
/>,
                        <ColumnList
                          addTask={[Function]}
                          items={Array []}
                          title="Done"
                          updateTask={[Function]}
/>,
                      ],
                      "className": "app-lists",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="app-lists"
>
                      <div
                                            class="column-list"
                      >
                                            <h3>
                                                                  To Do
                                            </h3>
                                            <form>
                                                                  <input
                                                                                        type="text"
                                                                                        placeholder="Create new task"
                                                                  />
                                                                  <button
                                                                                        type="submit"
                                                                  >
                                                                                        Add Task
                                                                  </button>
                                            </form>
                                            <ul
                                                                  class="list-items"
                                            />
                      </div>
                      <div
                                            class="column-list"
                      >
                                            <h3>
                                                                  Done
                                            </h3>
                                            <ul
                                                                  class="list-items"
                                            />
                      </div>
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <div
                      className="app-lists"
>
                      <ColumnList
                                            addTask={[Function]}
                                            items={Array []}
                                            title="To Do"
                                            updateTask={[Function]}
                      />
                      <ColumnList
                                            addTask={[Function]}
                                            items={Array []}
                                            title="Done"
                                            updateTask={[Function]}
                      />
</div>,
                    "className": "App-container",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="App-container"
>
                    <div
                                        class="app-lists"
                    >
                                        <div
                                                            class="column-list"
                                        >
                                                            <h3>
                                                                                To Do
                                                            </h3>
                                                            <form>
                                                                                <input
                                                                                                    type="text"
                                                                                                    placeholder="Create new task"
                                                                                />
                                                                                <button
                                                                                                    type="submit"
                                                                                >
                                                                                                    Add Task
                                                                                </button>
                                                            </form>
                                                            <ul
                                                                                class="list-items"
                                                            />
                                        </div>
                                        <div
                                                            class="column-list"
                                        >
                                                            <h3>
                                                                                Done
                                                            </h3>
                                                            <ul
                                                                                class="list-items"
                                                            />
                                        </div>
                    </div>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="App-header"
>
                  <img
                                    src="logo.svg"
                                    class="App-logo"
                                    alt="logo"
                  />
                  <h2>
                                    To Do List
                  </h2>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="App-header"
>
                    <img
                                        alt="logo"
                                        className="App-logo"
                                        src="logo.svg"
                    />
                    <h2>
                                        To Do List
                    </h2>
</div>,
                  <div
                    className="App-container"
>
                    <div
                                        className="app-lists"
                    >
                                        <ColumnList
                                                            addTask={[Function]}
                                                            items={Array []}
                                                            title="To Do"
                                                            updateTask={[Function]}
                                        />
                                        <ColumnList
                                                            addTask={[Function]}
                                                            items={Array []}
                                                            title="Done"
                                                            updateTask={[Function]}
                                        />
                    </div>
</div>,
                ],
                "className": "App",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="App"
>
                <div
                                class="App-header"
                >
                                <img
                                                src="logo.svg"
                                                class="App-logo"
                                                alt="logo"
                                />
                                <h2>
                                                To Do List
                                </h2>
                </div>
                <div
                                class="App-container"
                >
                                <div
                                                class="app-lists"
                                >
                                                <div
                                                                class="column-list"
                                                >
                                                                <h3>
                                                                                To Do
                                                                </h3>
                                                                <form>
                                                                                <input
                                                                                                type="text"
                                                                                                placeholder="Create new task"
                                                                                />
                                                                                <button
                                                                                                type="submit"
                                                                                >
                                                                                                Add Task
                                                                                </button>
                                                                </form>
                                                                <ul
                                                                                class="list-items"
                                                                />
                                                </div>
                                                <div
                                                                class="column-list"
                                                >
                                                                <h3>
                                                                                Done
                                                                </h3>
                                                                <ul
                                                                                class="list-items"
                                                                />
                                                </div>
                                </div>
                </div>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
/>,
            },
            "nextEffect": null,
            "pendingProps": null,
            "pendingWorkPriority": 0,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                                class="App"
                >
                                <div
                                                class="App-header"
                                >
                                                <img
                                                                src="logo.svg"
                                                                class="App-logo"
                                                                alt="logo"
                                                />
                                                <h2>
                                                                To Do List
                                                </h2>
                                </div>
                                <div
                                                class="App-container"
                                >
                                                <div
                                                                class="app-lists"
                                                >
                                                                <div
                                                                                class="column-list"
                                                                >
                                                                                <h3>
                                                                                                To Do
                                                                                </h3>
                                                                                <form>
                                                                                                <input
                                                                                                                type="text"
                                                                                                                placeholder="Create new task"
                                                                                                />
                                                                                                <button
                                                                                                                type="submit"
                                                                                                >
                                                                                                                Add Task
                                                                                                </button>
                                                                                </form>
                                                                                <ul
                                                                                                class="list-items"
                                                                                />
                                                                </div>
                                                                <div
                                                                                class="column-list"
                                                                >
                                                                                <h3>
                                                                                                Done
                                                                                </h3>
                                                                                <ul
                                                                                                class="list-items"
                                                                                />
                                                                </div>
                                                </div>
                                </div>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "isScheduled": false,
              "nextScheduledRoot": null,
              "pendingContext": null,
            },
            "tag": 3,
            "type": null,
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
            "lineNumber": 60,
          },
          "alternate": null,
          "child": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
              "lineNumber": 61,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 62,
              },
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "alt": "logo",
                "className": "App-logo",
                "src": "logo.svg",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 63,
                },
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "To Do List",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <h2>
                  To Do List
</h2>,
                "tag": 5,
                "type": "h2",
                "updateQueue": null,
              },
              "stateNode": <img
                src="logo.svg"
                class="App-logo"
                alt="logo"
/>,
              "tag": 5,
              "type": "img",
              "updateQueue": null,
            },
            "effectTag": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <img
                  alt="logo"
                  className="App-logo"
                  src="logo.svg"
/>,
                <h2>
                  To Do List
</h2>,
              ],
              "className": "App-header",
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "pendingWorkPriority": 0,
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 65,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 10,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 66,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 11,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 68,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 13,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                      "lineNumber": 9,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 14,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                        "lineNumber": 10,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "To Do",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 15,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 11,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 17,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 12,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 18,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 13,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "placeholder": "Create new task",
                              "type": "text",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 19,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 14,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Add Task",
                                "type": "submit",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <button
                                type="submit"
>
                                Add Task
</button>,
                              "tag": 5,
                              "type": "button",
                              "updateQueue": null,
                            },
                            "stateNode": <input
                              type="text"
                              placeholder="Create new task"
/>,
                            "tag": 5,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <input
                                placeholder="Create new task"
                                type="text"
/>,
                              <button
                                type="submit"
>
                                Add Task
</button>,
                            ],
                            "onSubmit": [Function],
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <form>
                            <input
                                                        type="text"
                                                        placeholder="Create new task"
                            />
                            <button
                                                        type="submit"
                            >
                                                        Add Task
                            </button>
</form>,
                          "tag": 5,
                          "type": "form",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <form
                            onSubmit={[Function]}
>
                            <input
                                                        placeholder="Create new task"
                                                        type="text"
                            />
                            <button
                                                        type="submit"
                            >
                                                        Add Task
                            </button>
</form>,
                          "test": true,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 16,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 19,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 2,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [],
                            "className": "list-items",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <ul
                            class="list-items"
/>,
                          "tag": 5,
                          "type": "ul",
                          "updateQueue": null,
                        },
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": <h3>
                        To Do
</h3>,
                      "tag": 5,
                      "type": "h3",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <h3>
                          To Do
</h3>,
                        <If
                          test={true}
>
                          <form
                                                    onSubmit={[Function]}
                          >
                                                    <input
                                                                              placeholder="Create new task"
                                                                              type="text"
                                                    />
                                                    <button
                                                                              type="submit"
                                                    >
                                                                              Add Task
                                                    </button>
                          </form>
</If>,
                        <ul
                          className="list-items"
>
                          
</ul>,
                      ],
                      "className": "column-list",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="column-list"
>
                      <h3>
                                            To Do
                      </h3>
                      <form>
                                            <input
                                                                  type="text"
                                                                  placeholder="Create new task"
                                            />
                                            <button
                                                                  type="submit"
                                            >
                                                                  Add Task
                                            </button>
                      </form>
                      <ul
                                            class="list-items"
                      />
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": "To Do",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "addTask": [Function],
                    "items": Array [],
                    "title": "To Do",
                    "updateTask": [Function],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 12,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 68,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 20,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                        "lineNumber": 9,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 21,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 10,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Done",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 22,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 11,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 1,
                          "firstEffect": null,
                          "index": 1,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <form
                              onSubmit={[Function]}
>
                              <input
                                                            placeholder="Create new task"
                                                            type="text"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "test": false,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 23,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 19,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 2,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [],
                              "className": "list-items",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <ul
                              class="list-items"
/>,
                            "tag": 5,
                            "type": "ul",
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": <h3>
                          Done
</h3>,
                        "tag": 5,
                        "type": "h3",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <h3>
                            Done
</h3>,
                          <If
                            test={false}
>
                            <form
                                                        onSubmit={[Function]}
                            >
                                                        <input
                                                                                    placeholder="Create new task"
                                                                                    type="text"
                                                        />
                                                        <button
                                                                                    type="submit"
                                                        >
                                                                                    Add Task
                                                        </button>
                            </form>
</If>,
                          <ul
                            className="list-items"
>
                            
</ul>,
                        ],
                        "className": "column-list",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="column-list"
>
                        <h3>
                                                Done
                        </h3>
                        <ul
                                                class="list-items"
                        />
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": "Done",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "addTask": [Function],
                      "items": Array [],
                      "title": "Done",
                      "updateTask": [Function],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <ColumnList
                      addTask={[Function]}
                      items={Array []}
                      title="To Do"
                      updateTask={[Function]}
/>,
                    <ColumnList
                      addTask={[Function]}
                      items={Array []}
                      title="Done"
                      updateTask={[Function]}
/>,
                  ],
                  "className": "app-lists",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="app-lists"
>
                  <div
                                    class="column-list"
                  >
                                    <h3>
                                                      To Do
                                    </h3>
                                    <form>
                                                      <input
                                                                        type="text"
                                                                        placeholder="Create new task"
                                                      />
                                                      <button
                                                                        type="submit"
                                                      >
                                                                        Add Task
                                                      </button>
                                    </form>
                                    <ul
                                                      class="list-items"
                                    />
                  </div>
                  <div
                                    class="column-list"
                  >
                                    <h3>
                                                      Done
                                    </h3>
                                    <ul
                                                      class="list-items"
                                    />
                  </div>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "firstEffect": null,
              "index": 1,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <div
                  className="app-lists"
>
                  <ColumnList
                                    addTask={[Function]}
                                    items={Array []}
                                    title="To Do"
                                    updateTask={[Function]}
                  />
                  <ColumnList
                                    addTask={[Function]}
                                    items={Array []}
                                    title="Done"
                                    updateTask={[Function]}
                  />
</div>,
                "className": "App-container",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="App-container"
>
                <div
                                class="app-lists"
                >
                                <div
                                                class="column-list"
                                >
                                                <h3>
                                                                To Do
                                                </h3>
                                                <form>
                                                                <input
                                                                                type="text"
                                                                                placeholder="Create new task"
                                                                />
                                                                <button
                                                                                type="submit"
                                                                >
                                                                                Add Task
                                                                </button>
                                                </form>
                                                <ul
                                                                class="list-items"
                                                />
                                </div>
                                <div
                                                class="column-list"
                                >
                                                <h3>
                                                                Done
                                                </h3>
                                                <ul
                                                                class="list-items"
                                                />
                                </div>
                </div>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "stateNode": <div
              class="App-header"
>
              <img
                            src="logo.svg"
                            class="App-logo"
                            alt="logo"
              />
              <h2>
                            To Do List
              </h2>
</div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 0,
          "firstEffect": null,
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <div
                className="App-header"
>
                <img
                                alt="logo"
                                className="App-logo"
                                src="logo.svg"
                />
                <h2>
                                To Do List
                </h2>
</div>,
              <div
                className="App-container"
>
                <div
                                className="app-lists"
                >
                                <ColumnList
                                                addTask={[Function]}
                                                items={Array []}
                                                title="To Do"
                                                updateTask={[Function]}
                                />
                                <ColumnList
                                                addTask={[Function]}
                                                items={Array []}
                                                title="Done"
                                                updateTask={[Function]}
                                />
                </div>
</div>,
            ],
            "className": "App",
          },
          "memoizedState": null,
          "nextEffect": null,
          "pendingProps": null,
          "pendingWorkPriority": 0,
          "ref": null,
          "return": [Circular],
          "sibling": null,
          "stateNode": <div
            class="App"
>
            <div
                        class="App-header"
            >
                        <img
                                    src="logo.svg"
                                    class="App-logo"
                                    alt="logo"
                        />
                        <h2>
                                    To Do List
                        </h2>
            </div>
            <div
                        class="App-container"
            >
                        <div
                                    class="app-lists"
                        >
                                    <div
                                                class="column-list"
                                    >
                                                <h3>
                                                            To Do
                                                </h3>
                                                <form>
                                                            <input
                                                                        type="text"
                                                                        placeholder="Create new task"
                                                            />
                                                            <button
                                                                        type="submit"
                                                            >
                                                                        Add Task
                                                            </button>
                                                </form>
                                                <ul
                                                            class="list-items"
                                                />
                                    </div>
                                    <div
                                                class="column-list"
                                    >
                                                <h3>
                                                            Done
                                                </h3>
                                                <ul
                                                            class="list-items"
                                                />
                                    </div>
                        </div>
            </div>
</div>,
          "tag": 5,
          "type": "div",
          "updateQueue": null,
        },
        "effectTag": 1,
        "firstEffect": FiberNode {
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
            "lineNumber": 60,
          },
          "alternate": null,
          "child": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
              "lineNumber": 61,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 62,
              },
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "alt": "logo",
                "className": "App-logo",
                "src": "logo.svg",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 63,
                },
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "To Do List",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <h2>
                  To Do List
</h2>,
                "tag": 5,
                "type": "h2",
                "updateQueue": null,
              },
              "stateNode": <img
                src="logo.svg"
                class="App-logo"
                alt="logo"
/>,
              "tag": 5,
              "type": "img",
              "updateQueue": null,
            },
            "effectTag": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <img
                  alt="logo"
                  className="App-logo"
                  src="logo.svg"
/>,
                <h2>
                  To Do List
</h2>,
              ],
              "className": "App-header",
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "pendingWorkPriority": 0,
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 65,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 10,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 66,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 11,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 68,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 13,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                      "lineNumber": 9,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 14,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                        "lineNumber": 10,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "To Do",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 15,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 11,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 17,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 12,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 18,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 13,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "placeholder": "Create new task",
                              "type": "text",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 19,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 14,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Add Task",
                                "type": "submit",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <button
                                type="submit"
>
                                Add Task
</button>,
                              "tag": 5,
                              "type": "button",
                              "updateQueue": null,
                            },
                            "stateNode": <input
                              type="text"
                              placeholder="Create new task"
/>,
                            "tag": 5,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <input
                                placeholder="Create new task"
                                type="text"
/>,
                              <button
                                type="submit"
>
                                Add Task
</button>,
                            ],
                            "onSubmit": [Function],
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <form>
                            <input
                                                        type="text"
                                                        placeholder="Create new task"
                            />
                            <button
                                                        type="submit"
                            >
                                                        Add Task
                            </button>
</form>,
                          "tag": 5,
                          "type": "form",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <form
                            onSubmit={[Function]}
>
                            <input
                                                        placeholder="Create new task"
                                                        type="text"
                            />
                            <button
                                                        type="submit"
                            >
                                                        Add Task
                            </button>
</form>,
                          "test": true,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 16,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 19,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 2,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [],
                            "className": "list-items",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <ul
                            class="list-items"
/>,
                          "tag": 5,
                          "type": "ul",
                          "updateQueue": null,
                        },
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": <h3>
                        To Do
</h3>,
                      "tag": 5,
                      "type": "h3",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <h3>
                          To Do
</h3>,
                        <If
                          test={true}
>
                          <form
                                                    onSubmit={[Function]}
                          >
                                                    <input
                                                                              placeholder="Create new task"
                                                                              type="text"
                                                    />
                                                    <button
                                                                              type="submit"
                                                    >
                                                                              Add Task
                                                    </button>
                          </form>
</If>,
                        <ul
                          className="list-items"
>
                          
</ul>,
                      ],
                      "className": "column-list",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="column-list"
>
                      <h3>
                                            To Do
                      </h3>
                      <form>
                                            <input
                                                                  type="text"
                                                                  placeholder="Create new task"
                                            />
                                            <button
                                                                  type="submit"
                                            >
                                                                  Add Task
                                            </button>
                      </form>
                      <ul
                                            class="list-items"
                      />
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": "To Do",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "addTask": [Function],
                    "items": Array [],
                    "title": "To Do",
                    "updateTask": [Function],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 12,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 68,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 20,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                        "lineNumber": 9,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 21,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 10,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Done",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 22,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 11,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 1,
                          "firstEffect": null,
                          "index": 1,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <form
                              onSubmit={[Function]}
>
                              <input
                                                            placeholder="Create new task"
                                                            type="text"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "test": false,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 23,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 19,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 2,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [],
                              "className": "list-items",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <ul
                              class="list-items"
/>,
                            "tag": 5,
                            "type": "ul",
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": <h3>
                          Done
</h3>,
                        "tag": 5,
                        "type": "h3",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <h3>
                            Done
</h3>,
                          <If
                            test={false}
>
                            <form
                                                        onSubmit={[Function]}
                            >
                                                        <input
                                                                                    placeholder="Create new task"
                                                                                    type="text"
                                                        />
                                                        <button
                                                                                    type="submit"
                                                        >
                                                                                    Add Task
                                                        </button>
                            </form>
</If>,
                          <ul
                            className="list-items"
>
                            
</ul>,
                        ],
                        "className": "column-list",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="column-list"
>
                        <h3>
                                                Done
                        </h3>
                        <ul
                                                class="list-items"
                        />
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": "Done",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "addTask": [Function],
                      "items": Array [],
                      "title": "Done",
                      "updateTask": [Function],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <ColumnList
                      addTask={[Function]}
                      items={Array []}
                      title="To Do"
                      updateTask={[Function]}
/>,
                    <ColumnList
                      addTask={[Function]}
                      items={Array []}
                      title="Done"
                      updateTask={[Function]}
/>,
                  ],
                  "className": "app-lists",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="app-lists"
>
                  <div
                                    class="column-list"
                  >
                                    <h3>
                                                      To Do
                                    </h3>
                                    <form>
                                                      <input
                                                                        type="text"
                                                                        placeholder="Create new task"
                                                      />
                                                      <button
                                                                        type="submit"
                                                      >
                                                                        Add Task
                                                      </button>
                                    </form>
                                    <ul
                                                      class="list-items"
                                    />
                  </div>
                  <div
                                    class="column-list"
                  >
                                    <h3>
                                                      Done
                                    </h3>
                                    <ul
                                                      class="list-items"
                                    />
                  </div>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "firstEffect": null,
              "index": 1,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <div
                  className="app-lists"
>
                  <ColumnList
                                    addTask={[Function]}
                                    items={Array []}
                                    title="To Do"
                                    updateTask={[Function]}
                  />
                  <ColumnList
                                    addTask={[Function]}
                                    items={Array []}
                                    title="Done"
                                    updateTask={[Function]}
                  />
</div>,
                "className": "App-container",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="App-container"
>
                <div
                                class="app-lists"
                >
                                <div
                                                class="column-list"
                                >
                                                <h3>
                                                                To Do
                                                </h3>
                                                <form>
                                                                <input
                                                                                type="text"
                                                                                placeholder="Create new task"
                                                                />
                                                                <button
                                                                                type="submit"
                                                                >
                                                                                Add Task
                                                                </button>
                                                </form>
                                                <ul
                                                                class="list-items"
                                                />
                                </div>
                                <div
                                                class="column-list"
                                >
                                                <h3>
                                                                Done
                                                </h3>
                                                <ul
                                                                class="list-items"
                                                />
                                </div>
                </div>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "stateNode": <div
              class="App-header"
>
              <img
                            src="logo.svg"
                            class="App-logo"
                            alt="logo"
              />
              <h2>
                            To Do List
              </h2>
</div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 0,
          "firstEffect": null,
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <div
                className="App-header"
>
                <img
                                alt="logo"
                                className="App-logo"
                                src="logo.svg"
                />
                <h2>
                                To Do List
                </h2>
</div>,
              <div
                className="App-container"
>
                <div
                                className="app-lists"
                >
                                <ColumnList
                                                addTask={[Function]}
                                                items={Array []}
                                                title="To Do"
                                                updateTask={[Function]}
                                />
                                <ColumnList
                                                addTask={[Function]}
                                                items={Array []}
                                                title="Done"
                                                updateTask={[Function]}
                                />
                </div>
</div>,
            ],
            "className": "App",
          },
          "memoizedState": null,
          "nextEffect": null,
          "pendingProps": null,
          "pendingWorkPriority": 0,
          "ref": null,
          "return": [Circular],
          "sibling": null,
          "stateNode": <div
            class="App"
>
            <div
                        class="App-header"
            >
                        <img
                                    src="logo.svg"
                                    class="App-logo"
                                    alt="logo"
                        />
                        <h2>
                                    To Do List
                        </h2>
            </div>
            <div
                        class="App-container"
            >
                        <div
                                    class="app-lists"
                        >
                                    <div
                                                class="column-list"
                                    >
                                                <h3>
                                                            To Do
                                                </h3>
                                                <form>
                                                            <input
                                                                        type="text"
                                                                        placeholder="Create new task"
                                                            />
                                                            <button
                                                                        type="submit"
                                                            >
                                                                        Add Task
                                                            </button>
                                                </form>
                                                <ul
                                                            class="list-items"
                                                />
                                    </div>
                                    <div
                                                class="column-list"
                                    >
                                                <h3>
                                                            Done
                                                </h3>
                                                <ul
                                                            class="list-items"
                                                />
                                    </div>
                        </div>
            </div>
</div>,
          "tag": 5,
          "type": "div",
          "updateQueue": null,
        },
        "index": 0,
        "internalContextTag": 0,
        "key": null,
        "lastEffect": FiberNode {
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
            "lineNumber": 60,
          },
          "alternate": null,
          "child": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
              "lineNumber": 61,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 62,
              },
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "alt": "logo",
                "className": "App-logo",
                "src": "logo.svg",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 63,
                },
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "To Do List",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <h2>
                  To Do List
</h2>,
                "tag": 5,
                "type": "h2",
                "updateQueue": null,
              },
              "stateNode": <img
                src="logo.svg"
                class="App-logo"
                alt="logo"
/>,
              "tag": 5,
              "type": "img",
              "updateQueue": null,
            },
            "effectTag": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <img
                  alt="logo"
                  className="App-logo"
                  src="logo.svg"
/>,
                <h2>
                  To Do List
</h2>,
              ],
              "className": "App-header",
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "pendingWorkPriority": 0,
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 65,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 10,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 66,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 11,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 68,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 13,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                      "lineNumber": 9,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 14,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                        "lineNumber": 10,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "To Do",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 15,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 11,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 17,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 12,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 18,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 13,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "placeholder": "Create new task",
                              "type": "text",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 19,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 14,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Add Task",
                                "type": "submit",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <button
                                type="submit"
>
                                Add Task
</button>,
                              "tag": 5,
                              "type": "button",
                              "updateQueue": null,
                            },
                            "stateNode": <input
                              type="text"
                              placeholder="Create new task"
/>,
                            "tag": 5,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <input
                                placeholder="Create new task"
                                type="text"
/>,
                              <button
                                type="submit"
>
                                Add Task
</button>,
                            ],
                            "onSubmit": [Function],
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <form>
                            <input
                                                        type="text"
                                                        placeholder="Create new task"
                            />
                            <button
                                                        type="submit"
                            >
                                                        Add Task
                            </button>
</form>,
                          "tag": 5,
                          "type": "form",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <form
                            onSubmit={[Function]}
>
                            <input
                                                        placeholder="Create new task"
                                                        type="text"
                            />
                            <button
                                                        type="submit"
                            >
                                                        Add Task
                            </button>
</form>,
                          "test": true,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 16,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 19,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 2,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [],
                            "className": "list-items",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <ul
                            class="list-items"
/>,
                          "tag": 5,
                          "type": "ul",
                          "updateQueue": null,
                        },
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": <h3>
                        To Do
</h3>,
                      "tag": 5,
                      "type": "h3",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <h3>
                          To Do
</h3>,
                        <If
                          test={true}
>
                          <form
                                                    onSubmit={[Function]}
                          >
                                                    <input
                                                                              placeholder="Create new task"
                                                                              type="text"
                                                    />
                                                    <button
                                                                              type="submit"
                                                    >
                                                                              Add Task
                                                    </button>
                          </form>
</If>,
                        <ul
                          className="list-items"
>
                          
</ul>,
                      ],
                      "className": "column-list",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="column-list"
>
                      <h3>
                                            To Do
                      </h3>
                      <form>
                                            <input
                                                                  type="text"
                                                                  placeholder="Create new task"
                                            />
                                            <button
                                                                  type="submit"
                                            >
                                                                  Add Task
                                            </button>
                      </form>
                      <ul
                                            class="list-items"
                      />
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": "To Do",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "addTask": [Function],
                    "items": Array [],
                    "title": "To Do",
                    "updateTask": [Function],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 12,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 68,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 20,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                        "lineNumber": 9,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 21,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 10,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Done",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 22,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 11,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 1,
                          "firstEffect": null,
                          "index": 1,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <form
                              onSubmit={[Function]}
>
                              <input
                                                            placeholder="Create new task"
                                                            type="text"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "test": false,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 23,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 19,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 2,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [],
                              "className": "list-items",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <ul
                              class="list-items"
/>,
                            "tag": 5,
                            "type": "ul",
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": <h3>
                          Done
</h3>,
                        "tag": 5,
                        "type": "h3",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <h3>
                            Done
</h3>,
                          <If
                            test={false}
>
                            <form
                                                        onSubmit={[Function]}
                            >
                                                        <input
                                                                                    placeholder="Create new task"
                                                                                    type="text"
                                                        />
                                                        <button
                                                                                    type="submit"
                                                        >
                                                                                    Add Task
                                                        </button>
                            </form>
</If>,
                          <ul
                            className="list-items"
>
                            
</ul>,
                        ],
                        "className": "column-list",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="column-list"
>
                        <h3>
                                                Done
                        </h3>
                        <ul
                                                class="list-items"
                        />
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": "Done",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "addTask": [Function],
                      "items": Array [],
                      "title": "Done",
                      "updateTask": [Function],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <ColumnList
                      addTask={[Function]}
                      items={Array []}
                      title="To Do"
                      updateTask={[Function]}
/>,
                    <ColumnList
                      addTask={[Function]}
                      items={Array []}
                      title="Done"
                      updateTask={[Function]}
/>,
                  ],
                  "className": "app-lists",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="app-lists"
>
                  <div
                                    class="column-list"
                  >
                                    <h3>
                                                      To Do
                                    </h3>
                                    <form>
                                                      <input
                                                                        type="text"
                                                                        placeholder="Create new task"
                                                      />
                                                      <button
                                                                        type="submit"
                                                      >
                                                                        Add Task
                                                      </button>
                                    </form>
                                    <ul
                                                      class="list-items"
                                    />
                  </div>
                  <div
                                    class="column-list"
                  >
                                    <h3>
                                                      Done
                                    </h3>
                                    <ul
                                                      class="list-items"
                                    />
                  </div>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "firstEffect": null,
              "index": 1,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <div
                  className="app-lists"
>
                  <ColumnList
                                    addTask={[Function]}
                                    items={Array []}
                                    title="To Do"
                                    updateTask={[Function]}
                  />
                  <ColumnList
                                    addTask={[Function]}
                                    items={Array []}
                                    title="Done"
                                    updateTask={[Function]}
                  />
</div>,
                "className": "App-container",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="App-container"
>
                <div
                                class="app-lists"
                >
                                <div
                                                class="column-list"
                                >
                                                <h3>
                                                                To Do
                                                </h3>
                                                <form>
                                                                <input
                                                                                type="text"
                                                                                placeholder="Create new task"
                                                                />
                                                                <button
                                                                                type="submit"
                                                                >
                                                                                Add Task
                                                                </button>
                                                </form>
                                                <ul
                                                                class="list-items"
                                                />
                                </div>
                                <div
                                                class="column-list"
                                >
                                                <h3>
                                                                Done
                                                </h3>
                                                <ul
                                                                class="list-items"
                                                />
                                </div>
                </div>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "stateNode": <div
              class="App-header"
>
              <img
                            src="logo.svg"
                            class="App-logo"
                            alt="logo"
              />
              <h2>
                            To Do List
              </h2>
</div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 0,
          "firstEffect": null,
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <div
                className="App-header"
>
                <img
                                alt="logo"
                                className="App-logo"
                                src="logo.svg"
                />
                <h2>
                                To Do List
                </h2>
</div>,
              <div
                className="App-container"
>
                <div
                                className="app-lists"
                >
                                <ColumnList
                                                addTask={[Function]}
                                                items={Array []}
                                                title="To Do"
                                                updateTask={[Function]}
                                />
                                <ColumnList
                                                addTask={[Function]}
                                                items={Array []}
                                                title="Done"
                                                updateTask={[Function]}
                                />
                </div>
</div>,
            ],
            "className": "App",
          },
          "memoizedState": null,
          "nextEffect": null,
          "pendingProps": null,
          "pendingWorkPriority": 0,
          "ref": null,
          "return": [Circular],
          "sibling": null,
          "stateNode": <div
            class="App"
>
            <div
                        class="App-header"
            >
                        <img
                                    src="logo.svg"
                                    class="App-logo"
                                    alt="logo"
                        />
                        <h2>
                                    To Do List
                        </h2>
            </div>
            <div
                        class="App-container"
            >
                        <div
                                    class="app-lists"
                        >
                                    <div
                                                class="column-list"
                                    >
                                                <h3>
                                                            To Do
                                                </h3>
                                                <form>
                                                            <input
                                                                        type="text"
                                                                        placeholder="Create new task"
                                                            />
                                                            <button
                                                                        type="submit"
                                                            >
                                                                        Add Task
                                                            </button>
                                                </form>
                                                <ul
                                                            class="list-items"
                                                />
                                    </div>
                                    <div
                                                class="column-list"
                                    >
                                                <h3>
                                                            Done
                                                </h3>
                                                <ul
                                                            class="list-items"
                                                />
                                    </div>
                        </div>
            </div>
</div>,
          "tag": 5,
          "type": "div",
          "updateQueue": null,
        },
        "memoizedProps": Object {},
        "memoizedState": Object {
          "items": Array [],
        },
        "nextEffect": null,
        "pendingProps": null,
        "pendingWorkPriority": 0,
        "ref": null,
        "return": FiberNode {
          "_debugID": 3,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "firstEffect": FiberNode {
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
              "lineNumber": 60,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 61,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 62,
                },
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "logo",
                  "className": "App-logo",
                  "src": "logo.svg",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 63,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "To Do List",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <h2>
                    To Do List
</h2>,
                  "tag": 5,
                  "type": "h2",
                  "updateQueue": null,
                },
                "stateNode": <img
                  src="logo.svg"
                  class="App-logo"
                  alt="logo"
/>,
                "tag": 5,
                "type": "img",
                "updateQueue": null,
              },
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <img
                    alt="logo"
                    className="App-logo"
                    src="logo.svg"
/>,
                  <h2>
                    To Do List
</h2>,
                ],
                "className": "App-header",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 65,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 66,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 68,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 13,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                        "lineNumber": 9,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 14,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 10,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "To Do",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 15,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 11,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 17,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 12,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 18,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 13,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "placeholder": "Create new task",
                                "type": "text",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 19,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 14,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 1,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Add Task",
                                  "type": "submit",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <button
                                  type="submit"
>
                                  Add Task
</button>,
                                "tag": 5,
                                "type": "button",
                                "updateQueue": null,
                              },
                              "stateNode": <input
                                type="text"
                                placeholder="Create new task"
/>,
                              "tag": 5,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <input
                                  placeholder="Create new task"
                                  type="text"
/>,
                                <button
                                  type="submit"
>
                                  Add Task
</button>,
                              ],
                              "onSubmit": [Function],
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <form>
                              <input
                                                            type="text"
                                                            placeholder="Create new task"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "tag": 5,
                            "type": "form",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "firstEffect": null,
                          "index": 1,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <form
                              onSubmit={[Function]}
>
                              <input
                                                            placeholder="Create new task"
                                                            type="text"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "test": true,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 16,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 19,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 2,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [],
                              "className": "list-items",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <ul
                              class="list-items"
/>,
                            "tag": 5,
                            "type": "ul",
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": <h3>
                          To Do
</h3>,
                        "tag": 5,
                        "type": "h3",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <h3>
                            To Do
</h3>,
                          <If
                            test={true}
>
                            <form
                                                        onSubmit={[Function]}
                            >
                                                        <input
                                                                                    placeholder="Create new task"
                                                                                    type="text"
                                                        />
                                                        <button
                                                                                    type="submit"
                                                        >
                                                                                    Add Task
                                                        </button>
                            </form>
</If>,
                          <ul
                            className="list-items"
>
                            
</ul>,
                        ],
                        "className": "column-list",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="column-list"
>
                        <h3>
                                                To Do
                        </h3>
                        <form>
                                                <input
                                                                        type="text"
                                                                        placeholder="Create new task"
                                                />
                                                <button
                                                                        type="submit"
                                                >
                                                                        Add Task
                                                </button>
                        </form>
                        <ul
                                                class="list-items"
                        />
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": "To Do",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "addTask": [Function],
                      "items": Array [],
                      "title": "To Do",
                      "updateTask": [Function],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 68,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 20,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 10,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Done",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 22,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 11,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 1,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <form
                                onSubmit={[Function]}
>
                                <input
                                                                placeholder="Create new task"
                                                                type="text"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "test": false,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 23,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 19,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 2,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [],
                                "className": "list-items",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <ul
                                class="list-items"
/>,
                              "tag": 5,
                              "type": "ul",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": <h3>
                            Done
</h3>,
                          "tag": 5,
                          "type": "h3",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h3>
                              Done
</h3>,
                            <If
                              test={false}
>
                              <form
                                                            onSubmit={[Function]}
                              >
                                                            <input
                                                                                          placeholder="Create new task"
                                                                                          type="text"
                                                            />
                                                            <button
                                                                                          type="submit"
                                                            >
                                                                                          Add Task
                                                            </button>
                              </form>
</If>,
                            <ul
                              className="list-items"
>
                              
</ul>,
                          ],
                          "className": "column-list",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div
                          class="column-list"
>
                          <h3>
                                                    Done
                          </h3>
                          <ul
                                                    class="list-items"
                          />
</div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": "Done",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "addTask": [Function],
                        "items": Array [],
                        "title": "Done",
                        "updateTask": [Function],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <ColumnList
                        addTask={[Function]}
                        items={Array []}
                        title="To Do"
                        updateTask={[Function]}
/>,
                      <ColumnList
                        addTask={[Function]}
                        items={Array []}
                        title="Done"
                        updateTask={[Function]}
/>,
                    ],
                    "className": "app-lists",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="app-lists"
>
                    <div
                                        class="column-list"
                    >
                                        <h3>
                                                            To Do
                                        </h3>
                                        <form>
                                                            <input
                                                                                type="text"
                                                                                placeholder="Create new task"
                                                            />
                                                            <button
                                                                                type="submit"
                                                            >
                                                                                Add Task
                                                            </button>
                                        </form>
                                        <ul
                                                            class="list-items"
                                        />
                    </div>
                    <div
                                        class="column-list"
                    >
                                        <h3>
                                                            Done
                                        </h3>
                                        <ul
                                                            class="list-items"
                                        />
                    </div>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <div
                    className="app-lists"
>
                    <ColumnList
                                        addTask={[Function]}
                                        items={Array []}
                                        title="To Do"
                                        updateTask={[Function]}
                    />
                    <ColumnList
                                        addTask={[Function]}
                                        items={Array []}
                                        title="Done"
                                        updateTask={[Function]}
                    />
</div>,
                  "className": "App-container",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="App-container"
>
                  <div
                                    class="app-lists"
                  >
                                    <div
                                                      class="column-list"
                                    >
                                                      <h3>
                                                                        To Do
                                                      </h3>
                                                      <form>
                                                                        <input
                                                                                          type="text"
                                                                                          placeholder="Create new task"
                                                                        />
                                                                        <button
                                                                                          type="submit"
                                                                        >
                                                                                          Add Task
                                                                        </button>
                                                      </form>
                                                      <ul
                                                                        class="list-items"
                                                      />
                                    </div>
                                    <div
                                                      class="column-list"
                                    >
                                                      <h3>
                                                                        Done
                                                      </h3>
                                                      <ul
                                                                        class="list-items"
                                                      />
                                    </div>
                  </div>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <div
                class="App-header"
>
                <img
                                src="logo.svg"
                                class="App-logo"
                                alt="logo"
                />
                <h2>
                                To Do List
                </h2>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <div
                  className="App-header"
>
                  <img
                                    alt="logo"
                                    className="App-logo"
                                    src="logo.svg"
                  />
                  <h2>
                                    To Do List
                  </h2>
</div>,
                <div
                  className="App-container"
>
                  <div
                                    className="app-lists"
                  >
                                    <ColumnList
                                                      addTask={[Function]}
                                                      items={Array []}
                                                      title="To Do"
                                                      updateTask={[Function]}
                                    />
                                    <ColumnList
                                                      addTask={[Function]}
                                                      items={Array []}
                                                      title="Done"
                                                      updateTask={[Function]}
                                    />
                  </div>
</div>,
              ],
              "className": "App",
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "pendingWorkPriority": 0,
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="App"
>
              <div
                            class="App-header"
              >
                            <img
                                          src="logo.svg"
                                          class="App-logo"
                                          alt="logo"
                            />
                            <h2>
                                          To Do List
                            </h2>
              </div>
              <div
                            class="App-container"
              >
                            <div
                                          class="app-lists"
                            >
                                          <div
                                                        class="column-list"
                                          >
                                                        <h3>
                                                                      To Do
                                                        </h3>
                                                        <form>
                                                                      <input
                                                                                    type="text"
                                                                                    placeholder="Create new task"
                                                                      />
                                                                      <button
                                                                                    type="submit"
                                                                      >
                                                                                    Add Task
                                                                      </button>
                                                        </form>
                                                        <ul
                                                                      class="list-items"
                                                        />
                                          </div>
                                          <div
                                                        class="column-list"
                                          >
                                                        <h3>
                                                                      Done
                                                        </h3>
                                                        <ul
                                                                      class="list-items"
                                                        />
                                          </div>
                            </div>
              </div>
</div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
              "lineNumber": 60,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 61,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 62,
                },
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "logo",
                  "className": "App-logo",
                  "src": "logo.svg",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 63,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "To Do List",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <h2>
                    To Do List
</h2>,
                  "tag": 5,
                  "type": "h2",
                  "updateQueue": null,
                },
                "stateNode": <img
                  src="logo.svg"
                  class="App-logo"
                  alt="logo"
/>,
                "tag": 5,
                "type": "img",
                "updateQueue": null,
              },
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <img
                    alt="logo"
                    className="App-logo"
                    src="logo.svg"
/>,
                  <h2>
                    To Do List
</h2>,
                ],
                "className": "App-header",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 65,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 66,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 68,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 13,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                        "lineNumber": 9,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 14,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 10,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "To Do",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 15,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 11,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 17,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 12,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 18,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 13,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "placeholder": "Create new task",
                                "type": "text",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 19,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 14,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 1,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Add Task",
                                  "type": "submit",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <button
                                  type="submit"
>
                                  Add Task
</button>,
                                "tag": 5,
                                "type": "button",
                                "updateQueue": null,
                              },
                              "stateNode": <input
                                type="text"
                                placeholder="Create new task"
/>,
                              "tag": 5,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <input
                                  placeholder="Create new task"
                                  type="text"
/>,
                                <button
                                  type="submit"
>
                                  Add Task
</button>,
                              ],
                              "onSubmit": [Function],
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <form>
                              <input
                                                            type="text"
                                                            placeholder="Create new task"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "tag": 5,
                            "type": "form",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "firstEffect": null,
                          "index": 1,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <form
                              onSubmit={[Function]}
>
                              <input
                                                            placeholder="Create new task"
                                                            type="text"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "test": true,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 16,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 19,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 2,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [],
                              "className": "list-items",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <ul
                              class="list-items"
/>,
                            "tag": 5,
                            "type": "ul",
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": <h3>
                          To Do
</h3>,
                        "tag": 5,
                        "type": "h3",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <h3>
                            To Do
</h3>,
                          <If
                            test={true}
>
                            <form
                                                        onSubmit={[Function]}
                            >
                                                        <input
                                                                                    placeholder="Create new task"
                                                                                    type="text"
                                                        />
                                                        <button
                                                                                    type="submit"
                                                        >
                                                                                    Add Task
                                                        </button>
                            </form>
</If>,
                          <ul
                            className="list-items"
>
                            
</ul>,
                        ],
                        "className": "column-list",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="column-list"
>
                        <h3>
                                                To Do
                        </h3>
                        <form>
                                                <input
                                                                        type="text"
                                                                        placeholder="Create new task"
                                                />
                                                <button
                                                                        type="submit"
                                                >
                                                                        Add Task
                                                </button>
                        </form>
                        <ul
                                                class="list-items"
                        />
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": "To Do",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "addTask": [Function],
                      "items": Array [],
                      "title": "To Do",
                      "updateTask": [Function],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 68,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 20,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 10,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Done",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 22,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 11,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 1,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <form
                                onSubmit={[Function]}
>
                                <input
                                                                placeholder="Create new task"
                                                                type="text"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "test": false,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 23,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 19,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 2,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [],
                                "className": "list-items",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <ul
                                class="list-items"
/>,
                              "tag": 5,
                              "type": "ul",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": <h3>
                            Done
</h3>,
                          "tag": 5,
                          "type": "h3",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h3>
                              Done
</h3>,
                            <If
                              test={false}
>
                              <form
                                                            onSubmit={[Function]}
                              >
                                                            <input
                                                                                          placeholder="Create new task"
                                                                                          type="text"
                                                            />
                                                            <button
                                                                                          type="submit"
                                                            >
                                                                                          Add Task
                                                            </button>
                              </form>
</If>,
                            <ul
                              className="list-items"
>
                              
</ul>,
                          ],
                          "className": "column-list",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div
                          class="column-list"
>
                          <h3>
                                                    Done
                          </h3>
                          <ul
                                                    class="list-items"
                          />
</div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": "Done",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "addTask": [Function],
                        "items": Array [],
                        "title": "Done",
                        "updateTask": [Function],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <ColumnList
                        addTask={[Function]}
                        items={Array []}
                        title="To Do"
                        updateTask={[Function]}
/>,
                      <ColumnList
                        addTask={[Function]}
                        items={Array []}
                        title="Done"
                        updateTask={[Function]}
/>,
                    ],
                    "className": "app-lists",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="app-lists"
>
                    <div
                                        class="column-list"
                    >
                                        <h3>
                                                            To Do
                                        </h3>
                                        <form>
                                                            <input
                                                                                type="text"
                                                                                placeholder="Create new task"
                                                            />
                                                            <button
                                                                                type="submit"
                                                            >
                                                                                Add Task
                                                            </button>
                                        </form>
                                        <ul
                                                            class="list-items"
                                        />
                    </div>
                    <div
                                        class="column-list"
                    >
                                        <h3>
                                                            Done
                                        </h3>
                                        <ul
                                                            class="list-items"
                                        />
                    </div>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <div
                    className="app-lists"
>
                    <ColumnList
                                        addTask={[Function]}
                                        items={Array []}
                                        title="To Do"
                                        updateTask={[Function]}
                    />
                    <ColumnList
                                        addTask={[Function]}
                                        items={Array []}
                                        title="Done"
                                        updateTask={[Function]}
                    />
</div>,
                  "className": "App-container",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="App-container"
>
                  <div
                                    class="app-lists"
                  >
                                    <div
                                                      class="column-list"
                                    >
                                                      <h3>
                                                                        To Do
                                                      </h3>
                                                      <form>
                                                                        <input
                                                                                          type="text"
                                                                                          placeholder="Create new task"
                                                                        />
                                                                        <button
                                                                                          type="submit"
                                                                        >
                                                                                          Add Task
                                                                        </button>
                                                      </form>
                                                      <ul
                                                                        class="list-items"
                                                      />
                                    </div>
                                    <div
                                                      class="column-list"
                                    >
                                                      <h3>
                                                                        Done
                                                      </h3>
                                                      <ul
                                                                        class="list-items"
                                                      />
                                    </div>
                  </div>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <div
                class="App-header"
>
                <img
                                src="logo.svg"
                                class="App-logo"
                                alt="logo"
                />
                <h2>
                                To Do List
                </h2>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <div
                  className="App-header"
>
                  <img
                                    alt="logo"
                                    className="App-logo"
                                    src="logo.svg"
                  />
                  <h2>
                                    To Do List
                  </h2>
</div>,
                <div
                  className="App-container"
>
                  <div
                                    className="app-lists"
                  >
                                    <ColumnList
                                                      addTask={[Function]}
                                                      items={Array []}
                                                      title="To Do"
                                                      updateTask={[Function]}
                                    />
                                    <ColumnList
                                                      addTask={[Function]}
                                                      items={Array []}
                                                      title="Done"
                                                      updateTask={[Function]}
                                    />
                  </div>
</div>,
              ],
              "className": "App",
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "pendingWorkPriority": 0,
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="App"
>
              <div
                            class="App-header"
              >
                            <img
                                          src="logo.svg"
                                          class="App-logo"
                                          alt="logo"
                            />
                            <h2>
                                          To Do List
                            </h2>
              </div>
              <div
                            class="App-container"
              >
                            <div
                                          class="app-lists"
                            >
                                          <div
                                                        class="column-list"
                                          >
                                                        <h3>
                                                                      To Do
                                                        </h3>
                                                        <form>
                                                                      <input
                                                                                    type="text"
                                                                                    placeholder="Create new task"
                                                                      />
                                                                      <button
                                                                                    type="submit"
                                                                      >
                                                                                    Add Task
                                                                      </button>
                                                        </form>
                                                        <ul
                                                                      class="list-items"
                                                        />
                                          </div>
                                          <div
                                                        class="column-list"
                                          >
                                                        <h3>
                                                                      Done
                                                        </h3>
                                                        <ul
                                                                      class="list-items"
                                                        />
                                          </div>
                            </div>
              </div>
</div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
          },
          "nextEffect": null,
          "pendingProps": null,
          "pendingWorkPriority": 0,
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 1,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="App"
                  >
                                    <div
                                                      class="App-header"
                                    >
                                                      <img
                                                                        src="logo.svg"
                                                                        class="App-logo"
                                                                        alt="logo"
                                                      />
                                                      <h2>
                                                                        To Do List
                                                      </h2>
                                    </div>
                                    <div
                                                      class="App-container"
                                    >
                                                      <div
                                                                        class="app-lists"
                                                      >
                                                                        <div
                                                                                          class="column-list"
                                                                        >
                                                                                          <h3>
                                                                                                            To Do
                                                                                          </h3>
                                                                                          <form>
                                                                                                            <input
                                                                                                                              type="text"
                                                                                                                              placeholder="Create new task"
                                                                                                            />
                                                                                                            <button
                                                                                                                              type="submit"
                                                                                                            >
                                                                                                                              Add Task
                                                                                                            </button>
                                                                                          </form>
                                                                                          <ul
                                                                                                            class="list-items"
                                                                                          />
                                                                        </div>
                                                                        <div
                                                                                          class="column-list"
                                                                        >
                                                                                          <h3>
                                                                                                            Done
                                                                                          </h3>
                                                                                          <ul
                                                                                                            class="list-items"
                                                                                          />
                                                                        </div>
                                                      </div>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "isScheduled": false,
                "nextScheduledRoot": null,
                "pendingContext": null,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "callbackList": null,
                "first": Object {
                  "callback": null,
                  "isForced": false,
                  "isReplace": false,
                  "isTopLevelUnmount": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "priorityLevel": 1,
                },
                "hasForceUpdate": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "isForced": false,
                  "isReplace": false,
                  "isTopLevelUnmount": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "priorityLevel": 1,
                },
              },
            },
            "child": [Circular],
            "effectTag": 0,
            "firstEffect": FiberNode {
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 60,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 61,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 62,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "logo",
                    "className": "App-logo",
                    "src": "logo.svg",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 63,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "To Do List",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <h2>
                      To Do List
</h2>,
                    "tag": 5,
                    "type": "h2",
                    "updateQueue": null,
                  },
                  "stateNode": <img
                    src="logo.svg"
                    class="App-logo"
                    alt="logo"
/>,
                  "tag": 5,
                  "type": "img",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <img
                      alt="logo"
                      className="App-logo"
                      src="logo.svg"
/>,
                    <h2>
                      To Do List
</h2>,
                  ],
                  "className": "App-header",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 65,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 66,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 68,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 13,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 14,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 10,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "To Do",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 15,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 11,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 17,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 12,
                              },
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 18,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 13,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "placeholder": "Create new task",
                                  "type": "text",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": FiberNode {
                                  "_debugID": 19,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                    "lineNumber": 14,
                                  },
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "firstEffect": null,
                                  "index": 1,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "Add Task",
                                    "type": "submit",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "pendingWorkPriority": 0,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": <button
                                    type="submit"
>
                                    Add Task
</button>,
                                  "tag": 5,
                                  "type": "button",
                                  "updateQueue": null,
                                },
                                "stateNode": <input
                                  type="text"
                                  placeholder="Create new task"
/>,
                                "tag": 5,
                                "type": "input",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <input
                                    placeholder="Create new task"
                                    type="text"
/>,
                                  <button
                                    type="submit"
>
                                    Add Task
</button>,
                                ],
                                "onSubmit": [Function],
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <form>
                                <input
                                                                type="text"
                                                                placeholder="Create new task"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "tag": 5,
                              "type": "form",
                              "updateQueue": null,
                            },
                            "effectTag": 1,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <form
                                onSubmit={[Function]}
>
                                <input
                                                                placeholder="Create new task"
                                                                type="text"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "test": true,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 16,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 19,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 2,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [],
                                "className": "list-items",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <ul
                                class="list-items"
/>,
                              "tag": 5,
                              "type": "ul",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": <h3>
                            To Do
</h3>,
                          "tag": 5,
                          "type": "h3",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h3>
                              To Do
</h3>,
                            <If
                              test={true}
>
                              <form
                                                            onSubmit={[Function]}
                              >
                                                            <input
                                                                                          placeholder="Create new task"
                                                                                          type="text"
                                                            />
                                                            <button
                                                                                          type="submit"
                                                            >
                                                                                          Add Task
                                                            </button>
                              </form>
</If>,
                            <ul
                              className="list-items"
>
                              
</ul>,
                          ],
                          "className": "column-list",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div
                          class="column-list"
>
                          <h3>
                                                    To Do
                          </h3>
                          <form>
                                                    <input
                                                                              type="text"
                                                                              placeholder="Create new task"
                                                    />
                                                    <button
                                                                              type="submit"
                                                    >
                                                                              Add Task
                                                    </button>
                          </form>
                          <ul
                                                    class="list-items"
                          />
</div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": "To Do",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "addTask": [Function],
                        "items": Array [],
                        "title": "To Do",
                        "updateTask": [Function],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                          "lineNumber": 68,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 20,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 21,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 10,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Done",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 22,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 11,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 1,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <form
                                  onSubmit={[Function]}
>
                                  <input
                                                                    placeholder="Create new task"
                                                                    type="text"
                                  />
                                  <button
                                                                    type="submit"
                                  >
                                                                    Add Task
                                  </button>
</form>,
                                "test": false,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 23,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 19,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 2,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [],
                                  "className": "list-items",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <ul
                                  class="list-items"
/>,
                                "tag": 5,
                                "type": "ul",
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 1,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "stateNode": <h3>
                              Done
</h3>,
                            "tag": 5,
                            "type": "h3",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <h3>
                                Done
</h3>,
                              <If
                                test={false}
>
                                <form
                                                                onSubmit={[Function]}
                                >
                                                                <input
                                                                                                placeholder="Create new task"
                                                                                                type="text"
                                                                />
                                                                <button
                                                                                                type="submit"
                                                                >
                                                                                                Add Task
                                                                </button>
                                </form>
</If>,
                              <ul
                                className="list-items"
>
                                
</ul>,
                            ],
                            "className": "column-list",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div
                            class="column-list"
>
                            <h3>
                                                        Done
                            </h3>
                            <ul
                                                        class="list-items"
                            />
</div>,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": "Done",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "addTask": [Function],
                          "items": Array [],
                          "title": "Done",
                          "updateTask": [Function],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <ColumnList
                          addTask={[Function]}
                          items={Array []}
                          title="To Do"
                          updateTask={[Function]}
/>,
                        <ColumnList
                          addTask={[Function]}
                          items={Array []}
                          title="Done"
                          updateTask={[Function]}
/>,
                      ],
                      "className": "app-lists",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="app-lists"
>
                      <div
                                            class="column-list"
                      >
                                            <h3>
                                                                  To Do
                                            </h3>
                                            <form>
                                                                  <input
                                                                                        type="text"
                                                                                        placeholder="Create new task"
                                                                  />
                                                                  <button
                                                                                        type="submit"
                                                                  >
                                                                                        Add Task
                                                                  </button>
                                            </form>
                                            <ul
                                                                  class="list-items"
                                            />
                      </div>
                      <div
                                            class="column-list"
                      >
                                            <h3>
                                                                  Done
                                            </h3>
                                            <ul
                                                                  class="list-items"
                                            />
                      </div>
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <div
                      className="app-lists"
>
                      <ColumnList
                                            addTask={[Function]}
                                            items={Array []}
                                            title="To Do"
                                            updateTask={[Function]}
                      />
                      <ColumnList
                                            addTask={[Function]}
                                            items={Array []}
                                            title="Done"
                                            updateTask={[Function]}
                      />
</div>,
                    "className": "App-container",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="App-container"
>
                    <div
                                        class="app-lists"
                    >
                                        <div
                                                            class="column-list"
                                        >
                                                            <h3>
                                                                                To Do
                                                            </h3>
                                                            <form>
                                                                                <input
                                                                                                    type="text"
                                                                                                    placeholder="Create new task"
                                                                                />
                                                                                <button
                                                                                                    type="submit"
                                                                                >
                                                                                                    Add Task
                                                                                </button>
                                                            </form>
                                                            <ul
                                                                                class="list-items"
                                                            />
                                        </div>
                                        <div
                                                            class="column-list"
                                        >
                                                            <h3>
                                                                                Done
                                                            </h3>
                                                            <ul
                                                                                class="list-items"
                                                            />
                                        </div>
                    </div>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="App-header"
>
                  <img
                                    src="logo.svg"
                                    class="App-logo"
                                    alt="logo"
                  />
                  <h2>
                                    To Do List
                  </h2>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="App-header"
>
                    <img
                                        alt="logo"
                                        className="App-logo"
                                        src="logo.svg"
                    />
                    <h2>
                                        To Do List
                    </h2>
</div>,
                  <div
                    className="App-container"
>
                    <div
                                        className="app-lists"
                    >
                                        <ColumnList
                                                            addTask={[Function]}
                                                            items={Array []}
                                                            title="To Do"
                                                            updateTask={[Function]}
                                        />
                                        <ColumnList
                                                            addTask={[Function]}
                                                            items={Array []}
                                                            title="Done"
                                                            updateTask={[Function]}
                                        />
                    </div>
</div>,
                ],
                "className": "App",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="App"
>
                <div
                                class="App-header"
                >
                                <img
                                                src="logo.svg"
                                                class="App-logo"
                                                alt="logo"
                                />
                                <h2>
                                                To Do List
                                </h2>
                </div>
                <div
                                class="App-container"
                >
                                <div
                                                class="app-lists"
                                >
                                                <div
                                                                class="column-list"
                                                >
                                                                <h3>
                                                                                To Do
                                                                </h3>
                                                                <form>
                                                                                <input
                                                                                                type="text"
                                                                                                placeholder="Create new task"
                                                                                />
                                                                                <button
                                                                                                type="submit"
                                                                                >
                                                                                                Add Task
                                                                                </button>
                                                                </form>
                                                                <ul
                                                                                class="list-items"
                                                                />
                                                </div>
                                                <div
                                                                class="column-list"
                                                >
                                                                <h3>
                                                                                Done
                                                                </h3>
                                                                <ul
                                                                                class="list-items"
                                                                />
                                                </div>
                                </div>
                </div>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 60,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 61,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 62,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "logo",
                    "className": "App-logo",
                    "src": "logo.svg",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 63,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "To Do List",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <h2>
                      To Do List
</h2>,
                    "tag": 5,
                    "type": "h2",
                    "updateQueue": null,
                  },
                  "stateNode": <img
                    src="logo.svg"
                    class="App-logo"
                    alt="logo"
/>,
                  "tag": 5,
                  "type": "img",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <img
                      alt="logo"
                      className="App-logo"
                      src="logo.svg"
/>,
                    <h2>
                      To Do List
</h2>,
                  ],
                  "className": "App-header",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 65,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 66,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 68,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 13,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 14,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 10,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "To Do",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 15,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 11,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 17,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 12,
                              },
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 18,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 13,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "placeholder": "Create new task",
                                  "type": "text",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": FiberNode {
                                  "_debugID": 19,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                    "lineNumber": 14,
                                  },
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "firstEffect": null,
                                  "index": 1,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "Add Task",
                                    "type": "submit",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "pendingWorkPriority": 0,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": <button
                                    type="submit"
>
                                    Add Task
</button>,
                                  "tag": 5,
                                  "type": "button",
                                  "updateQueue": null,
                                },
                                "stateNode": <input
                                  type="text"
                                  placeholder="Create new task"
/>,
                                "tag": 5,
                                "type": "input",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <input
                                    placeholder="Create new task"
                                    type="text"
/>,
                                  <button
                                    type="submit"
>
                                    Add Task
</button>,
                                ],
                                "onSubmit": [Function],
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <form>
                                <input
                                                                type="text"
                                                                placeholder="Create new task"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "tag": 5,
                              "type": "form",
                              "updateQueue": null,
                            },
                            "effectTag": 1,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <form
                                onSubmit={[Function]}
>
                                <input
                                                                placeholder="Create new task"
                                                                type="text"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "test": true,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 16,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 19,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 2,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [],
                                "className": "list-items",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <ul
                                class="list-items"
/>,
                              "tag": 5,
                              "type": "ul",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": <h3>
                            To Do
</h3>,
                          "tag": 5,
                          "type": "h3",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h3>
                              To Do
</h3>,
                            <If
                              test={true}
>
                              <form
                                                            onSubmit={[Function]}
                              >
                                                            <input
                                                                                          placeholder="Create new task"
                                                                                          type="text"
                                                            />
                                                            <button
                                                                                          type="submit"
                                                            >
                                                                                          Add Task
                                                            </button>
                              </form>
</If>,
                            <ul
                              className="list-items"
>
                              
</ul>,
                          ],
                          "className": "column-list",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div
                          class="column-list"
>
                          <h3>
                                                    To Do
                          </h3>
                          <form>
                                                    <input
                                                                              type="text"
                                                                              placeholder="Create new task"
                                                    />
                                                    <button
                                                                              type="submit"
                                                    >
                                                                              Add Task
                                                    </button>
                          </form>
                          <ul
                                                    class="list-items"
                          />
</div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": "To Do",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "addTask": [Function],
                        "items": Array [],
                        "title": "To Do",
                        "updateTask": [Function],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                          "lineNumber": 68,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 20,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 21,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 10,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Done",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 22,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 11,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 1,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <form
                                  onSubmit={[Function]}
>
                                  <input
                                                                    placeholder="Create new task"
                                                                    type="text"
                                  />
                                  <button
                                                                    type="submit"
                                  >
                                                                    Add Task
                                  </button>
</form>,
                                "test": false,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 23,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 19,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 2,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [],
                                  "className": "list-items",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <ul
                                  class="list-items"
/>,
                                "tag": 5,
                                "type": "ul",
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 1,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "stateNode": <h3>
                              Done
</h3>,
                            "tag": 5,
                            "type": "h3",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <h3>
                                Done
</h3>,
                              <If
                                test={false}
>
                                <form
                                                                onSubmit={[Function]}
                                >
                                                                <input
                                                                                                placeholder="Create new task"
                                                                                                type="text"
                                                                />
                                                                <button
                                                                                                type="submit"
                                                                >
                                                                                                Add Task
                                                                </button>
                                </form>
</If>,
                              <ul
                                className="list-items"
>
                                
</ul>,
                            ],
                            "className": "column-list",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div
                            class="column-list"
>
                            <h3>
                                                        Done
                            </h3>
                            <ul
                                                        class="list-items"
                            />
</div>,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": "Done",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "addTask": [Function],
                          "items": Array [],
                          "title": "Done",
                          "updateTask": [Function],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <ColumnList
                          addTask={[Function]}
                          items={Array []}
                          title="To Do"
                          updateTask={[Function]}
/>,
                        <ColumnList
                          addTask={[Function]}
                          items={Array []}
                          title="Done"
                          updateTask={[Function]}
/>,
                      ],
                      "className": "app-lists",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="app-lists"
>
                      <div
                                            class="column-list"
                      >
                                            <h3>
                                                                  To Do
                                            </h3>
                                            <form>
                                                                  <input
                                                                                        type="text"
                                                                                        placeholder="Create new task"
                                                                  />
                                                                  <button
                                                                                        type="submit"
                                                                  >
                                                                                        Add Task
                                                                  </button>
                                            </form>
                                            <ul
                                                                  class="list-items"
                                            />
                      </div>
                      <div
                                            class="column-list"
                      >
                                            <h3>
                                                                  Done
                                            </h3>
                                            <ul
                                                                  class="list-items"
                                            />
                      </div>
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <div
                      className="app-lists"
>
                      <ColumnList
                                            addTask={[Function]}
                                            items={Array []}
                                            title="To Do"
                                            updateTask={[Function]}
                      />
                      <ColumnList
                                            addTask={[Function]}
                                            items={Array []}
                                            title="Done"
                                            updateTask={[Function]}
                      />
</div>,
                    "className": "App-container",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="App-container"
>
                    <div
                                        class="app-lists"
                    >
                                        <div
                                                            class="column-list"
                                        >
                                                            <h3>
                                                                                To Do
                                                            </h3>
                                                            <form>
                                                                                <input
                                                                                                    type="text"
                                                                                                    placeholder="Create new task"
                                                                                />
                                                                                <button
                                                                                                    type="submit"
                                                                                >
                                                                                                    Add Task
                                                                                </button>
                                                            </form>
                                                            <ul
                                                                                class="list-items"
                                                            />
                                        </div>
                                        <div
                                                            class="column-list"
                                        >
                                                            <h3>
                                                                                Done
                                                            </h3>
                                                            <ul
                                                                                class="list-items"
                                                            />
                                        </div>
                    </div>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="App-header"
>
                  <img
                                    src="logo.svg"
                                    class="App-logo"
                                    alt="logo"
                  />
                  <h2>
                                    To Do List
                  </h2>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="App-header"
>
                    <img
                                        alt="logo"
                                        className="App-logo"
                                        src="logo.svg"
                    />
                    <h2>
                                        To Do List
                    </h2>
</div>,
                  <div
                    className="App-container"
>
                    <div
                                        className="app-lists"
                    >
                                        <ColumnList
                                                            addTask={[Function]}
                                                            items={Array []}
                                                            title="To Do"
                                                            updateTask={[Function]}
                                        />
                                        <ColumnList
                                                            addTask={[Function]}
                                                            items={Array []}
                                                            title="Done"
                                                            updateTask={[Function]}
                                        />
                    </div>
</div>,
                ],
                "className": "App",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="App"
>
                <div
                                class="App-header"
                >
                                <img
                                                src="logo.svg"
                                                class="App-logo"
                                                alt="logo"
                                />
                                <h2>
                                                To Do List
                                </h2>
                </div>
                <div
                                class="App-container"
                >
                                <div
                                                class="app-lists"
                                >
                                                <div
                                                                class="column-list"
                                                >
                                                                <h3>
                                                                                To Do
                                                                </h3>
                                                                <form>
                                                                                <input
                                                                                                type="text"
                                                                                                placeholder="Create new task"
                                                                                />
                                                                                <button
                                                                                                type="submit"
                                                                                >
                                                                                                Add Task
                                                                                </button>
                                                                </form>
                                                                <ul
                                                                                class="list-items"
                                                                />
                                                </div>
                                                <div
                                                                class="column-list"
                                                >
                                                                <h3>
                                                                                Done
                                                                </h3>
                                                                <ul
                                                                                class="list-items"
                                                                />
                                                </div>
                                </div>
                </div>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
/>,
            },
            "nextEffect": null,
            "pendingProps": null,
            "pendingWorkPriority": 0,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                                class="App"
                >
                                <div
                                                class="App-header"
                                >
                                                <img
                                                                src="logo.svg"
                                                                class="App-logo"
                                                                alt="logo"
                                                />
                                                <h2>
                                                                To Do List
                                                </h2>
                                </div>
                                <div
                                                class="App-container"
                                >
                                                <div
                                                                class="app-lists"
                                                >
                                                                <div
                                                                                class="column-list"
                                                                >
                                                                                <h3>
                                                                                                To Do
                                                                                </h3>
                                                                                <form>
                                                                                                <input
                                                                                                                type="text"
                                                                                                                placeholder="Create new task"
                                                                                                />
                                                                                                <button
                                                                                                                type="submit"
                                                                                                >
                                                                                                                Add Task
                                                                                                </button>
                                                                                </form>
                                                                                <ul
                                                                                                class="list-items"
                                                                                />
                                                                </div>
                                                                <div
                                                                                class="column-list"
                                                                >
                                                                                <h3>
                                                                                                Done
                                                                                </h3>
                                                                                <ul
                                                                                                class="list-items"
                                                                                />
                                                                </div>
                                                </div>
                                </div>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "isScheduled": false,
              "nextScheduledRoot": null,
              "pendingContext": null,
            },
            "tag": 3,
            "type": null,
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "addTask": [Function],
      "context": Object {},
      "props": Object {},
      "refs": Object {},
      "state": Object {
        "items": Array [],
      },
      "updateTask": [Function],
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="App"
>
        <div
                class="App-header"
        >
                <img
                        src="logo.svg"
                        class="App-logo"
                        alt="logo"
                />
                <h2>
                        To Do List
                </h2>
        </div>
        <div
                class="App-container"
        >
                <div
                        class="app-lists"
                >
                        <div
                                class="column-list"
                        >
                                <h3>
                                        To Do
                                </h3>
                                <form>
                                        <input
                                                type="text"
                                                placeholder="Create new task"
                                        />
                                        <button
                                                type="submit"
                                        >
                                                Add Task
                                        </button>
                                </form>
                                <ul
                                        class="list-items"
                                />
                        </div>
                        <div
                                class="column-list"
                        >
                                <h3>
                                        Done
                                </h3>
                                <ul
                                        class="list-items"
                                />
                        </div>
                </div>
        </div>
</div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="App-header"
>
            <img
                        alt="logo"
                        className="App-logo"
                        src="logo.svg"
            />
            <h2>
                        To Do List
            </h2>
</div>,
          <div
            className="App-container"
>
            <div
                        className="app-lists"
            >
                        <ColumnList
                                    addTask={[Function]}
                                    items={Array []}
                                    title="To Do"
                                    updateTask={[Function]}
                        />
                        <ColumnList
                                    addTask={[Function]}
                                    items={Array []}
                                    title="Done"
                                    updateTask={[Function]}
                        />
            </div>
</div>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <div
            class="App-header"
>
            <img
                        src="logo.svg"
                        class="App-logo"
                        alt="logo"
            />
            <h2>
                        To Do List
            </h2>
</div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="logo"
                className="App-logo"
                src="logo.svg"
/>,
              <h2>
                To Do List
</h2>,
            ],
            "className": "App-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <img
                src="logo.svg"
                class="App-logo"
                alt="logo"
/>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "logo",
                "className": "App-logo",
                "src": "logo.svg",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "img",
            },
            Object {
              "instance": <h2>
                To Do List
</h2>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "To Do List",
              },
              "ref": null,
              "rendered": Array [
                "To Do List",
              ],
              "type": "h2",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": <div
            class="App-container"
>
            <div
                        class="app-lists"
            >
                        <div
                                    class="column-list"
                        >
                                    <h3>
                                                To Do
                                    </h3>
                                    <form>
                                                <input
                                                            type="text"
                                                            placeholder="Create new task"
                                                />
                                                <button
                                                            type="submit"
                                                >
                                                            Add Task
                                                </button>
                                    </form>
                                    <ul
                                                class="list-items"
                                    />
                        </div>
                        <div
                                    class="column-list"
                        >
                                    <h3>
                                                Done
                                    </h3>
                                    <ul
                                                class="list-items"
                                    />
                        </div>
            </div>
</div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="app-lists"
>
              <ColumnList
                            addTask={[Function]}
                            items={Array []}
                            title="To Do"
                            updateTask={[Function]}
              />
              <ColumnList
                            addTask={[Function]}
                            items={Array []}
                            title="Done"
                            updateTask={[Function]}
              />
</div>,
            "className": "App-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <div
                class="app-lists"
>
                <div
                                class="column-list"
                >
                                <h3>
                                                To Do
                                </h3>
                                <form>
                                                <input
                                                                type="text"
                                                                placeholder="Create new task"
                                                />
                                                <button
                                                                type="submit"
                                                >
                                                                Add Task
                                                </button>
                                </form>
                                <ul
                                                class="list-items"
                                />
                </div>
                <div
                                class="column-list"
                >
                                <h3>
                                                Done
                                </h3>
                                <ul
                                                class="list-items"
                                />
                </div>
</div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <ColumnList
                    addTask={[Function]}
                    items={Array []}
                    title="To Do"
                    updateTask={[Function]}
/>,
                  <ColumnList
                    addTask={[Function]}
                    items={Array []}
                    title="Done"
                    updateTask={[Function]}
/>,
                ],
                "className": "app-lists",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "To Do",
                  "nodeType": "function",
                  "props": Object {
                    "addTask": [Function],
                    "items": Array [],
                    "title": "To Do",
                    "updateTask": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": <div
                      class="column-list"
>
                      <h3>
                                            To Do
                      </h3>
                      <form>
                                            <input
                                                                  type="text"
                                                                  placeholder="Create new task"
                                            />
                                            <button
                                                                  type="submit"
                                            >
                                                                  Add Task
                                            </button>
                      </form>
                      <ul
                                            class="list-items"
                      />
</div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <h3>
                          To Do
</h3>,
                        <If
                          test={true}
>
                          <form
                                                    onSubmit={[Function]}
                          >
                                                    <input
                                                                              placeholder="Create new task"
                                                                              type="text"
                                                    />
                                                    <button
                                                                              type="submit"
                                                    >
                                                                              Add Task
                                                    </button>
                          </form>
</If>,
                        <ul
                          className="list-items"
>
                          
</ul>,
                      ],
                      "className": "column-list",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <h3>
                          To Do
</h3>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "To Do",
                        },
                        "ref": null,
                        "rendered": Array [
                          "To Do",
                        ],
                        "type": "h3",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": <form
                            onSubmit={[Function]}
>
                            <input
                                                        placeholder="Create new task"
                                                        type="text"
                            />
                            <button
                                                        type="submit"
                            >
                                                        Add Task
                            </button>
</form>,
                          "test": true,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": <form>
                            <input
                                                        type="text"
                                                        placeholder="Create new task"
                            />
                            <button
                                                        type="submit"
                            >
                                                        Add Task
                            </button>
</form>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <input
                                placeholder="Create new task"
                                type="text"
/>,
                              <button
                                type="submit"
>
                                Add Task
</button>,
                            ],
                            "onSubmit": [Function],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": <input
                                type="text"
                                placeholder="Create new task"
/>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "placeholder": "Create new task",
                                "type": "text",
                              },
                              "ref": null,
                              "rendered": Array [
                                undefined,
                              ],
                              "type": "input",
                            },
                            Object {
                              "instance": <button
                                type="submit"
>
                                Add Task
</button>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Add Task",
                                "type": "submit",
                              },
                              "ref": null,
                              "rendered": Array [
                                "Add Task",
                              ],
                              "type": "button",
                            },
                          ],
                          "type": "form",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": <ul
                          class="list-items"
/>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [],
                          "className": "list-items",
                        },
                        "ref": null,
                        "rendered": Array [
                          Array [],
                        ],
                        "type": "ul",
                      },
                    ],
                    "type": "div",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "Done",
                  "nodeType": "function",
                  "props": Object {
                    "addTask": [Function],
                    "items": Array [],
                    "title": "Done",
                    "updateTask": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": <div
                      class="column-list"
>
                      <h3>
                                            Done
                      </h3>
                      <ul
                                            class="list-items"
                      />
</div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <h3>
                          Done
</h3>,
                        <If
                          test={false}
>
                          <form
                                                    onSubmit={[Function]}
                          >
                                                    <input
                                                                              placeholder="Create new task"
                                                                              type="text"
                                                    />
                                                    <button
                                                                              type="submit"
                                                    >
                                                                              Add Task
                                                    </button>
                          </form>
</If>,
                        <ul
                          className="list-items"
>
                          
</ul>,
                      ],
                      "className": "column-list",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <h3>
                          Done
</h3>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Done",
                        },
                        "ref": null,
                        "rendered": Array [
                          "Done",
                        ],
                        "type": "h3",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": <form
                            onSubmit={[Function]}
>
                            <input
                                                        placeholder="Create new task"
                                                        type="text"
                            />
                            <button
                                                        type="submit"
                            >
                                                        Add Task
                            </button>
</form>,
                          "test": false,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": <ul
                          class="list-items"
/>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [],
                          "className": "list-items",
                        },
                        "ref": null,
                        "rendered": Array [
                          Array [],
                        ],
                        "type": "ul",
                      },
                    ],
                    "type": "div",
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": App {
        "_reactInternalFiber": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 3,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "firstEffect": FiberNode {
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 60,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 61,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 62,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "logo",
                    "className": "App-logo",
                    "src": "logo.svg",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 63,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "To Do List",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <h2>
                      To Do List
</h2>,
                    "tag": 5,
                    "type": "h2",
                    "updateQueue": null,
                  },
                  "stateNode": <img
                    src="logo.svg"
                    class="App-logo"
                    alt="logo"
/>,
                  "tag": 5,
                  "type": "img",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <img
                      alt="logo"
                      className="App-logo"
                      src="logo.svg"
/>,
                    <h2>
                      To Do List
</h2>,
                  ],
                  "className": "App-header",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 65,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 66,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 68,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 13,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 14,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 10,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "To Do",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 15,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 11,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 17,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 12,
                              },
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 18,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 13,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "placeholder": "Create new task",
                                  "type": "text",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": FiberNode {
                                  "_debugID": 19,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                    "lineNumber": 14,
                                  },
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "firstEffect": null,
                                  "index": 1,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "Add Task",
                                    "type": "submit",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "pendingWorkPriority": 0,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": <button
                                    type="submit"
>
                                    Add Task
</button>,
                                  "tag": 5,
                                  "type": "button",
                                  "updateQueue": null,
                                },
                                "stateNode": <input
                                  type="text"
                                  placeholder="Create new task"
/>,
                                "tag": 5,
                                "type": "input",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <input
                                    placeholder="Create new task"
                                    type="text"
/>,
                                  <button
                                    type="submit"
>
                                    Add Task
</button>,
                                ],
                                "onSubmit": [Function],
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <form>
                                <input
                                                                type="text"
                                                                placeholder="Create new task"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "tag": 5,
                              "type": "form",
                              "updateQueue": null,
                            },
                            "effectTag": 1,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <form
                                onSubmit={[Function]}
>
                                <input
                                                                placeholder="Create new task"
                                                                type="text"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "test": true,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 16,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 19,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 2,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [],
                                "className": "list-items",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <ul
                                class="list-items"
/>,
                              "tag": 5,
                              "type": "ul",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": <h3>
                            To Do
</h3>,
                          "tag": 5,
                          "type": "h3",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h3>
                              To Do
</h3>,
                            <If
                              test={true}
>
                              <form
                                                            onSubmit={[Function]}
                              >
                                                            <input
                                                                                          placeholder="Create new task"
                                                                                          type="text"
                                                            />
                                                            <button
                                                                                          type="submit"
                                                            >
                                                                                          Add Task
                                                            </button>
                              </form>
</If>,
                            <ul
                              className="list-items"
>
                              
</ul>,
                          ],
                          "className": "column-list",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div
                          class="column-list"
>
                          <h3>
                                                    To Do
                          </h3>
                          <form>
                                                    <input
                                                                              type="text"
                                                                              placeholder="Create new task"
                                                    />
                                                    <button
                                                                              type="submit"
                                                    >
                                                                              Add Task
                                                    </button>
                          </form>
                          <ul
                                                    class="list-items"
                          />
</div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": "To Do",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "addTask": [Function],
                        "items": Array [],
                        "title": "To Do",
                        "updateTask": [Function],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                          "lineNumber": 68,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 20,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 21,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 10,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Done",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 22,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 11,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 1,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <form
                                  onSubmit={[Function]}
>
                                  <input
                                                                    placeholder="Create new task"
                                                                    type="text"
                                  />
                                  <button
                                                                    type="submit"
                                  >
                                                                    Add Task
                                  </button>
</form>,
                                "test": false,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 23,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 19,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 2,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [],
                                  "className": "list-items",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <ul
                                  class="list-items"
/>,
                                "tag": 5,
                                "type": "ul",
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 1,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "stateNode": <h3>
                              Done
</h3>,
                            "tag": 5,
                            "type": "h3",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <h3>
                                Done
</h3>,
                              <If
                                test={false}
>
                                <form
                                                                onSubmit={[Function]}
                                >
                                                                <input
                                                                                                placeholder="Create new task"
                                                                                                type="text"
                                                                />
                                                                <button
                                                                                                type="submit"
                                                                >
                                                                                                Add Task
                                                                </button>
                                </form>
</If>,
                              <ul
                                className="list-items"
>
                                
</ul>,
                            ],
                            "className": "column-list",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div
                            class="column-list"
>
                            <h3>
                                                        Done
                            </h3>
                            <ul
                                                        class="list-items"
                            />
</div>,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": "Done",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "addTask": [Function],
                          "items": Array [],
                          "title": "Done",
                          "updateTask": [Function],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <ColumnList
                          addTask={[Function]}
                          items={Array []}
                          title="To Do"
                          updateTask={[Function]}
/>,
                        <ColumnList
                          addTask={[Function]}
                          items={Array []}
                          title="Done"
                          updateTask={[Function]}
/>,
                      ],
                      "className": "app-lists",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="app-lists"
>
                      <div
                                            class="column-list"
                      >
                                            <h3>
                                                                  To Do
                                            </h3>
                                            <form>
                                                                  <input
                                                                                        type="text"
                                                                                        placeholder="Create new task"
                                                                  />
                                                                  <button
                                                                                        type="submit"
                                                                  >
                                                                                        Add Task
                                                                  </button>
                                            </form>
                                            <ul
                                                                  class="list-items"
                                            />
                      </div>
                      <div
                                            class="column-list"
                      >
                                            <h3>
                                                                  Done
                                            </h3>
                                            <ul
                                                                  class="list-items"
                                            />
                      </div>
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <div
                      className="app-lists"
>
                      <ColumnList
                                            addTask={[Function]}
                                            items={Array []}
                                            title="To Do"
                                            updateTask={[Function]}
                      />
                      <ColumnList
                                            addTask={[Function]}
                                            items={Array []}
                                            title="Done"
                                            updateTask={[Function]}
                      />
</div>,
                    "className": "App-container",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="App-container"
>
                    <div
                                        class="app-lists"
                    >
                                        <div
                                                            class="column-list"
                                        >
                                                            <h3>
                                                                                To Do
                                                            </h3>
                                                            <form>
                                                                                <input
                                                                                                    type="text"
                                                                                                    placeholder="Create new task"
                                                                                />
                                                                                <button
                                                                                                    type="submit"
                                                                                >
                                                                                                    Add Task
                                                                                </button>
                                                            </form>
                                                            <ul
                                                                                class="list-items"
                                                            />
                                        </div>
                                        <div
                                                            class="column-list"
                                        >
                                                            <h3>
                                                                                Done
                                                            </h3>
                                                            <ul
                                                                                class="list-items"
                                                            />
                                        </div>
                    </div>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="App-header"
>
                  <img
                                    src="logo.svg"
                                    class="App-logo"
                                    alt="logo"
                  />
                  <h2>
                                    To Do List
                  </h2>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="App-header"
>
                    <img
                                        alt="logo"
                                        className="App-logo"
                                        src="logo.svg"
                    />
                    <h2>
                                        To Do List
                    </h2>
</div>,
                  <div
                    className="App-container"
>
                    <div
                                        className="app-lists"
                    >
                                        <ColumnList
                                                            addTask={[Function]}
                                                            items={Array []}
                                                            title="To Do"
                                                            updateTask={[Function]}
                                        />
                                        <ColumnList
                                                            addTask={[Function]}
                                                            items={Array []}
                                                            title="Done"
                                                            updateTask={[Function]}
                                        />
                    </div>
</div>,
                ],
                "className": "App",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="App"
>
                <div
                                class="App-header"
                >
                                <img
                                                src="logo.svg"
                                                class="App-logo"
                                                alt="logo"
                                />
                                <h2>
                                                To Do List
                                </h2>
                </div>
                <div
                                class="App-container"
                >
                                <div
                                                class="app-lists"
                                >
                                                <div
                                                                class="column-list"
                                                >
                                                                <h3>
                                                                                To Do
                                                                </h3>
                                                                <form>
                                                                                <input
                                                                                                type="text"
                                                                                                placeholder="Create new task"
                                                                                />
                                                                                <button
                                                                                                type="submit"
                                                                                >
                                                                                                Add Task
                                                                                </button>
                                                                </form>
                                                                <ul
                                                                                class="list-items"
                                                                />
                                                </div>
                                                <div
                                                                class="column-list"
                                                >
                                                                <h3>
                                                                                Done
                                                                </h3>
                                                                <ul
                                                                                class="list-items"
                                                                />
                                                </div>
                                </div>
                </div>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 60,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 61,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 62,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "logo",
                    "className": "App-logo",
                    "src": "logo.svg",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 63,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "To Do List",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <h2>
                      To Do List
</h2>,
                    "tag": 5,
                    "type": "h2",
                    "updateQueue": null,
                  },
                  "stateNode": <img
                    src="logo.svg"
                    class="App-logo"
                    alt="logo"
/>,
                  "tag": 5,
                  "type": "img",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <img
                      alt="logo"
                      className="App-logo"
                      src="logo.svg"
/>,
                    <h2>
                      To Do List
</h2>,
                  ],
                  "className": "App-header",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 65,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 66,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 68,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 13,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 14,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 10,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "To Do",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 15,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 11,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 17,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 12,
                              },
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 18,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 13,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "placeholder": "Create new task",
                                  "type": "text",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": FiberNode {
                                  "_debugID": 19,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                    "lineNumber": 14,
                                  },
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "firstEffect": null,
                                  "index": 1,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "Add Task",
                                    "type": "submit",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "pendingWorkPriority": 0,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": <button
                                    type="submit"
>
                                    Add Task
</button>,
                                  "tag": 5,
                                  "type": "button",
                                  "updateQueue": null,
                                },
                                "stateNode": <input
                                  type="text"
                                  placeholder="Create new task"
/>,
                                "tag": 5,
                                "type": "input",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <input
                                    placeholder="Create new task"
                                    type="text"
/>,
                                  <button
                                    type="submit"
>
                                    Add Task
</button>,
                                ],
                                "onSubmit": [Function],
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <form>
                                <input
                                                                type="text"
                                                                placeholder="Create new task"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "tag": 5,
                              "type": "form",
                              "updateQueue": null,
                            },
                            "effectTag": 1,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <form
                                onSubmit={[Function]}
>
                                <input
                                                                placeholder="Create new task"
                                                                type="text"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "test": true,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 16,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 19,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 2,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [],
                                "className": "list-items",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <ul
                                class="list-items"
/>,
                              "tag": 5,
                              "type": "ul",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": <h3>
                            To Do
</h3>,
                          "tag": 5,
                          "type": "h3",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h3>
                              To Do
</h3>,
                            <If
                              test={true}
>
                              <form
                                                            onSubmit={[Function]}
                              >
                                                            <input
                                                                                          placeholder="Create new task"
                                                                                          type="text"
                                                            />
                                                            <button
                                                                                          type="submit"
                                                            >
                                                                                          Add Task
                                                            </button>
                              </form>
</If>,
                            <ul
                              className="list-items"
>
                              
</ul>,
                          ],
                          "className": "column-list",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div
                          class="column-list"
>
                          <h3>
                                                    To Do
                          </h3>
                          <form>
                                                    <input
                                                                              type="text"
                                                                              placeholder="Create new task"
                                                    />
                                                    <button
                                                                              type="submit"
                                                    >
                                                                              Add Task
                                                    </button>
                          </form>
                          <ul
                                                    class="list-items"
                          />
</div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": "To Do",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "addTask": [Function],
                        "items": Array [],
                        "title": "To Do",
                        "updateTask": [Function],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                          "lineNumber": 68,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 20,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 21,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 10,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Done",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 22,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 11,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 1,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <form
                                  onSubmit={[Function]}
>
                                  <input
                                                                    placeholder="Create new task"
                                                                    type="text"
                                  />
                                  <button
                                                                    type="submit"
                                  >
                                                                    Add Task
                                  </button>
</form>,
                                "test": false,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 23,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 19,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 2,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [],
                                  "className": "list-items",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <ul
                                  class="list-items"
/>,
                                "tag": 5,
                                "type": "ul",
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 1,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "stateNode": <h3>
                              Done
</h3>,
                            "tag": 5,
                            "type": "h3",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <h3>
                                Done
</h3>,
                              <If
                                test={false}
>
                                <form
                                                                onSubmit={[Function]}
                                >
                                                                <input
                                                                                                placeholder="Create new task"
                                                                                                type="text"
                                                                />
                                                                <button
                                                                                                type="submit"
                                                                >
                                                                                                Add Task
                                                                </button>
                                </form>
</If>,
                              <ul
                                className="list-items"
>
                                
</ul>,
                            ],
                            "className": "column-list",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div
                            class="column-list"
>
                            <h3>
                                                        Done
                            </h3>
                            <ul
                                                        class="list-items"
                            />
</div>,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": "Done",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "addTask": [Function],
                          "items": Array [],
                          "title": "Done",
                          "updateTask": [Function],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <ColumnList
                          addTask={[Function]}
                          items={Array []}
                          title="To Do"
                          updateTask={[Function]}
/>,
                        <ColumnList
                          addTask={[Function]}
                          items={Array []}
                          title="Done"
                          updateTask={[Function]}
/>,
                      ],
                      "className": "app-lists",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="app-lists"
>
                      <div
                                            class="column-list"
                      >
                                            <h3>
                                                                  To Do
                                            </h3>
                                            <form>
                                                                  <input
                                                                                        type="text"
                                                                                        placeholder="Create new task"
                                                                  />
                                                                  <button
                                                                                        type="submit"
                                                                  >
                                                                                        Add Task
                                                                  </button>
                                            </form>
                                            <ul
                                                                  class="list-items"
                                            />
                      </div>
                      <div
                                            class="column-list"
                      >
                                            <h3>
                                                                  Done
                                            </h3>
                                            <ul
                                                                  class="list-items"
                                            />
                      </div>
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <div
                      className="app-lists"
>
                      <ColumnList
                                            addTask={[Function]}
                                            items={Array []}
                                            title="To Do"
                                            updateTask={[Function]}
                      />
                      <ColumnList
                                            addTask={[Function]}
                                            items={Array []}
                                            title="Done"
                                            updateTask={[Function]}
                      />
</div>,
                    "className": "App-container",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="App-container"
>
                    <div
                                        class="app-lists"
                    >
                                        <div
                                                            class="column-list"
                                        >
                                                            <h3>
                                                                                To Do
                                                            </h3>
                                                            <form>
                                                                                <input
                                                                                                    type="text"
                                                                                                    placeholder="Create new task"
                                                                                />
                                                                                <button
                                                                                                    type="submit"
                                                                                >
                                                                                                    Add Task
                                                                                </button>
                                                            </form>
                                                            <ul
                                                                                class="list-items"
                                                            />
                                        </div>
                                        <div
                                                            class="column-list"
                                        >
                                                            <h3>
                                                                                Done
                                                            </h3>
                                                            <ul
                                                                                class="list-items"
                                                            />
                                        </div>
                    </div>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="App-header"
>
                  <img
                                    src="logo.svg"
                                    class="App-logo"
                                    alt="logo"
                  />
                  <h2>
                                    To Do List
                  </h2>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="App-header"
>
                    <img
                                        alt="logo"
                                        className="App-logo"
                                        src="logo.svg"
                    />
                    <h2>
                                        To Do List
                    </h2>
</div>,
                  <div
                    className="App-container"
>
                    <div
                                        className="app-lists"
                    >
                                        <ColumnList
                                                            addTask={[Function]}
                                                            items={Array []}
                                                            title="To Do"
                                                            updateTask={[Function]}
                                        />
                                        <ColumnList
                                                            addTask={[Function]}
                                                            items={Array []}
                                                            title="Done"
                                                            updateTask={[Function]}
                                        />
                    </div>
</div>,
                ],
                "className": "App",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="App"
>
                <div
                                class="App-header"
                >
                                <img
                                                src="logo.svg"
                                                class="App-logo"
                                                alt="logo"
                                />
                                <h2>
                                                To Do List
                                </h2>
                </div>
                <div
                                class="App-container"
                >
                                <div
                                                class="app-lists"
                                >
                                                <div
                                                                class="column-list"
                                                >
                                                                <h3>
                                                                                To Do
                                                                </h3>
                                                                <form>
                                                                                <input
                                                                                                type="text"
                                                                                                placeholder="Create new task"
                                                                                />
                                                                                <button
                                                                                                type="submit"
                                                                                >
                                                                                                Add Task
                                                                                </button>
                                                                </form>
                                                                <ul
                                                                                class="list-items"
                                                                />
                                                </div>
                                                <div
                                                                class="column-list"
                                                >
                                                                <h3>
                                                                                Done
                                                                </h3>
                                                                <ul
                                                                                class="list-items"
                                                                />
                                                </div>
                                </div>
                </div>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "nextEffect": null,
            "pendingProps": null,
            "pendingWorkPriority": 0,
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 1,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="App"
                    >
                                        <div
                                                            class="App-header"
                                        >
                                                            <img
                                                                                src="logo.svg"
                                                                                class="App-logo"
                                                                                alt="logo"
                                                            />
                                                            <h2>
                                                                                To Do List
                                                            </h2>
                                        </div>
                                        <div
                                                            class="App-container"
                                        >
                                                            <div
                                                                                class="app-lists"
                                                            >
                                                                                <div
                                                                                                    class="column-list"
                                                                                >
                                                                                                    <h3>
                                                                                                                        To Do
                                                                                                    </h3>
                                                                                                    <form>
                                                                                                                        <input
                                                                                                                                            type="text"
                                                                                                                                            placeholder="Create new task"
                                                                                                                        />
                                                                                                                        <button
                                                                                                                                            type="submit"
                                                                                                                        >
                                                                                                                                            Add Task
                                                                                                                        </button>
                                                                                                    </form>
                                                                                                    <ul
                                                                                                                        class="list-items"
                                                                                                    />
                                                                                </div>
                                                                                <div
                                                                                                    class="column-list"
                                                                                >
                                                                                                    <h3>
                                                                                                                        Done
                                                                                                    </h3>
                                                                                                    <ul
                                                                                                                        class="list-items"
                                                                                                    />
                                                                                </div>
                                                            </div>
                                        </div>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "isScheduled": false,
                  "nextScheduledRoot": null,
                  "pendingContext": null,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "callbackList": null,
                  "first": Object {
                    "callback": null,
                    "isForced": false,
                    "isReplace": false,
                    "isTopLevelUnmount": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "priorityLevel": 1,
                  },
                  "hasForceUpdate": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "isForced": false,
                    "isReplace": false,
                    "isTopLevelUnmount": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "priorityLevel": 1,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 0,
              "firstEffect": FiberNode {
                "_debugID": 5,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 60,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 6,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 61,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 62,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "logo",
                      "className": "App-logo",
                      "src": "logo.svg",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 63,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "To Do List",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <h2>
                        To Do List
</h2>,
                      "tag": 5,
                      "type": "h2",
                      "updateQueue": null,
                    },
                    "stateNode": <img
                      src="logo.svg"
                      class="App-logo"
                      alt="logo"
/>,
                    "tag": 5,
                    "type": "img",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <img
                        alt="logo"
                        className="App-logo"
                        src="logo.svg"
/>,
                      <h2>
                        To Do List
</h2>,
                    ],
                    "className": "App-header",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 65,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 66,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 11,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                          "lineNumber": 68,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 13,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 14,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 10,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "To Do",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 15,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 11,
                              },
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 17,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 12,
                                },
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 18,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                    "lineNumber": 13,
                                  },
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "placeholder": "Create new task",
                                    "type": "text",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "pendingWorkPriority": 0,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": FiberNode {
                                    "_debugID": 19,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                      "lineNumber": 14,
                                    },
                                    "alternate": null,
                                    "child": null,
                                    "effectTag": 0,
                                    "firstEffect": null,
                                    "index": 1,
                                    "internalContextTag": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": "Add Task",
                                      "type": "submit",
                                    },
                                    "memoizedState": null,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "pendingWorkPriority": 0,
                                    "ref": null,
                                    "return": [Circular],
                                    "sibling": null,
                                    "stateNode": <button
                                      type="submit"
>
                                      Add Task
</button>,
                                    "tag": 5,
                                    "type": "button",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <input
                                    type="text"
                                    placeholder="Create new task"
/>,
                                  "tag": 5,
                                  "type": "input",
                                  "updateQueue": null,
                                },
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <input
                                      placeholder="Create new task"
                                      type="text"
/>,
                                    <button
                                      type="submit"
>
                                      Add Task
</button>,
                                  ],
                                  "onSubmit": [Function],
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <form>
                                  <input
                                                                    type="text"
                                                                    placeholder="Create new task"
                                  />
                                  <button
                                                                    type="submit"
                                  >
                                                                    Add Task
                                  </button>
</form>,
                                "tag": 5,
                                "type": "form",
                                "updateQueue": null,
                              },
                              "effectTag": 1,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <form
                                  onSubmit={[Function]}
>
                                  <input
                                                                    placeholder="Create new task"
                                                                    type="text"
                                  />
                                  <button
                                                                    type="submit"
                                  >
                                                                    Add Task
                                  </button>
</form>,
                                "test": true,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 16,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 19,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 2,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [],
                                  "className": "list-items",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <ul
                                  class="list-items"
/>,
                                "tag": 5,
                                "type": "ul",
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 1,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "stateNode": <h3>
                              To Do
</h3>,
                            "tag": 5,
                            "type": "h3",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <h3>
                                To Do
</h3>,
                              <If
                                test={true}
>
                                <form
                                                                onSubmit={[Function]}
                                >
                                                                <input
                                                                                                placeholder="Create new task"
                                                                                                type="text"
                                                                />
                                                                <button
                                                                                                type="submit"
                                                                >
                                                                                                Add Task
                                                                </button>
                                </form>
</If>,
                              <ul
                                className="list-items"
>
                                
</ul>,
                            ],
                            "className": "column-list",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div
                            class="column-list"
>
                            <h3>
                                                        To Do
                            </h3>
                            <form>
                                                        <input
                                                                                    type="text"
                                                                                    placeholder="Create new task"
                                                        />
                                                        <button
                                                                                    type="submit"
                                                        >
                                                                                    Add Task
                                                        </button>
                            </form>
                            <ul
                                                        class="list-items"
                            />
</div>,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": "To Do",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "addTask": [Function],
                          "items": Array [],
                          "title": "To Do",
                          "updateTask": [Function],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 12,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                            "lineNumber": 68,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 20,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 9,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 21,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 10,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Done",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 22,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 11,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 1,
                                "firstEffect": null,
                                "index": 1,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <form
                                    onSubmit={[Function]}
>
                                    <input
                                                                        placeholder="Create new task"
                                                                        type="text"
                                    />
                                    <button
                                                                        type="submit"
                                    >
                                                                        Add Task
                                    </button>
</form>,
                                  "test": false,
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": FiberNode {
                                  "_debugID": 23,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                    "lineNumber": 19,
                                  },
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "firstEffect": null,
                                  "index": 2,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [],
                                    "className": "list-items",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "pendingWorkPriority": 0,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": <ul
                                    class="list-items"
/>,
                                  "tag": 5,
                                  "type": "ul",
                                  "updateQueue": null,
                                },
                                "stateNode": null,
                                "tag": 1,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "stateNode": <h3>
                                Done
</h3>,
                              "tag": 5,
                              "type": "h3",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <h3>
                                  Done
</h3>,
                                <If
                                  test={false}
>
                                  <form
                                                                    onSubmit={[Function]}
                                  >
                                                                    <input
                                                                                                      placeholder="Create new task"
                                                                                                      type="text"
                                                                    />
                                                                    <button
                                                                                                      type="submit"
                                                                    >
                                                                                                      Add Task
                                                                    </button>
                                  </form>
</If>,
                                <ul
                                  className="list-items"
>
                                  
</ul>,
                              ],
                              "className": "column-list",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <div
                              class="column-list"
>
                              <h3>
                                                            Done
                              </h3>
                              <ul
                                                            class="list-items"
                              />
</div>,
                            "tag": 5,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "firstEffect": null,
                          "index": 1,
                          "internalContextTag": 0,
                          "key": "Done",
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "addTask": [Function],
                            "items": Array [],
                            "title": "Done",
                            "updateTask": [Function],
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <ColumnList
                            addTask={[Function]}
                            items={Array []}
                            title="To Do"
                            updateTask={[Function]}
/>,
                          <ColumnList
                            addTask={[Function]}
                            items={Array []}
                            title="Done"
                            updateTask={[Function]}
/>,
                        ],
                        "className": "app-lists",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="app-lists"
>
                        <div
                                                class="column-list"
                        >
                                                <h3>
                                                                        To Do
                                                </h3>
                                                <form>
                                                                        <input
                                                                                                type="text"
                                                                                                placeholder="Create new task"
                                                                        />
                                                                        <button
                                                                                                type="submit"
                                                                        >
                                                                                                Add Task
                                                                        </button>
                                                </form>
                                                <ul
                                                                        class="list-items"
                                                />
                        </div>
                        <div
                                                class="column-list"
                        >
                                                <h3>
                                                                        Done
                                                </h3>
                                                <ul
                                                                        class="list-items"
                                                />
                        </div>
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <div
                        className="app-lists"
>
                        <ColumnList
                                                addTask={[Function]}
                                                items={Array []}
                                                title="To Do"
                                                updateTask={[Function]}
                        />
                        <ColumnList
                                                addTask={[Function]}
                                                items={Array []}
                                                title="Done"
                                                updateTask={[Function]}
                        />
</div>,
                      "className": "App-container",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="App-container"
>
                      <div
                                            class="app-lists"
                      >
                                            <div
                                                                  class="column-list"
                                            >
                                                                  <h3>
                                                                                        To Do
                                                                  </h3>
                                                                  <form>
                                                                                        <input
                                                                                                              type="text"
                                                                                                              placeholder="Create new task"
                                                                                        />
                                                                                        <button
                                                                                                              type="submit"
                                                                                        >
                                                                                                              Add Task
                                                                                        </button>
                                                                  </form>
                                                                  <ul
                                                                                        class="list-items"
                                                                  />
                                            </div>
                                            <div
                                                                  class="column-list"
                                            >
                                                                  <h3>
                                                                                        Done
                                                                  </h3>
                                                                  <ul
                                                                                        class="list-items"
                                                                  />
                                            </div>
                      </div>
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="App-header"
>
                    <img
                                        src="logo.svg"
                                        class="App-logo"
                                        alt="logo"
                    />
                    <h2>
                                        To Do List
                    </h2>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="App-header"
>
                      <img
                                            alt="logo"
                                            className="App-logo"
                                            src="logo.svg"
                      />
                      <h2>
                                            To Do List
                      </h2>
</div>,
                    <div
                      className="App-container"
>
                      <div
                                            className="app-lists"
                      >
                                            <ColumnList
                                                                  addTask={[Function]}
                                                                  items={Array []}
                                                                  title="To Do"
                                                                  updateTask={[Function]}
                                            />
                                            <ColumnList
                                                                  addTask={[Function]}
                                                                  items={Array []}
                                                                  title="Done"
                                                                  updateTask={[Function]}
                                            />
                      </div>
</div>,
                  ],
                  "className": "App",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="App"
>
                  <div
                                    class="App-header"
                  >
                                    <img
                                                      src="logo.svg"
                                                      class="App-logo"
                                                      alt="logo"
                                    />
                                    <h2>
                                                      To Do List
                                    </h2>
                  </div>
                  <div
                                    class="App-container"
                  >
                                    <div
                                                      class="app-lists"
                                    >
                                                      <div
                                                                        class="column-list"
                                                      >
                                                                        <h3>
                                                                                          To Do
                                                                        </h3>
                                                                        <form>
                                                                                          <input
                                                                                                            type="text"
                                                                                                            placeholder="Create new task"
                                                                                          />
                                                                                          <button
                                                                                                            type="submit"
                                                                                          >
                                                                                                            Add Task
                                                                                          </button>
                                                                        </form>
                                                                        <ul
                                                                                          class="list-items"
                                                                        />
                                                      </div>
                                                      <div
                                                                        class="column-list"
                                                      >
                                                                        <h3>
                                                                                          Done
                                                                        </h3>
                                                                        <ul
                                                                                          class="list-items"
                                                                        />
                                                      </div>
                                    </div>
                  </div>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": FiberNode {
                "_debugID": 5,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 60,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 6,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 61,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 62,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "logo",
                      "className": "App-logo",
                      "src": "logo.svg",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 63,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "To Do List",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <h2>
                        To Do List
</h2>,
                      "tag": 5,
                      "type": "h2",
                      "updateQueue": null,
                    },
                    "stateNode": <img
                      src="logo.svg"
                      class="App-logo"
                      alt="logo"
/>,
                    "tag": 5,
                    "type": "img",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <img
                        alt="logo"
                        className="App-logo"
                        src="logo.svg"
/>,
                      <h2>
                        To Do List
</h2>,
                    ],
                    "className": "App-header",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 65,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 66,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 11,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                          "lineNumber": 68,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 13,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 14,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 10,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "To Do",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 15,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 11,
                              },
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 17,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 12,
                                },
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 18,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                    "lineNumber": 13,
                                  },
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "placeholder": "Create new task",
                                    "type": "text",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "pendingWorkPriority": 0,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": FiberNode {
                                    "_debugID": 19,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                      "lineNumber": 14,
                                    },
                                    "alternate": null,
                                    "child": null,
                                    "effectTag": 0,
                                    "firstEffect": null,
                                    "index": 1,
                                    "internalContextTag": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": "Add Task",
                                      "type": "submit",
                                    },
                                    "memoizedState": null,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "pendingWorkPriority": 0,
                                    "ref": null,
                                    "return": [Circular],
                                    "sibling": null,
                                    "stateNode": <button
                                      type="submit"
>
                                      Add Task
</button>,
                                    "tag": 5,
                                    "type": "button",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <input
                                    type="text"
                                    placeholder="Create new task"
/>,
                                  "tag": 5,
                                  "type": "input",
                                  "updateQueue": null,
                                },
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <input
                                      placeholder="Create new task"
                                      type="text"
/>,
                                    <button
                                      type="submit"
>
                                      Add Task
</button>,
                                  ],
                                  "onSubmit": [Function],
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <form>
                                  <input
                                                                    type="text"
                                                                    placeholder="Create new task"
                                  />
                                  <button
                                                                    type="submit"
                                  >
                                                                    Add Task
                                  </button>
</form>,
                                "tag": 5,
                                "type": "form",
                                "updateQueue": null,
                              },
                              "effectTag": 1,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <form
                                  onSubmit={[Function]}
>
                                  <input
                                                                    placeholder="Create new task"
                                                                    type="text"
                                  />
                                  <button
                                                                    type="submit"
                                  >
                                                                    Add Task
                                  </button>
</form>,
                                "test": true,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 16,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 19,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 2,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [],
                                  "className": "list-items",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <ul
                                  class="list-items"
/>,
                                "tag": 5,
                                "type": "ul",
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 1,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "stateNode": <h3>
                              To Do
</h3>,
                            "tag": 5,
                            "type": "h3",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <h3>
                                To Do
</h3>,
                              <If
                                test={true}
>
                                <form
                                                                onSubmit={[Function]}
                                >
                                                                <input
                                                                                                placeholder="Create new task"
                                                                                                type="text"
                                                                />
                                                                <button
                                                                                                type="submit"
                                                                >
                                                                                                Add Task
                                                                </button>
                                </form>
</If>,
                              <ul
                                className="list-items"
>
                                
</ul>,
                            ],
                            "className": "column-list",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div
                            class="column-list"
>
                            <h3>
                                                        To Do
                            </h3>
                            <form>
                                                        <input
                                                                                    type="text"
                                                                                    placeholder="Create new task"
                                                        />
                                                        <button
                                                                                    type="submit"
                                                        >
                                                                                    Add Task
                                                        </button>
                            </form>
                            <ul
                                                        class="list-items"
                            />
</div>,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": "To Do",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "addTask": [Function],
                          "items": Array [],
                          "title": "To Do",
                          "updateTask": [Function],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 12,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                            "lineNumber": 68,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 20,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 9,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 21,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 10,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Done",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 22,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 11,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 1,
                                "firstEffect": null,
                                "index": 1,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <form
                                    onSubmit={[Function]}
>
                                    <input
                                                                        placeholder="Create new task"
                                                                        type="text"
                                    />
                                    <button
                                                                        type="submit"
                                    >
                                                                        Add Task
                                    </button>
</form>,
                                  "test": false,
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": FiberNode {
                                  "_debugID": 23,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                    "lineNumber": 19,
                                  },
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "firstEffect": null,
                                  "index": 2,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [],
                                    "className": "list-items",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "pendingWorkPriority": 0,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": <ul
                                    class="list-items"
/>,
                                  "tag": 5,
                                  "type": "ul",
                                  "updateQueue": null,
                                },
                                "stateNode": null,
                                "tag": 1,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "stateNode": <h3>
                                Done
</h3>,
                              "tag": 5,
                              "type": "h3",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <h3>
                                  Done
</h3>,
                                <If
                                  test={false}
>
                                  <form
                                                                    onSubmit={[Function]}
                                  >
                                                                    <input
                                                                                                      placeholder="Create new task"
                                                                                                      type="text"
                                                                    />
                                                                    <button
                                                                                                      type="submit"
                                                                    >
                                                                                                      Add Task
                                                                    </button>
                                  </form>
</If>,
                                <ul
                                  className="list-items"
>
                                  
</ul>,
                              ],
                              "className": "column-list",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <div
                              class="column-list"
>
                              <h3>
                                                            Done
                              </h3>
                              <ul
                                                            class="list-items"
                              />
</div>,
                            "tag": 5,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "firstEffect": null,
                          "index": 1,
                          "internalContextTag": 0,
                          "key": "Done",
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "addTask": [Function],
                            "items": Array [],
                            "title": "Done",
                            "updateTask": [Function],
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <ColumnList
                            addTask={[Function]}
                            items={Array []}
                            title="To Do"
                            updateTask={[Function]}
/>,
                          <ColumnList
                            addTask={[Function]}
                            items={Array []}
                            title="Done"
                            updateTask={[Function]}
/>,
                        ],
                        "className": "app-lists",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="app-lists"
>
                        <div
                                                class="column-list"
                        >
                                                <h3>
                                                                        To Do
                                                </h3>
                                                <form>
                                                                        <input
                                                                                                type="text"
                                                                                                placeholder="Create new task"
                                                                        />
                                                                        <button
                                                                                                type="submit"
                                                                        >
                                                                                                Add Task
                                                                        </button>
                                                </form>
                                                <ul
                                                                        class="list-items"
                                                />
                        </div>
                        <div
                                                class="column-list"
                        >
                                                <h3>
                                                                        Done
                                                </h3>
                                                <ul
                                                                        class="list-items"
                                                />
                        </div>
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <div
                        className="app-lists"
>
                        <ColumnList
                                                addTask={[Function]}
                                                items={Array []}
                                                title="To Do"
                                                updateTask={[Function]}
                        />
                        <ColumnList
                                                addTask={[Function]}
                                                items={Array []}
                                                title="Done"
                                                updateTask={[Function]}
                        />
</div>,
                      "className": "App-container",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="App-container"
>
                      <div
                                            class="app-lists"
                      >
                                            <div
                                                                  class="column-list"
                                            >
                                                                  <h3>
                                                                                        To Do
                                                                  </h3>
                                                                  <form>
                                                                                        <input
                                                                                                              type="text"
                                                                                                              placeholder="Create new task"
                                                                                        />
                                                                                        <button
                                                                                                              type="submit"
                                                                                        >
                                                                                                              Add Task
                                                                                        </button>
                                                                  </form>
                                                                  <ul
                                                                                        class="list-items"
                                                                  />
                                            </div>
                                            <div
                                                                  class="column-list"
                                            >
                                                                  <h3>
                                                                                        Done
                                                                  </h3>
                                                                  <ul
                                                                                        class="list-items"
                                                                  />
                                            </div>
                      </div>
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="App-header"
>
                    <img
                                        src="logo.svg"
                                        class="App-logo"
                                        alt="logo"
                    />
                    <h2>
                                        To Do List
                    </h2>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="App-header"
>
                      <img
                                            alt="logo"
                                            className="App-logo"
                                            src="logo.svg"
                      />
                      <h2>
                                            To Do List
                      </h2>
</div>,
                    <div
                      className="App-container"
>
                      <div
                                            className="app-lists"
                      >
                                            <ColumnList
                                                                  addTask={[Function]}
                                                                  items={Array []}
                                                                  title="To Do"
                                                                  updateTask={[Function]}
                                            />
                                            <ColumnList
                                                                  addTask={[Function]}
                                                                  items={Array []}
                                                                  title="Done"
                                                                  updateTask={[Function]}
                                            />
                      </div>
</div>,
                  ],
                  "className": "App",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="App"
>
                  <div
                                    class="App-header"
                  >
                                    <img
                                                      src="logo.svg"
                                                      class="App-logo"
                                                      alt="logo"
                                    />
                                    <h2>
                                                      To Do List
                                    </h2>
                  </div>
                  <div
                                    class="App-container"
                  >
                                    <div
                                                      class="app-lists"
                                    >
                                                      <div
                                                                        class="column-list"
                                                      >
                                                                        <h3>
                                                                                          To Do
                                                                        </h3>
                                                                        <form>
                                                                                          <input
                                                                                                            type="text"
                                                                                                            placeholder="Create new task"
                                                                                          />
                                                                                          <button
                                                                                                            type="submit"
                                                                                          >
                                                                                                            Add Task
                                                                                          </button>
                                                                        </form>
                                                                        <ul
                                                                                          class="list-items"
                                                                        />
                                                      </div>
                                                      <div
                                                                        class="column-list"
                                                      >
                                                                        <h3>
                                                                                          Done
                                                                        </h3>
                                                                        <ul
                                                                                          class="list-items"
                                                                        />
                                                      </div>
                                    </div>
                  </div>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
/>,
              },
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="App"
                  >
                                    <div
                                                      class="App-header"
                                    >
                                                      <img
                                                                        src="logo.svg"
                                                                        class="App-logo"
                                                                        alt="logo"
                                                      />
                                                      <h2>
                                                                        To Do List
                                                      </h2>
                                    </div>
                                    <div
                                                      class="App-container"
                                    >
                                                      <div
                                                                        class="app-lists"
                                                      >
                                                                        <div
                                                                                          class="column-list"
                                                                        >
                                                                                          <h3>
                                                                                                            To Do
                                                                                          </h3>
                                                                                          <form>
                                                                                                            <input
                                                                                                                              type="text"
                                                                                                                              placeholder="Create new task"
                                                                                                            />
                                                                                                            <button
                                                                                                                              type="submit"
                                                                                                            >
                                                                                                                              Add Task
                                                                                                            </button>
                                                                                          </form>
                                                                                          <ul
                                                                                                            class="list-items"
                                                                                          />
                                                                        </div>
                                                                        <div
                                                                                          class="column-list"
                                                                        >
                                                                                          <h3>
                                                                                                            Done
                                                                                          </h3>
                                                                                          <ul
                                                                                                            class="list-items"
                                                                                          />
                                                                        </div>
                                                      </div>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "isScheduled": false,
                "nextScheduledRoot": null,
                "pendingContext": null,
              },
              "tag": 3,
              "type": null,
              "updateQueue": null,
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
              "lineNumber": 60,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 61,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 62,
                },
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "logo",
                  "className": "App-logo",
                  "src": "logo.svg",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 63,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "To Do List",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <h2>
                    To Do List
</h2>,
                  "tag": 5,
                  "type": "h2",
                  "updateQueue": null,
                },
                "stateNode": <img
                  src="logo.svg"
                  class="App-logo"
                  alt="logo"
/>,
                "tag": 5,
                "type": "img",
                "updateQueue": null,
              },
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <img
                    alt="logo"
                    className="App-logo"
                    src="logo.svg"
/>,
                  <h2>
                    To Do List
</h2>,
                ],
                "className": "App-header",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 65,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 66,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 68,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 13,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                        "lineNumber": 9,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 14,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 10,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "To Do",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 15,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 11,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 17,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 12,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 18,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 13,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "placeholder": "Create new task",
                                "type": "text",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 19,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 14,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 1,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Add Task",
                                  "type": "submit",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <button
                                  type="submit"
>
                                  Add Task
</button>,
                                "tag": 5,
                                "type": "button",
                                "updateQueue": null,
                              },
                              "stateNode": <input
                                type="text"
                                placeholder="Create new task"
/>,
                              "tag": 5,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <input
                                  placeholder="Create new task"
                                  type="text"
/>,
                                <button
                                  type="submit"
>
                                  Add Task
</button>,
                              ],
                              "onSubmit": [Function],
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <form>
                              <input
                                                            type="text"
                                                            placeholder="Create new task"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "tag": 5,
                            "type": "form",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "firstEffect": null,
                          "index": 1,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <form
                              onSubmit={[Function]}
>
                              <input
                                                            placeholder="Create new task"
                                                            type="text"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "test": true,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 16,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 19,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 2,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [],
                              "className": "list-items",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <ul
                              class="list-items"
/>,
                            "tag": 5,
                            "type": "ul",
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": <h3>
                          To Do
</h3>,
                        "tag": 5,
                        "type": "h3",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <h3>
                            To Do
</h3>,
                          <If
                            test={true}
>
                            <form
                                                        onSubmit={[Function]}
                            >
                                                        <input
                                                                                    placeholder="Create new task"
                                                                                    type="text"
                                                        />
                                                        <button
                                                                                    type="submit"
                                                        >
                                                                                    Add Task
                                                        </button>
                            </form>
</If>,
                          <ul
                            className="list-items"
>
                            
</ul>,
                        ],
                        "className": "column-list",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="column-list"
>
                        <h3>
                                                To Do
                        </h3>
                        <form>
                                                <input
                                                                        type="text"
                                                                        placeholder="Create new task"
                                                />
                                                <button
                                                                        type="submit"
                                                >
                                                                        Add Task
                                                </button>
                        </form>
                        <ul
                                                class="list-items"
                        />
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": "To Do",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "addTask": [Function],
                      "items": Array [],
                      "title": "To Do",
                      "updateTask": [Function],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 68,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 20,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 10,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Done",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 22,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 11,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 1,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <form
                                onSubmit={[Function]}
>
                                <input
                                                                placeholder="Create new task"
                                                                type="text"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "test": false,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 23,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 19,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 2,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [],
                                "className": "list-items",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <ul
                                class="list-items"
/>,
                              "tag": 5,
                              "type": "ul",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": <h3>
                            Done
</h3>,
                          "tag": 5,
                          "type": "h3",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h3>
                              Done
</h3>,
                            <If
                              test={false}
>
                              <form
                                                            onSubmit={[Function]}
                              >
                                                            <input
                                                                                          placeholder="Create new task"
                                                                                          type="text"
                                                            />
                                                            <button
                                                                                          type="submit"
                                                            >
                                                                                          Add Task
                                                            </button>
                              </form>
</If>,
                            <ul
                              className="list-items"
>
                              
</ul>,
                          ],
                          "className": "column-list",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div
                          class="column-list"
>
                          <h3>
                                                    Done
                          </h3>
                          <ul
                                                    class="list-items"
                          />
</div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": "Done",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "addTask": [Function],
                        "items": Array [],
                        "title": "Done",
                        "updateTask": [Function],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <ColumnList
                        addTask={[Function]}
                        items={Array []}
                        title="To Do"
                        updateTask={[Function]}
/>,
                      <ColumnList
                        addTask={[Function]}
                        items={Array []}
                        title="Done"
                        updateTask={[Function]}
/>,
                    ],
                    "className": "app-lists",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="app-lists"
>
                    <div
                                        class="column-list"
                    >
                                        <h3>
                                                            To Do
                                        </h3>
                                        <form>
                                                            <input
                                                                                type="text"
                                                                                placeholder="Create new task"
                                                            />
                                                            <button
                                                                                type="submit"
                                                            >
                                                                                Add Task
                                                            </button>
                                        </form>
                                        <ul
                                                            class="list-items"
                                        />
                    </div>
                    <div
                                        class="column-list"
                    >
                                        <h3>
                                                            Done
                                        </h3>
                                        <ul
                                                            class="list-items"
                                        />
                    </div>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <div
                    className="app-lists"
>
                    <ColumnList
                                        addTask={[Function]}
                                        items={Array []}
                                        title="To Do"
                                        updateTask={[Function]}
                    />
                    <ColumnList
                                        addTask={[Function]}
                                        items={Array []}
                                        title="Done"
                                        updateTask={[Function]}
                    />
</div>,
                  "className": "App-container",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="App-container"
>
                  <div
                                    class="app-lists"
                  >
                                    <div
                                                      class="column-list"
                                    >
                                                      <h3>
                                                                        To Do
                                                      </h3>
                                                      <form>
                                                                        <input
                                                                                          type="text"
                                                                                          placeholder="Create new task"
                                                                        />
                                                                        <button
                                                                                          type="submit"
                                                                        >
                                                                                          Add Task
                                                                        </button>
                                                      </form>
                                                      <ul
                                                                        class="list-items"
                                                      />
                                    </div>
                                    <div
                                                      class="column-list"
                                    >
                                                      <h3>
                                                                        Done
                                                      </h3>
                                                      <ul
                                                                        class="list-items"
                                                      />
                                    </div>
                  </div>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <div
                class="App-header"
>
                <img
                                src="logo.svg"
                                class="App-logo"
                                alt="logo"
                />
                <h2>
                                To Do List
                </h2>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <div
                  className="App-header"
>
                  <img
                                    alt="logo"
                                    className="App-logo"
                                    src="logo.svg"
                  />
                  <h2>
                                    To Do List
                  </h2>
</div>,
                <div
                  className="App-container"
>
                  <div
                                    className="app-lists"
                  >
                                    <ColumnList
                                                      addTask={[Function]}
                                                      items={Array []}
                                                      title="To Do"
                                                      updateTask={[Function]}
                                    />
                                    <ColumnList
                                                      addTask={[Function]}
                                                      items={Array []}
                                                      title="Done"
                                                      updateTask={[Function]}
                                    />
                  </div>
</div>,
              ],
              "className": "App",
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "pendingWorkPriority": 0,
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="App"
>
              <div
                            class="App-header"
              >
                            <img
                                          src="logo.svg"
                                          class="App-logo"
                                          alt="logo"
                            />
                            <h2>
                                          To Do List
                            </h2>
              </div>
              <div
                            class="App-container"
              >
                            <div
                                          class="app-lists"
                            >
                                          <div
                                                        class="column-list"
                                          >
                                                        <h3>
                                                                      To Do
                                                        </h3>
                                                        <form>
                                                                      <input
                                                                                    type="text"
                                                                                    placeholder="Create new task"
                                                                      />
                                                                      <button
                                                                                    type="submit"
                                                                      >
                                                                                    Add Task
                                                                      </button>
                                                        </form>
                                                        <ul
                                                                      class="list-items"
                                                        />
                                          </div>
                                          <div
                                                        class="column-list"
                                          >
                                                        <h3>
                                                                      Done
                                                        </h3>
                                                        <ul
                                                                      class="list-items"
                                                        />
                                          </div>
                            </div>
              </div>
</div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 1,
          "firstEffect": FiberNode {
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
              "lineNumber": 60,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 61,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 62,
                },
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "logo",
                  "className": "App-logo",
                  "src": "logo.svg",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 63,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "To Do List",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <h2>
                    To Do List
</h2>,
                  "tag": 5,
                  "type": "h2",
                  "updateQueue": null,
                },
                "stateNode": <img
                  src="logo.svg"
                  class="App-logo"
                  alt="logo"
/>,
                "tag": 5,
                "type": "img",
                "updateQueue": null,
              },
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <img
                    alt="logo"
                    className="App-logo"
                    src="logo.svg"
/>,
                  <h2>
                    To Do List
</h2>,
                ],
                "className": "App-header",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 65,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 66,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 68,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 13,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                        "lineNumber": 9,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 14,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 10,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "To Do",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 15,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 11,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 17,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 12,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 18,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 13,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "placeholder": "Create new task",
                                "type": "text",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 19,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 14,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 1,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Add Task",
                                  "type": "submit",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <button
                                  type="submit"
>
                                  Add Task
</button>,
                                "tag": 5,
                                "type": "button",
                                "updateQueue": null,
                              },
                              "stateNode": <input
                                type="text"
                                placeholder="Create new task"
/>,
                              "tag": 5,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <input
                                  placeholder="Create new task"
                                  type="text"
/>,
                                <button
                                  type="submit"
>
                                  Add Task
</button>,
                              ],
                              "onSubmit": [Function],
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <form>
                              <input
                                                            type="text"
                                                            placeholder="Create new task"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "tag": 5,
                            "type": "form",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "firstEffect": null,
                          "index": 1,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <form
                              onSubmit={[Function]}
>
                              <input
                                                            placeholder="Create new task"
                                                            type="text"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "test": true,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 16,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 19,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 2,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [],
                              "className": "list-items",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <ul
                              class="list-items"
/>,
                            "tag": 5,
                            "type": "ul",
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": <h3>
                          To Do
</h3>,
                        "tag": 5,
                        "type": "h3",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <h3>
                            To Do
</h3>,
                          <If
                            test={true}
>
                            <form
                                                        onSubmit={[Function]}
                            >
                                                        <input
                                                                                    placeholder="Create new task"
                                                                                    type="text"
                                                        />
                                                        <button
                                                                                    type="submit"
                                                        >
                                                                                    Add Task
                                                        </button>
                            </form>
</If>,
                          <ul
                            className="list-items"
>
                            
</ul>,
                        ],
                        "className": "column-list",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="column-list"
>
                        <h3>
                                                To Do
                        </h3>
                        <form>
                                                <input
                                                                        type="text"
                                                                        placeholder="Create new task"
                                                />
                                                <button
                                                                        type="submit"
                                                >
                                                                        Add Task
                                                </button>
                        </form>
                        <ul
                                                class="list-items"
                        />
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": "To Do",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "addTask": [Function],
                      "items": Array [],
                      "title": "To Do",
                      "updateTask": [Function],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 68,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 20,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 10,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Done",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 22,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 11,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 1,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <form
                                onSubmit={[Function]}
>
                                <input
                                                                placeholder="Create new task"
                                                                type="text"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "test": false,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 23,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 19,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 2,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [],
                                "className": "list-items",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <ul
                                class="list-items"
/>,
                              "tag": 5,
                              "type": "ul",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": <h3>
                            Done
</h3>,
                          "tag": 5,
                          "type": "h3",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h3>
                              Done
</h3>,
                            <If
                              test={false}
>
                              <form
                                                            onSubmit={[Function]}
                              >
                                                            <input
                                                                                          placeholder="Create new task"
                                                                                          type="text"
                                                            />
                                                            <button
                                                                                          type="submit"
                                                            >
                                                                                          Add Task
                                                            </button>
                              </form>
</If>,
                            <ul
                              className="list-items"
>
                              
</ul>,
                          ],
                          "className": "column-list",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div
                          class="column-list"
>
                          <h3>
                                                    Done
                          </h3>
                          <ul
                                                    class="list-items"
                          />
</div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": "Done",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "addTask": [Function],
                        "items": Array [],
                        "title": "Done",
                        "updateTask": [Function],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <ColumnList
                        addTask={[Function]}
                        items={Array []}
                        title="To Do"
                        updateTask={[Function]}
/>,
                      <ColumnList
                        addTask={[Function]}
                        items={Array []}
                        title="Done"
                        updateTask={[Function]}
/>,
                    ],
                    "className": "app-lists",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="app-lists"
>
                    <div
                                        class="column-list"
                    >
                                        <h3>
                                                            To Do
                                        </h3>
                                        <form>
                                                            <input
                                                                                type="text"
                                                                                placeholder="Create new task"
                                                            />
                                                            <button
                                                                                type="submit"
                                                            >
                                                                                Add Task
                                                            </button>
                                        </form>
                                        <ul
                                                            class="list-items"
                                        />
                    </div>
                    <div
                                        class="column-list"
                    >
                                        <h3>
                                                            Done
                                        </h3>
                                        <ul
                                                            class="list-items"
                                        />
                    </div>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <div
                    className="app-lists"
>
                    <ColumnList
                                        addTask={[Function]}
                                        items={Array []}
                                        title="To Do"
                                        updateTask={[Function]}
                    />
                    <ColumnList
                                        addTask={[Function]}
                                        items={Array []}
                                        title="Done"
                                        updateTask={[Function]}
                    />
</div>,
                  "className": "App-container",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="App-container"
>
                  <div
                                    class="app-lists"
                  >
                                    <div
                                                      class="column-list"
                                    >
                                                      <h3>
                                                                        To Do
                                                      </h3>
                                                      <form>
                                                                        <input
                                                                                          type="text"
                                                                                          placeholder="Create new task"
                                                                        />
                                                                        <button
                                                                                          type="submit"
                                                                        >
                                                                                          Add Task
                                                                        </button>
                                                      </form>
                                                      <ul
                                                                        class="list-items"
                                                      />
                                    </div>
                                    <div
                                                      class="column-list"
                                    >
                                                      <h3>
                                                                        Done
                                                      </h3>
                                                      <ul
                                                                        class="list-items"
                                                      />
                                    </div>
                  </div>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <div
                class="App-header"
>
                <img
                                src="logo.svg"
                                class="App-logo"
                                alt="logo"
                />
                <h2>
                                To Do List
                </h2>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <div
                  className="App-header"
>
                  <img
                                    alt="logo"
                                    className="App-logo"
                                    src="logo.svg"
                  />
                  <h2>
                                    To Do List
                  </h2>
</div>,
                <div
                  className="App-container"
>
                  <div
                                    className="app-lists"
                  >
                                    <ColumnList
                                                      addTask={[Function]}
                                                      items={Array []}
                                                      title="To Do"
                                                      updateTask={[Function]}
                                    />
                                    <ColumnList
                                                      addTask={[Function]}
                                                      items={Array []}
                                                      title="Done"
                                                      updateTask={[Function]}
                                    />
                  </div>
</div>,
              ],
              "className": "App",
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "pendingWorkPriority": 0,
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="App"
>
              <div
                            class="App-header"
              >
                            <img
                                          src="logo.svg"
                                          class="App-logo"
                                          alt="logo"
                            />
                            <h2>
                                          To Do List
                            </h2>
              </div>
              <div
                            class="App-container"
              >
                            <div
                                          class="app-lists"
                            >
                                          <div
                                                        class="column-list"
                                          >
                                                        <h3>
                                                                      To Do
                                                        </h3>
                                                        <form>
                                                                      <input
                                                                                    type="text"
                                                                                    placeholder="Create new task"
                                                                      />
                                                                      <button
                                                                                    type="submit"
                                                                      >
                                                                                    Add Task
                                                                      </button>
                                                        </form>
                                                        <ul
                                                                      class="list-items"
                                                        />
                                          </div>
                                          <div
                                                        class="column-list"
                                          >
                                                        <h3>
                                                                      Done
                                                        </h3>
                                                        <ul
                                                                      class="list-items"
                                                        />
                                          </div>
                            </div>
              </div>
</div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
              "lineNumber": 60,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 61,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 62,
                },
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "logo",
                  "className": "App-logo",
                  "src": "logo.svg",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 63,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "To Do List",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <h2>
                    To Do List
</h2>,
                  "tag": 5,
                  "type": "h2",
                  "updateQueue": null,
                },
                "stateNode": <img
                  src="logo.svg"
                  class="App-logo"
                  alt="logo"
/>,
                "tag": 5,
                "type": "img",
                "updateQueue": null,
              },
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <img
                    alt="logo"
                    className="App-logo"
                    src="logo.svg"
/>,
                  <h2>
                    To Do List
</h2>,
                ],
                "className": "App-header",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 65,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 66,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 68,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 13,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                        "lineNumber": 9,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 14,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 10,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "To Do",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 15,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 11,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 17,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 12,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 18,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 13,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "placeholder": "Create new task",
                                "type": "text",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 19,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 14,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 1,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Add Task",
                                  "type": "submit",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <button
                                  type="submit"
>
                                  Add Task
</button>,
                                "tag": 5,
                                "type": "button",
                                "updateQueue": null,
                              },
                              "stateNode": <input
                                type="text"
                                placeholder="Create new task"
/>,
                              "tag": 5,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <input
                                  placeholder="Create new task"
                                  type="text"
/>,
                                <button
                                  type="submit"
>
                                  Add Task
</button>,
                              ],
                              "onSubmit": [Function],
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <form>
                              <input
                                                            type="text"
                                                            placeholder="Create new task"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "tag": 5,
                            "type": "form",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "firstEffect": null,
                          "index": 1,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <form
                              onSubmit={[Function]}
>
                              <input
                                                            placeholder="Create new task"
                                                            type="text"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "test": true,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 16,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 19,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 2,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [],
                              "className": "list-items",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <ul
                              class="list-items"
/>,
                            "tag": 5,
                            "type": "ul",
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": <h3>
                          To Do
</h3>,
                        "tag": 5,
                        "type": "h3",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <h3>
                            To Do
</h3>,
                          <If
                            test={true}
>
                            <form
                                                        onSubmit={[Function]}
                            >
                                                        <input
                                                                                    placeholder="Create new task"
                                                                                    type="text"
                                                        />
                                                        <button
                                                                                    type="submit"
                                                        >
                                                                                    Add Task
                                                        </button>
                            </form>
</If>,
                          <ul
                            className="list-items"
>
                            
</ul>,
                        ],
                        "className": "column-list",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="column-list"
>
                        <h3>
                                                To Do
                        </h3>
                        <form>
                                                <input
                                                                        type="text"
                                                                        placeholder="Create new task"
                                                />
                                                <button
                                                                        type="submit"
                                                >
                                                                        Add Task
                                                </button>
                        </form>
                        <ul
                                                class="list-items"
                        />
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": "To Do",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "addTask": [Function],
                      "items": Array [],
                      "title": "To Do",
                      "updateTask": [Function],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 68,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 20,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 10,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Done",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 22,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 11,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 1,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <form
                                onSubmit={[Function]}
>
                                <input
                                                                placeholder="Create new task"
                                                                type="text"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "test": false,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 23,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 19,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 2,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [],
                                "className": "list-items",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <ul
                                class="list-items"
/>,
                              "tag": 5,
                              "type": "ul",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": <h3>
                            Done
</h3>,
                          "tag": 5,
                          "type": "h3",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h3>
                              Done
</h3>,
                            <If
                              test={false}
>
                              <form
                                                            onSubmit={[Function]}
                              >
                                                            <input
                                                                                          placeholder="Create new task"
                                                                                          type="text"
                                                            />
                                                            <button
                                                                                          type="submit"
                                                            >
                                                                                          Add Task
                                                            </button>
                              </form>
</If>,
                            <ul
                              className="list-items"
>
                              
</ul>,
                          ],
                          "className": "column-list",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div
                          class="column-list"
>
                          <h3>
                                                    Done
                          </h3>
                          <ul
                                                    class="list-items"
                          />
</div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": "Done",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "addTask": [Function],
                        "items": Array [],
                        "title": "Done",
                        "updateTask": [Function],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <ColumnList
                        addTask={[Function]}
                        items={Array []}
                        title="To Do"
                        updateTask={[Function]}
/>,
                      <ColumnList
                        addTask={[Function]}
                        items={Array []}
                        title="Done"
                        updateTask={[Function]}
/>,
                    ],
                    "className": "app-lists",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="app-lists"
>
                    <div
                                        class="column-list"
                    >
                                        <h3>
                                                            To Do
                                        </h3>
                                        <form>
                                                            <input
                                                                                type="text"
                                                                                placeholder="Create new task"
                                                            />
                                                            <button
                                                                                type="submit"
                                                            >
                                                                                Add Task
                                                            </button>
                                        </form>
                                        <ul
                                                            class="list-items"
                                        />
                    </div>
                    <div
                                        class="column-list"
                    >
                                        <h3>
                                                            Done
                                        </h3>
                                        <ul
                                                            class="list-items"
                                        />
                    </div>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <div
                    className="app-lists"
>
                    <ColumnList
                                        addTask={[Function]}
                                        items={Array []}
                                        title="To Do"
                                        updateTask={[Function]}
                    />
                    <ColumnList
                                        addTask={[Function]}
                                        items={Array []}
                                        title="Done"
                                        updateTask={[Function]}
                    />
</div>,
                  "className": "App-container",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="App-container"
>
                  <div
                                    class="app-lists"
                  >
                                    <div
                                                      class="column-list"
                                    >
                                                      <h3>
                                                                        To Do
                                                      </h3>
                                                      <form>
                                                                        <input
                                                                                          type="text"
                                                                                          placeholder="Create new task"
                                                                        />
                                                                        <button
                                                                                          type="submit"
                                                                        >
                                                                                          Add Task
                                                                        </button>
                                                      </form>
                                                      <ul
                                                                        class="list-items"
                                                      />
                                    </div>
                                    <div
                                                      class="column-list"
                                    >
                                                      <h3>
                                                                        Done
                                                      </h3>
                                                      <ul
                                                                        class="list-items"
                                                      />
                                    </div>
                  </div>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <div
                class="App-header"
>
                <img
                                src="logo.svg"
                                class="App-logo"
                                alt="logo"
                />
                <h2>
                                To Do List
                </h2>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <div
                  className="App-header"
>
                  <img
                                    alt="logo"
                                    className="App-logo"
                                    src="logo.svg"
                  />
                  <h2>
                                    To Do List
                  </h2>
</div>,
                <div
                  className="App-container"
>
                  <div
                                    className="app-lists"
                  >
                                    <ColumnList
                                                      addTask={[Function]}
                                                      items={Array []}
                                                      title="To Do"
                                                      updateTask={[Function]}
                                    />
                                    <ColumnList
                                                      addTask={[Function]}
                                                      items={Array []}
                                                      title="Done"
                                                      updateTask={[Function]}
                                    />
                  </div>
</div>,
              ],
              "className": "App",
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "pendingWorkPriority": 0,
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="App"
>
              <div
                            class="App-header"
              >
                            <img
                                          src="logo.svg"
                                          class="App-logo"
                                          alt="logo"
                            />
                            <h2>
                                          To Do List
                            </h2>
              </div>
              <div
                            class="App-container"
              >
                            <div
                                          class="app-lists"
                            >
                                          <div
                                                        class="column-list"
                                          >
                                                        <h3>
                                                                      To Do
                                                        </h3>
                                                        <form>
                                                                      <input
                                                                                    type="text"
                                                                                    placeholder="Create new task"
                                                                      />
                                                                      <button
                                                                                    type="submit"
                                                                      >
                                                                                    Add Task
                                                                      </button>
                                                        </form>
                                                        <ul
                                                                      class="list-items"
                                                        />
                                          </div>
                                          <div
                                                        class="column-list"
                                          >
                                                        <h3>
                                                                      Done
                                                        </h3>
                                                        <ul
                                                                      class="list-items"
                                                        />
                                          </div>
                            </div>
              </div>
</div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "memoizedProps": Object {},
          "memoizedState": Object {
            "items": Array [],
          },
          "nextEffect": null,
          "pendingProps": null,
          "pendingWorkPriority": 0,
          "ref": null,
          "return": FiberNode {
            "_debugID": 3,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "firstEffect": FiberNode {
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 60,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 61,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 62,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "logo",
                    "className": "App-logo",
                    "src": "logo.svg",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 63,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "To Do List",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <h2>
                      To Do List
</h2>,
                    "tag": 5,
                    "type": "h2",
                    "updateQueue": null,
                  },
                  "stateNode": <img
                    src="logo.svg"
                    class="App-logo"
                    alt="logo"
/>,
                  "tag": 5,
                  "type": "img",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <img
                      alt="logo"
                      className="App-logo"
                      src="logo.svg"
/>,
                    <h2>
                      To Do List
</h2>,
                  ],
                  "className": "App-header",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 65,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 66,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 68,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 13,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 14,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 10,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "To Do",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 15,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 11,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 17,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 12,
                              },
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 18,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 13,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "placeholder": "Create new task",
                                  "type": "text",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": FiberNode {
                                  "_debugID": 19,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                    "lineNumber": 14,
                                  },
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "firstEffect": null,
                                  "index": 1,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "Add Task",
                                    "type": "submit",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "pendingWorkPriority": 0,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": <button
                                    type="submit"
>
                                    Add Task
</button>,
                                  "tag": 5,
                                  "type": "button",
                                  "updateQueue": null,
                                },
                                "stateNode": <input
                                  type="text"
                                  placeholder="Create new task"
/>,
                                "tag": 5,
                                "type": "input",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <input
                                    placeholder="Create new task"
                                    type="text"
/>,
                                  <button
                                    type="submit"
>
                                    Add Task
</button>,
                                ],
                                "onSubmit": [Function],
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <form>
                                <input
                                                                type="text"
                                                                placeholder="Create new task"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "tag": 5,
                              "type": "form",
                              "updateQueue": null,
                            },
                            "effectTag": 1,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <form
                                onSubmit={[Function]}
>
                                <input
                                                                placeholder="Create new task"
                                                                type="text"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "test": true,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 16,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 19,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 2,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [],
                                "className": "list-items",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <ul
                                class="list-items"
/>,
                              "tag": 5,
                              "type": "ul",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": <h3>
                            To Do
</h3>,
                          "tag": 5,
                          "type": "h3",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h3>
                              To Do
</h3>,
                            <If
                              test={true}
>
                              <form
                                                            onSubmit={[Function]}
                              >
                                                            <input
                                                                                          placeholder="Create new task"
                                                                                          type="text"
                                                            />
                                                            <button
                                                                                          type="submit"
                                                            >
                                                                                          Add Task
                                                            </button>
                              </form>
</If>,
                            <ul
                              className="list-items"
>
                              
</ul>,
                          ],
                          "className": "column-list",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div
                          class="column-list"
>
                          <h3>
                                                    To Do
                          </h3>
                          <form>
                                                    <input
                                                                              type="text"
                                                                              placeholder="Create new task"
                                                    />
                                                    <button
                                                                              type="submit"
                                                    >
                                                                              Add Task
                                                    </button>
                          </form>
                          <ul
                                                    class="list-items"
                          />
</div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": "To Do",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "addTask": [Function],
                        "items": Array [],
                        "title": "To Do",
                        "updateTask": [Function],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                          "lineNumber": 68,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 20,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 21,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 10,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Done",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 22,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 11,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 1,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <form
                                  onSubmit={[Function]}
>
                                  <input
                                                                    placeholder="Create new task"
                                                                    type="text"
                                  />
                                  <button
                                                                    type="submit"
                                  >
                                                                    Add Task
                                  </button>
</form>,
                                "test": false,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 23,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 19,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 2,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [],
                                  "className": "list-items",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <ul
                                  class="list-items"
/>,
                                "tag": 5,
                                "type": "ul",
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 1,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "stateNode": <h3>
                              Done
</h3>,
                            "tag": 5,
                            "type": "h3",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <h3>
                                Done
</h3>,
                              <If
                                test={false}
>
                                <form
                                                                onSubmit={[Function]}
                                >
                                                                <input
                                                                                                placeholder="Create new task"
                                                                                                type="text"
                                                                />
                                                                <button
                                                                                                type="submit"
                                                                >
                                                                                                Add Task
                                                                </button>
                                </form>
</If>,
                              <ul
                                className="list-items"
>
                                
</ul>,
                            ],
                            "className": "column-list",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div
                            class="column-list"
>
                            <h3>
                                                        Done
                            </h3>
                            <ul
                                                        class="list-items"
                            />
</div>,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": "Done",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "addTask": [Function],
                          "items": Array [],
                          "title": "Done",
                          "updateTask": [Function],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <ColumnList
                          addTask={[Function]}
                          items={Array []}
                          title="To Do"
                          updateTask={[Function]}
/>,
                        <ColumnList
                          addTask={[Function]}
                          items={Array []}
                          title="Done"
                          updateTask={[Function]}
/>,
                      ],
                      "className": "app-lists",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="app-lists"
>
                      <div
                                            class="column-list"
                      >
                                            <h3>
                                                                  To Do
                                            </h3>
                                            <form>
                                                                  <input
                                                                                        type="text"
                                                                                        placeholder="Create new task"
                                                                  />
                                                                  <button
                                                                                        type="submit"
                                                                  >
                                                                                        Add Task
                                                                  </button>
                                            </form>
                                            <ul
                                                                  class="list-items"
                                            />
                      </div>
                      <div
                                            class="column-list"
                      >
                                            <h3>
                                                                  Done
                                            </h3>
                                            <ul
                                                                  class="list-items"
                                            />
                      </div>
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <div
                      className="app-lists"
>
                      <ColumnList
                                            addTask={[Function]}
                                            items={Array []}
                                            title="To Do"
                                            updateTask={[Function]}
                      />
                      <ColumnList
                                            addTask={[Function]}
                                            items={Array []}
                                            title="Done"
                                            updateTask={[Function]}
                      />
</div>,
                    "className": "App-container",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="App-container"
>
                    <div
                                        class="app-lists"
                    >
                                        <div
                                                            class="column-list"
                                        >
                                                            <h3>
                                                                                To Do
                                                            </h3>
                                                            <form>
                                                                                <input
                                                                                                    type="text"
                                                                                                    placeholder="Create new task"
                                                                                />
                                                                                <button
                                                                                                    type="submit"
                                                                                >
                                                                                                    Add Task
                                                                                </button>
                                                            </form>
                                                            <ul
                                                                                class="list-items"
                                                            />
                                        </div>
                                        <div
                                                            class="column-list"
                                        >
                                                            <h3>
                                                                                Done
                                                            </h3>
                                                            <ul
                                                                                class="list-items"
                                                            />
                                        </div>
                    </div>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="App-header"
>
                  <img
                                    src="logo.svg"
                                    class="App-logo"
                                    alt="logo"
                  />
                  <h2>
                                    To Do List
                  </h2>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="App-header"
>
                    <img
                                        alt="logo"
                                        className="App-logo"
                                        src="logo.svg"
                    />
                    <h2>
                                        To Do List
                    </h2>
</div>,
                  <div
                    className="App-container"
>
                    <div
                                        className="app-lists"
                    >
                                        <ColumnList
                                                            addTask={[Function]}
                                                            items={Array []}
                                                            title="To Do"
                                                            updateTask={[Function]}
                                        />
                                        <ColumnList
                                                            addTask={[Function]}
                                                            items={Array []}
                                                            title="Done"
                                                            updateTask={[Function]}
                                        />
                    </div>
</div>,
                ],
                "className": "App",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="App"
>
                <div
                                class="App-header"
                >
                                <img
                                                src="logo.svg"
                                                class="App-logo"
                                                alt="logo"
                                />
                                <h2>
                                                To Do List
                                </h2>
                </div>
                <div
                                class="App-container"
                >
                                <div
                                                class="app-lists"
                                >
                                                <div
                                                                class="column-list"
                                                >
                                                                <h3>
                                                                                To Do
                                                                </h3>
                                                                <form>
                                                                                <input
                                                                                                type="text"
                                                                                                placeholder="Create new task"
                                                                                />
                                                                                <button
                                                                                                type="submit"
                                                                                >
                                                                                                Add Task
                                                                                </button>
                                                                </form>
                                                                <ul
                                                                                class="list-items"
                                                                />
                                                </div>
                                                <div
                                                                class="column-list"
                                                >
                                                                <h3>
                                                                                Done
                                                                </h3>
                                                                <ul
                                                                                class="list-items"
                                                                />
                                                </div>
                                </div>
                </div>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                "lineNumber": 60,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 61,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 62,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "logo",
                    "className": "App-logo",
                    "src": "logo.svg",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 63,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "To Do List",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <h2>
                      To Do List
</h2>,
                    "tag": 5,
                    "type": "h2",
                    "updateQueue": null,
                  },
                  "stateNode": <img
                    src="logo.svg"
                    class="App-logo"
                    alt="logo"
/>,
                  "tag": 5,
                  "type": "img",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <img
                      alt="logo"
                      className="App-logo"
                      src="logo.svg"
/>,
                    <h2>
                      To Do List
</h2>,
                  ],
                  "className": "App-header",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 65,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 66,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 68,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 13,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 14,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 10,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "To Do",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 15,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 11,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 17,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 12,
                              },
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 18,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 13,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "placeholder": "Create new task",
                                  "type": "text",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": FiberNode {
                                  "_debugID": 19,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                    "lineNumber": 14,
                                  },
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "firstEffect": null,
                                  "index": 1,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "Add Task",
                                    "type": "submit",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "pendingWorkPriority": 0,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": <button
                                    type="submit"
>
                                    Add Task
</button>,
                                  "tag": 5,
                                  "type": "button",
                                  "updateQueue": null,
                                },
                                "stateNode": <input
                                  type="text"
                                  placeholder="Create new task"
/>,
                                "tag": 5,
                                "type": "input",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <input
                                    placeholder="Create new task"
                                    type="text"
/>,
                                  <button
                                    type="submit"
>
                                    Add Task
</button>,
                                ],
                                "onSubmit": [Function],
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <form>
                                <input
                                                                type="text"
                                                                placeholder="Create new task"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "tag": 5,
                              "type": "form",
                              "updateQueue": null,
                            },
                            "effectTag": 1,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <form
                                onSubmit={[Function]}
>
                                <input
                                                                placeholder="Create new task"
                                                                type="text"
                                />
                                <button
                                                                type="submit"
                                >
                                                                Add Task
                                </button>
</form>,
                              "test": true,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 16,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 19,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 2,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [],
                                "className": "list-items",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <ul
                                class="list-items"
/>,
                              "tag": 5,
                              "type": "ul",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": <h3>
                            To Do
</h3>,
                          "tag": 5,
                          "type": "h3",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h3>
                              To Do
</h3>,
                            <If
                              test={true}
>
                              <form
                                                            onSubmit={[Function]}
                              >
                                                            <input
                                                                                          placeholder="Create new task"
                                                                                          type="text"
                                                            />
                                                            <button
                                                                                          type="submit"
                                                            >
                                                                                          Add Task
                                                            </button>
                              </form>
</If>,
                            <ul
                              className="list-items"
>
                              
</ul>,
                          ],
                          "className": "column-list",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div
                          class="column-list"
>
                          <h3>
                                                    To Do
                          </h3>
                          <form>
                                                    <input
                                                                              type="text"
                                                                              placeholder="Create new task"
                                                    />
                                                    <button
                                                                              type="submit"
                                                    >
                                                                              Add Task
                                                    </button>
                          </form>
                          <ul
                                                    class="list-items"
                          />
</div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": "To Do",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "addTask": [Function],
                        "items": Array [],
                        "title": "To Do",
                        "updateTask": [Function],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                          "lineNumber": 68,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 20,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 21,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 10,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Done",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 22,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 11,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 1,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <form
                                  onSubmit={[Function]}
>
                                  <input
                                                                    placeholder="Create new task"
                                                                    type="text"
                                  />
                                  <button
                                                                    type="submit"
                                  >
                                                                    Add Task
                                  </button>
</form>,
                                "test": false,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 23,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 19,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 2,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [],
                                  "className": "list-items",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <ul
                                  class="list-items"
/>,
                                "tag": 5,
                                "type": "ul",
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 1,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "stateNode": <h3>
                              Done
</h3>,
                            "tag": 5,
                            "type": "h3",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <h3>
                                Done
</h3>,
                              <If
                                test={false}
>
                                <form
                                                                onSubmit={[Function]}
                                >
                                                                <input
                                                                                                placeholder="Create new task"
                                                                                                type="text"
                                                                />
                                                                <button
                                                                                                type="submit"
                                                                >
                                                                                                Add Task
                                                                </button>
                                </form>
</If>,
                              <ul
                                className="list-items"
>
                                
</ul>,
                            ],
                            "className": "column-list",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div
                            class="column-list"
>
                            <h3>
                                                        Done
                            </h3>
                            <ul
                                                        class="list-items"
                            />
</div>,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": "Done",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "addTask": [Function],
                          "items": Array [],
                          "title": "Done",
                          "updateTask": [Function],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <ColumnList
                          addTask={[Function]}
                          items={Array []}
                          title="To Do"
                          updateTask={[Function]}
/>,
                        <ColumnList
                          addTask={[Function]}
                          items={Array []}
                          title="Done"
                          updateTask={[Function]}
/>,
                      ],
                      "className": "app-lists",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="app-lists"
>
                      <div
                                            class="column-list"
                      >
                                            <h3>
                                                                  To Do
                                            </h3>
                                            <form>
                                                                  <input
                                                                                        type="text"
                                                                                        placeholder="Create new task"
                                                                  />
                                                                  <button
                                                                                        type="submit"
                                                                  >
                                                                                        Add Task
                                                                  </button>
                                            </form>
                                            <ul
                                                                  class="list-items"
                                            />
                      </div>
                      <div
                                            class="column-list"
                      >
                                            <h3>
                                                                  Done
                                            </h3>
                                            <ul
                                                                  class="list-items"
                                            />
                      </div>
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <div
                      className="app-lists"
>
                      <ColumnList
                                            addTask={[Function]}
                                            items={Array []}
                                            title="To Do"
                                            updateTask={[Function]}
                      />
                      <ColumnList
                                            addTask={[Function]}
                                            items={Array []}
                                            title="Done"
                                            updateTask={[Function]}
                      />
</div>,
                    "className": "App-container",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="App-container"
>
                    <div
                                        class="app-lists"
                    >
                                        <div
                                                            class="column-list"
                                        >
                                                            <h3>
                                                                                To Do
                                                            </h3>
                                                            <form>
                                                                                <input
                                                                                                    type="text"
                                                                                                    placeholder="Create new task"
                                                                                />
                                                                                <button
                                                                                                    type="submit"
                                                                                >
                                                                                                    Add Task
                                                                                </button>
                                                            </form>
                                                            <ul
                                                                                class="list-items"
                                                            />
                                        </div>
                                        <div
                                                            class="column-list"
                                        >
                                                            <h3>
                                                                                Done
                                                            </h3>
                                                            <ul
                                                                                class="list-items"
                                                            />
                                        </div>
                    </div>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="App-header"
>
                  <img
                                    src="logo.svg"
                                    class="App-logo"
                                    alt="logo"
                  />
                  <h2>
                                    To Do List
                  </h2>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="App-header"
>
                    <img
                                        alt="logo"
                                        className="App-logo"
                                        src="logo.svg"
                    />
                    <h2>
                                        To Do List
                    </h2>
</div>,
                  <div
                    className="App-container"
>
                    <div
                                        className="app-lists"
                    >
                                        <ColumnList
                                                            addTask={[Function]}
                                                            items={Array []}
                                                            title="To Do"
                                                            updateTask={[Function]}
                                        />
                                        <ColumnList
                                                            addTask={[Function]}
                                                            items={Array []}
                                                            title="Done"
                                                            updateTask={[Function]}
                                        />
                    </div>
</div>,
                ],
                "className": "App",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="App"
>
                <div
                                class="App-header"
                >
                                <img
                                                src="logo.svg"
                                                class="App-logo"
                                                alt="logo"
                                />
                                <h2>
                                                To Do List
                                </h2>
                </div>
                <div
                                class="App-container"
                >
                                <div
                                                class="app-lists"
                                >
                                                <div
                                                                class="column-list"
                                                >
                                                                <h3>
                                                                                To Do
                                                                </h3>
                                                                <form>
                                                                                <input
                                                                                                type="text"
                                                                                                placeholder="Create new task"
                                                                                />
                                                                                <button
                                                                                                type="submit"
                                                                                >
                                                                                                Add Task
                                                                                </button>
                                                                </form>
                                                                <ul
                                                                                class="list-items"
                                                                />
                                                </div>
                                                <div
                                                                class="column-list"
                                                >
                                                                <h3>
                                                                                Done
                                                                </h3>
                                                                <ul
                                                                                class="list-items"
                                                                />
                                                </div>
                                </div>
                </div>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "nextEffect": null,
            "pendingProps": null,
            "pendingWorkPriority": 0,
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 1,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="App"
                    >
                                        <div
                                                            class="App-header"
                                        >
                                                            <img
                                                                                src="logo.svg"
                                                                                class="App-logo"
                                                                                alt="logo"
                                                            />
                                                            <h2>
                                                                                To Do List
                                                            </h2>
                                        </div>
                                        <div
                                                            class="App-container"
                                        >
                                                            <div
                                                                                class="app-lists"
                                                            >
                                                                                <div
                                                                                                    class="column-list"
                                                                                >
                                                                                                    <h3>
                                                                                                                        To Do
                                                                                                    </h3>
                                                                                                    <form>
                                                                                                                        <input
                                                                                                                                            type="text"
                                                                                                                                            placeholder="Create new task"
                                                                                                                        />
                                                                                                                        <button
                                                                                                                                            type="submit"
                                                                                                                        >
                                                                                                                                            Add Task
                                                                                                                        </button>
                                                                                                    </form>
                                                                                                    <ul
                                                                                                                        class="list-items"
                                                                                                    />
                                                                                </div>
                                                                                <div
                                                                                                    class="column-list"
                                                                                >
                                                                                                    <h3>
                                                                                                                        Done
                                                                                                    </h3>
                                                                                                    <ul
                                                                                                                        class="list-items"
                                                                                                    />
                                                                                </div>
                                                            </div>
                                        </div>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "isScheduled": false,
                  "nextScheduledRoot": null,
                  "pendingContext": null,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "callbackList": null,
                  "first": Object {
                    "callback": null,
                    "isForced": false,
                    "isReplace": false,
                    "isTopLevelUnmount": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "priorityLevel": 1,
                  },
                  "hasForceUpdate": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "isForced": false,
                    "isReplace": false,
                    "isTopLevelUnmount": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "priorityLevel": 1,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 0,
              "firstEffect": FiberNode {
                "_debugID": 5,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 60,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 6,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 61,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 62,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "logo",
                      "className": "App-logo",
                      "src": "logo.svg",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 63,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "To Do List",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <h2>
                        To Do List
</h2>,
                      "tag": 5,
                      "type": "h2",
                      "updateQueue": null,
                    },
                    "stateNode": <img
                      src="logo.svg"
                      class="App-logo"
                      alt="logo"
/>,
                    "tag": 5,
                    "type": "img",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <img
                        alt="logo"
                        className="App-logo"
                        src="logo.svg"
/>,
                      <h2>
                        To Do List
</h2>,
                    ],
                    "className": "App-header",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 65,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 66,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 11,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                          "lineNumber": 68,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 13,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 14,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 10,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "To Do",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 15,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 11,
                              },
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 17,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 12,
                                },
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 18,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                    "lineNumber": 13,
                                  },
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "placeholder": "Create new task",
                                    "type": "text",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "pendingWorkPriority": 0,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": FiberNode {
                                    "_debugID": 19,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                      "lineNumber": 14,
                                    },
                                    "alternate": null,
                                    "child": null,
                                    "effectTag": 0,
                                    "firstEffect": null,
                                    "index": 1,
                                    "internalContextTag": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": "Add Task",
                                      "type": "submit",
                                    },
                                    "memoizedState": null,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "pendingWorkPriority": 0,
                                    "ref": null,
                                    "return": [Circular],
                                    "sibling": null,
                                    "stateNode": <button
                                      type="submit"
>
                                      Add Task
</button>,
                                    "tag": 5,
                                    "type": "button",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <input
                                    type="text"
                                    placeholder="Create new task"
/>,
                                  "tag": 5,
                                  "type": "input",
                                  "updateQueue": null,
                                },
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <input
                                      placeholder="Create new task"
                                      type="text"
/>,
                                    <button
                                      type="submit"
>
                                      Add Task
</button>,
                                  ],
                                  "onSubmit": [Function],
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <form>
                                  <input
                                                                    type="text"
                                                                    placeholder="Create new task"
                                  />
                                  <button
                                                                    type="submit"
                                  >
                                                                    Add Task
                                  </button>
</form>,
                                "tag": 5,
                                "type": "form",
                                "updateQueue": null,
                              },
                              "effectTag": 1,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <form
                                  onSubmit={[Function]}
>
                                  <input
                                                                    placeholder="Create new task"
                                                                    type="text"
                                  />
                                  <button
                                                                    type="submit"
                                  >
                                                                    Add Task
                                  </button>
</form>,
                                "test": true,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 16,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 19,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 2,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [],
                                  "className": "list-items",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <ul
                                  class="list-items"
/>,
                                "tag": 5,
                                "type": "ul",
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 1,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "stateNode": <h3>
                              To Do
</h3>,
                            "tag": 5,
                            "type": "h3",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <h3>
                                To Do
</h3>,
                              <If
                                test={true}
>
                                <form
                                                                onSubmit={[Function]}
                                >
                                                                <input
                                                                                                placeholder="Create new task"
                                                                                                type="text"
                                                                />
                                                                <button
                                                                                                type="submit"
                                                                >
                                                                                                Add Task
                                                                </button>
                                </form>
</If>,
                              <ul
                                className="list-items"
>
                                
</ul>,
                            ],
                            "className": "column-list",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div
                            class="column-list"
>
                            <h3>
                                                        To Do
                            </h3>
                            <form>
                                                        <input
                                                                                    type="text"
                                                                                    placeholder="Create new task"
                                                        />
                                                        <button
                                                                                    type="submit"
                                                        >
                                                                                    Add Task
                                                        </button>
                            </form>
                            <ul
                                                        class="list-items"
                            />
</div>,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": "To Do",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "addTask": [Function],
                          "items": Array [],
                          "title": "To Do",
                          "updateTask": [Function],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 12,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                            "lineNumber": 68,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 20,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 9,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 21,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 10,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Done",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 22,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 11,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 1,
                                "firstEffect": null,
                                "index": 1,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <form
                                    onSubmit={[Function]}
>
                                    <input
                                                                        placeholder="Create new task"
                                                                        type="text"
                                    />
                                    <button
                                                                        type="submit"
                                    >
                                                                        Add Task
                                    </button>
</form>,
                                  "test": false,
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": FiberNode {
                                  "_debugID": 23,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                    "lineNumber": 19,
                                  },
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "firstEffect": null,
                                  "index": 2,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [],
                                    "className": "list-items",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "pendingWorkPriority": 0,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": <ul
                                    class="list-items"
/>,
                                  "tag": 5,
                                  "type": "ul",
                                  "updateQueue": null,
                                },
                                "stateNode": null,
                                "tag": 1,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "stateNode": <h3>
                                Done
</h3>,
                              "tag": 5,
                              "type": "h3",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <h3>
                                  Done
</h3>,
                                <If
                                  test={false}
>
                                  <form
                                                                    onSubmit={[Function]}
                                  >
                                                                    <input
                                                                                                      placeholder="Create new task"
                                                                                                      type="text"
                                                                    />
                                                                    <button
                                                                                                      type="submit"
                                                                    >
                                                                                                      Add Task
                                                                    </button>
                                  </form>
</If>,
                                <ul
                                  className="list-items"
>
                                  
</ul>,
                              ],
                              "className": "column-list",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <div
                              class="column-list"
>
                              <h3>
                                                            Done
                              </h3>
                              <ul
                                                            class="list-items"
                              />
</div>,
                            "tag": 5,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "firstEffect": null,
                          "index": 1,
                          "internalContextTag": 0,
                          "key": "Done",
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "addTask": [Function],
                            "items": Array [],
                            "title": "Done",
                            "updateTask": [Function],
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <ColumnList
                            addTask={[Function]}
                            items={Array []}
                            title="To Do"
                            updateTask={[Function]}
/>,
                          <ColumnList
                            addTask={[Function]}
                            items={Array []}
                            title="Done"
                            updateTask={[Function]}
/>,
                        ],
                        "className": "app-lists",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="app-lists"
>
                        <div
                                                class="column-list"
                        >
                                                <h3>
                                                                        To Do
                                                </h3>
                                                <form>
                                                                        <input
                                                                                                type="text"
                                                                                                placeholder="Create new task"
                                                                        />
                                                                        <button
                                                                                                type="submit"
                                                                        >
                                                                                                Add Task
                                                                        </button>
                                                </form>
                                                <ul
                                                                        class="list-items"
                                                />
                        </div>
                        <div
                                                class="column-list"
                        >
                                                <h3>
                                                                        Done
                                                </h3>
                                                <ul
                                                                        class="list-items"
                                                />
                        </div>
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <div
                        className="app-lists"
>
                        <ColumnList
                                                addTask={[Function]}
                                                items={Array []}
                                                title="To Do"
                                                updateTask={[Function]}
                        />
                        <ColumnList
                                                addTask={[Function]}
                                                items={Array []}
                                                title="Done"
                                                updateTask={[Function]}
                        />
</div>,
                      "className": "App-container",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="App-container"
>
                      <div
                                            class="app-lists"
                      >
                                            <div
                                                                  class="column-list"
                                            >
                                                                  <h3>
                                                                                        To Do
                                                                  </h3>
                                                                  <form>
                                                                                        <input
                                                                                                              type="text"
                                                                                                              placeholder="Create new task"
                                                                                        />
                                                                                        <button
                                                                                                              type="submit"
                                                                                        >
                                                                                                              Add Task
                                                                                        </button>
                                                                  </form>
                                                                  <ul
                                                                                        class="list-items"
                                                                  />
                                            </div>
                                            <div
                                                                  class="column-list"
                                            >
                                                                  <h3>
                                                                                        Done
                                                                  </h3>
                                                                  <ul
                                                                                        class="list-items"
                                                                  />
                                            </div>
                      </div>
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="App-header"
>
                    <img
                                        src="logo.svg"
                                        class="App-logo"
                                        alt="logo"
                    />
                    <h2>
                                        To Do List
                    </h2>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="App-header"
>
                      <img
                                            alt="logo"
                                            className="App-logo"
                                            src="logo.svg"
                      />
                      <h2>
                                            To Do List
                      </h2>
</div>,
                    <div
                      className="App-container"
>
                      <div
                                            className="app-lists"
                      >
                                            <ColumnList
                                                                  addTask={[Function]}
                                                                  items={Array []}
                                                                  title="To Do"
                                                                  updateTask={[Function]}
                                            />
                                            <ColumnList
                                                                  addTask={[Function]}
                                                                  items={Array []}
                                                                  title="Done"
                                                                  updateTask={[Function]}
                                            />
                      </div>
</div>,
                  ],
                  "className": "App",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="App"
>
                  <div
                                    class="App-header"
                  >
                                    <img
                                                      src="logo.svg"
                                                      class="App-logo"
                                                      alt="logo"
                                    />
                                    <h2>
                                                      To Do List
                                    </h2>
                  </div>
                  <div
                                    class="App-container"
                  >
                                    <div
                                                      class="app-lists"
                                    >
                                                      <div
                                                                        class="column-list"
                                                      >
                                                                        <h3>
                                                                                          To Do
                                                                        </h3>
                                                                        <form>
                                                                                          <input
                                                                                                            type="text"
                                                                                                            placeholder="Create new task"
                                                                                          />
                                                                                          <button
                                                                                                            type="submit"
                                                                                          >
                                                                                                            Add Task
                                                                                          </button>
                                                                        </form>
                                                                        <ul
                                                                                          class="list-items"
                                                                        />
                                                      </div>
                                                      <div
                                                                        class="column-list"
                                                      >
                                                                        <h3>
                                                                                          Done
                                                                        </h3>
                                                                        <ul
                                                                                          class="list-items"
                                                                        />
                                                      </div>
                                    </div>
                  </div>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": FiberNode {
                "_debugID": 5,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                  "lineNumber": 60,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 6,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                    "lineNumber": 61,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 62,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "logo",
                      "className": "App-logo",
                      "src": "logo.svg",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 63,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "To Do List",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <h2>
                        To Do List
</h2>,
                      "tag": 5,
                      "type": "h2",
                      "updateQueue": null,
                    },
                    "stateNode": <img
                      src="logo.svg"
                      class="App-logo"
                      alt="logo"
/>,
                    "tag": 5,
                    "type": "img",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <img
                        alt="logo"
                        className="App-logo"
                        src="logo.svg"
/>,
                      <h2>
                        To Do List
</h2>,
                    ],
                    "className": "App-header",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                      "lineNumber": 65,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                        "lineNumber": 66,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 11,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                          "lineNumber": 68,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 13,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 14,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 10,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "To Do",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 15,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 11,
                              },
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 17,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 12,
                                },
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 18,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                    "lineNumber": 13,
                                  },
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "placeholder": "Create new task",
                                    "type": "text",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "pendingWorkPriority": 0,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": FiberNode {
                                    "_debugID": 19,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                      "lineNumber": 14,
                                    },
                                    "alternate": null,
                                    "child": null,
                                    "effectTag": 0,
                                    "firstEffect": null,
                                    "index": 1,
                                    "internalContextTag": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": "Add Task",
                                      "type": "submit",
                                    },
                                    "memoizedState": null,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "pendingWorkPriority": 0,
                                    "ref": null,
                                    "return": [Circular],
                                    "sibling": null,
                                    "stateNode": <button
                                      type="submit"
>
                                      Add Task
</button>,
                                    "tag": 5,
                                    "type": "button",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <input
                                    type="text"
                                    placeholder="Create new task"
/>,
                                  "tag": 5,
                                  "type": "input",
                                  "updateQueue": null,
                                },
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <input
                                      placeholder="Create new task"
                                      type="text"
/>,
                                    <button
                                      type="submit"
>
                                      Add Task
</button>,
                                  ],
                                  "onSubmit": [Function],
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <form>
                                  <input
                                                                    type="text"
                                                                    placeholder="Create new task"
                                  />
                                  <button
                                                                    type="submit"
                                  >
                                                                    Add Task
                                  </button>
</form>,
                                "tag": 5,
                                "type": "form",
                                "updateQueue": null,
                              },
                              "effectTag": 1,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <form
                                  onSubmit={[Function]}
>
                                  <input
                                                                    placeholder="Create new task"
                                                                    type="text"
                                  />
                                  <button
                                                                    type="submit"
                                  >
                                                                    Add Task
                                  </button>
</form>,
                                "test": true,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 16,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 19,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 2,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [],
                                  "className": "list-items",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <ul
                                  class="list-items"
/>,
                                "tag": 5,
                                "type": "ul",
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 1,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "stateNode": <h3>
                              To Do
</h3>,
                            "tag": 5,
                            "type": "h3",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <h3>
                                To Do
</h3>,
                              <If
                                test={true}
>
                                <form
                                                                onSubmit={[Function]}
                                >
                                                                <input
                                                                                                placeholder="Create new task"
                                                                                                type="text"
                                                                />
                                                                <button
                                                                                                type="submit"
                                                                >
                                                                                                Add Task
                                                                </button>
                                </form>
</If>,
                              <ul
                                className="list-items"
>
                                
</ul>,
                            ],
                            "className": "column-list",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div
                            class="column-list"
>
                            <h3>
                                                        To Do
                            </h3>
                            <form>
                                                        <input
                                                                                    type="text"
                                                                                    placeholder="Create new task"
                                                        />
                                                        <button
                                                                                    type="submit"
                                                        >
                                                                                    Add Task
                                                        </button>
                            </form>
                            <ul
                                                        class="list-items"
                            />
</div>,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": "To Do",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "addTask": [Function],
                          "items": Array [],
                          "title": "To Do",
                          "updateTask": [Function],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 12,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/App.js",
                            "lineNumber": 68,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 20,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                              "lineNumber": 9,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 21,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                "lineNumber": 10,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Done",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 22,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                  "lineNumber": 11,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 1,
                                "firstEffect": null,
                                "index": 1,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <form
                                    onSubmit={[Function]}
>
                                    <input
                                                                        placeholder="Create new task"
                                                                        type="text"
                                    />
                                    <button
                                                                        type="submit"
                                    >
                                                                        Add Task
                                    </button>
</form>,
                                  "test": false,
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": FiberNode {
                                  "_debugID": 23,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/mariacs/Documents/live-codings-react-nanodegree/react-fundamentals/2-iniciando-com-testes-em-react-solution/solution/src/ColumnList.js",
                                    "lineNumber": 19,
                                  },
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "firstEffect": null,
                                  "index": 2,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [],
                                    "className": "list-items",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "pendingWorkPriority": 0,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": <ul
                                    class="list-items"
/>,
                                  "tag": 5,
                                  "type": "ul",
                                  "updateQueue": null,
                                },
                                "stateNode": null,
                                "tag": 1,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "stateNode": <h3>
                                Done
</h3>,
                              "tag": 5,
                              "type": "h3",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <h3>
                                  Done
</h3>,
                                <If
                                  test={false}
>
                                  <form
                                                                    onSubmit={[Function]}
                                  >
                                                                    <input
                                                                                                      placeholder="Create new task"
                                                                                                      type="text"
                                                                    />
                                                                    <button
                                                                                                      type="submit"
                                                                    >
                                                                                                      Add Task
                                                                    </button>
                                  </form>
</If>,
                                <ul
                                  className="list-items"
>
                                  
</ul>,
                              ],
                              "className": "column-list",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <div
                              class="column-list"
>
                              <h3>
                                                            Done
                              </h3>
                              <ul
                                                            class="list-items"
                              />
</div>,
                            "tag": 5,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "firstEffect": null,
                          "index": 1,
                          "internalContextTag": 0,
                          "key": "Done",
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "addTask": [Function],
                            "items": Array [],
                            "title": "Done",
                            "updateTask": [Function],
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <ColumnList
                            addTask={[Function]}
                            items={Array []}
                            title="To Do"
                            updateTask={[Function]}
/>,
                          <ColumnList
                            addTask={[Function]}
                            items={Array []}
                            title="Done"
                            updateTask={[Function]}
/>,
                        ],
                        "className": "app-lists",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="app-lists"
>
                        <div
                                                class="column-list"
                        >
                                                <h3>
                                                                        To Do
                                                </h3>
                                                <form>
                                                                        <input
                                                                                                type="text"
                                                                                                placeholder="Create new task"
                                                                        />
                                                                        <button
                                                                                                type="submit"
                                                                        >
                                                                                                Add Task
                                                                        </button>
                                                </form>
                                                <ul
                                                                        class="list-items"
                                                />
                        </div>
                        <div
                                                class="column-list"
                        >
                                                <h3>
                                                                        Done
                                                </h3>
                                                <ul
                                                                        class="list-items"
                                                />
                        </div>
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <div
                        className="app-lists"
>
                        <ColumnList
                                                addTask={[Function]}
                                                items={Array []}
                                                title="To Do"
                                                updateTask={[Function]}
                        />
                        <ColumnList
                                                addTask={[Function]}
                                                items={Array []}
                                                title="Done"
                                                updateTask={[Function]}
                        />
</div>,
                      "className": "App-container",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="App-container"
>
                      <div
                                            class="app-lists"
                      >
                                            <div
                                                                  class="column-list"
                                            >
                                                                  <h3>
                                                                                        To Do
                                                                  </h3>
                                                                  <form>
                                                                                        <input
                                                                                                              type="text"
                                                                                                              placeholder="Create new task"
                                                                                        />
                                                                                        <button
                                                                                                              type="submit"
                                                                                        >
                                                                                                              Add Task
                                                                                        </button>
                                                                  </form>
                                                                  <ul
                                                                                        class="list-items"
                                                                  />
                                            </div>
                                            <div
                                                                  class="column-list"
                                            >
                                                                  <h3>
                                                                                        Done
                                                                  </h3>
                                                                  <ul
                                                                                        class="list-items"
                                                                  />
                                            </div>
                      </div>
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="App-header"
>
                    <img
                                        src="logo.svg"
                                        class="App-logo"
                                        alt="logo"
                    />
                    <h2>
                                        To Do List
                    </h2>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="App-header"
>
                      <img
                                            alt="logo"
                                            className="App-logo"
                                            src="logo.svg"
                      />
                      <h2>
                                            To Do List
                      </h2>
</div>,
                    <div
                      className="App-container"
>
                      <div
                                            className="app-lists"
                      >
                                            <ColumnList
                                                                  addTask={[Function]}
                                                                  items={Array []}
                                                                  title="To Do"
                                                                  updateTask={[Function]}
                                            />
                                            <ColumnList
                                                                  addTask={[Function]}
                                                                  items={Array []}
                                                                  title="Done"
                                                                  updateTask={[Function]}
                                            />
                      </div>
</div>,
                  ],
                  "className": "App",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="App"
>
                  <div
                                    class="App-header"
                  >
                                    <img
                                                      src="logo.svg"
                                                      class="App-logo"
                                                      alt="logo"
                                    />
                                    <h2>
                                                      To Do List
                                    </h2>
                  </div>
                  <div
                                    class="App-container"
                  >
                                    <div
                                                      class="app-lists"
                                    >
                                                      <div
                                                                        class="column-list"
                                                      >
                                                                        <h3>
                                                                                          To Do
                                                                        </h3>
                                                                        <form>
                                                                                          <input
                                                                                                            type="text"
                                                                                                            placeholder="Create new task"
                                                                                          />
                                                                                          <button
                                                                                                            type="submit"
                                                                                          >
                                                                                                            Add Task
                                                                                          </button>
                                                                        </form>
                                                                        <ul
                                                                                          class="list-items"
                                                                        />
                                                      </div>
                                                      <div
                                                                        class="column-list"
                                                      >
                                                                        <h3>
                                                                                          Done
                                                                        </h3>
                                                                        <ul
                                                                                          class="list-items"
                                                                        />
                                                      </div>
                                    </div>
                  </div>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
/>,
              },
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="App"
                  >
                                    <div
                                                      class="App-header"
                                    >
                                                      <img
                                                                        src="logo.svg"
                                                                        class="App-logo"
                                                                        alt="logo"
                                                      />
                                                      <h2>
                                                                        To Do List
                                                      </h2>
                                    </div>
                                    <div
                                                      class="App-container"
                                    >
                                                      <div
                                                                        class="app-lists"
                                                      >
                                                                        <div
                                                                                          class="column-list"
                                                                        >
                                                                                          <h3>
                                                                                                            To Do
                                                                                          </h3>
                                                                                          <form>
                                                                                                            <input
                                                                                                                              type="text"
                                                                                                                              placeholder="Create new task"
                                                                                                            />
                                                                                                            <button
                                                                                                                              type="submit"
                                                                                                            >
                                                                                                                              Add Task
                                                                                                            </button>
                                                                                          </form>
                                                                                          <ul
                                                                                                            class="list-items"
                                                                                          />
                                                                        </div>
                                                                        <div
                                                                                          class="column-list"
                                                                        >
                                                                                          <h3>
                                                                                                            Done
                                                                                          </h3>
                                                                                          <ul
                                                                                                            class="list-items"
                                                                                          />
                                                                        </div>
                                                      </div>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "isScheduled": false,
                "nextScheduledRoot": null,
                "pendingContext": null,
              },
              "tag": 3,
              "type": null,
              "updateQueue": null,
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "addTask": [Function],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "items": Array [],
        },
        "updateTask": [Function],
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="App"
>
          <div
                    class="App-header"
          >
                    <img
                              src="logo.svg"
                              class="App-logo"
                              alt="logo"
                    />
                    <h2>
                              To Do List
                    </h2>
          </div>
          <div
                    class="App-container"
          >
                    <div
                              class="app-lists"
                    >
                              <div
                                        class="column-list"
                              >
                                        <h3>
                                                  To Do
                                        </h3>
                                        <form>
                                                  <input
                                                            type="text"
                                                            placeholder="Create new task"
                                                  />
                                                  <button
                                                            type="submit"
                                                  >
                                                            Add Task
                                                  </button>
                                        </form>
                                        <ul
                                                  class="list-items"
                                        />
                              </div>
                              <div
                                        class="column-list"
                              >
                                        <h3>
                                                  Done
                                        </h3>
                                        <ul
                                                  class="list-items"
                                        />
                              </div>
                    </div>
          </div>
</div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="App-header"
>
              <img
                            alt="logo"
                            className="App-logo"
                            src="logo.svg"
              />
              <h2>
                            To Do List
              </h2>
</div>,
            <div
              className="App-container"
>
              <div
                            className="app-lists"
              >
                            <ColumnList
                                          addTask={[Function]}
                                          items={Array []}
                                          title="To Do"
                                          updateTask={[Function]}
                            />
                            <ColumnList
                                          addTask={[Function]}
                                          items={Array []}
                                          title="Done"
                                          updateTask={[Function]}
                            />
              </div>
</div>,
          ],
          "className": "App",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <div
              class="App-header"
>
              <img
                            src="logo.svg"
                            class="App-logo"
                            alt="logo"
              />
              <h2>
                            To Do List
              </h2>
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <img
                  alt="logo"
                  className="App-logo"
                  src="logo.svg"
/>,
                <h2>
                  To Do List
</h2>,
              ],
              "className": "App-header",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <img
                  src="logo.svg"
                  class="App-logo"
                  alt="logo"
/>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "logo",
                  "className": "App-logo",
                  "src": "logo.svg",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "img",
              },
              Object {
                "instance": <h2>
                  To Do List
</h2>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "To Do List",
                },
                "ref": null,
                "rendered": Array [
                  "To Do List",
                ],
                "type": "h2",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": <div
              class="App-container"
>
              <div
                            class="app-lists"
              >
                            <div
                                          class="column-list"
                            >
                                          <h3>
                                                        To Do
                                          </h3>
                                          <form>
                                                        <input
                                                                      type="text"
                                                                      placeholder="Create new task"
                                                        />
                                                        <button
                                                                      type="submit"
                                                        >
                                                                      Add Task
                                                        </button>
                                          </form>
                                          <ul
                                                        class="list-items"
                                          />
                            </div>
                            <div
                                          class="column-list"
                            >
                                          <h3>
                                                        Done
                                          </h3>
                                          <ul
                                                        class="list-items"
                                          />
                            </div>
              </div>
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="app-lists"
>
                <ColumnList
                                addTask={[Function]}
                                items={Array []}
                                title="To Do"
                                updateTask={[Function]}
                />
                <ColumnList
                                addTask={[Function]}
                                items={Array []}
                                title="Done"
                                updateTask={[Function]}
                />
</div>,
              "className": "App-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <div
                  class="app-lists"
>
                  <div
                                    class="column-list"
                  >
                                    <h3>
                                                      To Do
                                    </h3>
                                    <form>
                                                      <input
                                                                        type="text"
                                                                        placeholder="Create new task"
                                                      />
                                                      <button
                                                                        type="submit"
                                                      >
                                                                        Add Task
                                                      </button>
                                    </form>
                                    <ul
                                                      class="list-items"
                                    />
                  </div>
                  <div
                                    class="column-list"
                  >
                                    <h3>
                                                      Done
                                    </h3>
                                    <ul
                                                      class="list-items"
                                    />
                  </div>
</div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <ColumnList
                      addTask={[Function]}
                      items={Array []}
                      title="To Do"
                      updateTask={[Function]}
/>,
                    <ColumnList
                      addTask={[Function]}
                      items={Array []}
                      title="Done"
                      updateTask={[Function]}
/>,
                  ],
                  "className": "app-lists",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "To Do",
                    "nodeType": "function",
                    "props": Object {
                      "addTask": [Function],
                      "items": Array [],
                      "title": "To Do",
                      "updateTask": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="column-list"
>
                        <h3>
                                                To Do
                        </h3>
                        <form>
                                                <input
                                                                        type="text"
                                                                        placeholder="Create new task"
                                                />
                                                <button
                                                                        type="submit"
                                                >
                                                                        Add Task
                                                </button>
                        </form>
                        <ul
                                                class="list-items"
                        />
</div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <h3>
                            To Do
</h3>,
                          <If
                            test={true}
>
                            <form
                                                        onSubmit={[Function]}
                            >
                                                        <input
                                                                                    placeholder="Create new task"
                                                                                    type="text"
                                                        />
                                                        <button
                                                                                    type="submit"
                                                        >
                                                                                    Add Task
                                                        </button>
                            </form>
</If>,
                          <ul
                            className="list-items"
>
                            
</ul>,
                        ],
                        "className": "column-list",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <h3>
                            To Do
</h3>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "To Do",
                          },
                          "ref": null,
                          "rendered": Array [
                            "To Do",
                          ],
                          "type": "h3",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": <form
                              onSubmit={[Function]}
>
                              <input
                                                            placeholder="Create new task"
                                                            type="text"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "test": true,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": <form>
                              <input
                                                            type="text"
                                                            placeholder="Create new task"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                <input
                                  placeholder="Create new task"
                                  type="text"
/>,
                                <button
                                  type="submit"
>
                                  Add Task
</button>,
                              ],
                              "onSubmit": [Function],
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": <input
                                  type="text"
                                  placeholder="Create new task"
/>,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "placeholder": "Create new task",
                                  "type": "text",
                                },
                                "ref": null,
                                "rendered": Array [
                                  undefined,
                                ],
                                "type": "input",
                              },
                              Object {
                                "instance": <button
                                  type="submit"
>
                                  Add Task
</button>,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "Add Task",
                                  "type": "submit",
                                },
                                "ref": null,
                                "rendered": Array [
                                  "Add Task",
                                ],
                                "type": "button",
                              },
                            ],
                            "type": "form",
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": <ul
                            class="list-items"
/>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [],
                            "className": "list-items",
                          },
                          "ref": null,
                          "rendered": Array [
                            Array [],
                          ],
                          "type": "ul",
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "Done",
                    "nodeType": "function",
                    "props": Object {
                      "addTask": [Function],
                      "items": Array [],
                      "title": "Done",
                      "updateTask": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="column-list"
>
                        <h3>
                                                Done
                        </h3>
                        <ul
                                                class="list-items"
                        />
</div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <h3>
                            Done
</h3>,
                          <If
                            test={false}
>
                            <form
                                                        onSubmit={[Function]}
                            >
                                                        <input
                                                                                    placeholder="Create new task"
                                                                                    type="text"
                                                        />
                                                        <button
                                                                                    type="submit"
                                                        >
                                                                                    Add Task
                                                        </button>
                            </form>
</If>,
                          <ul
                            className="list-items"
>
                            
</ul>,
                        ],
                        "className": "column-list",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <h3>
                            Done
</h3>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Done",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Done",
                          ],
                          "type": "h3",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": <form
                              onSubmit={[Function]}
>
                              <input
                                                            placeholder="Create new task"
                                                            type="text"
                              />
                              <button
                                                            type="submit"
                              >
                                                            Add Task
                              </button>
</form>,
                            "test": false,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": <ul
                            class="list-items"
/>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [],
                            "className": "list-items",
                          },
                          "ref": null,
                          "rendered": Array [
                            Array [],
                          ],
                          "type": "ul",
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
